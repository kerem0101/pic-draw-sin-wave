

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Jun 23 23:03:15 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F45K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    19                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    20                           	psect	text0,global,reloc=2,class=CODE,delta=1
    21                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    45                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    46                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text27,global,reloc=2,class=CODE,delta=1
    48                           	psect	text28,global,reloc=2,class=CODE,delta=1
    49                           	psect	text29,global,reloc=2,class=CODE,delta=1
    50                           	psect	text30,global,reloc=2,class=CODE,delta=1
    51                           	psect	text31,global,reloc=2,class=CODE,delta=1
    52                           	psect	text32,global,reloc=2,class=CODE,delta=1
    53                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    58                           	psect	text38,global,reloc=2,class=CODE,delta=1
    59                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    60                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    61                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    62                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    63                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    64  0000                     
    65                           ; Version 2.20
    66                           ; Generated 05/05/2020 GMT
    67                           ; 
    68                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    69                           ; All rights reserved.
    70                           ; 
    71                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    72                           ; 
    73                           ; Redistribution and use in source and binary forms, with or without modification, are
    74                           ; permitted provided that the following conditions are met:
    75                           ; 
    76                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    77                           ;        conditions and the following disclaimer.
    78                           ; 
    79                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    80                           ;        of conditions and the following disclaimer in the documentation and/or other
    81                           ;        materials provided with the distribution.
    82                           ; 
    83                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    84                           ;        software without specific prior written permission.
    85                           ; 
    86                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    87                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    88                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    89                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    90                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    91                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    92                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    93                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    94                           ; 
    95                           ; 
    96                           ; Code-generator required, PIC18F45K22 Definitions
    97                           ; 
    98                           ; SFR Addresses
    99  0000                     
   100                           	psect	idataCOMRAM
   101  00358E                     __pidataCOMRAM:
   102                           	callstack 0
   103                           
   104                           ;initializer for _default_tocon
   105  00358E  0080               	dw	128
   106                           
   107                           	psect	idataBANK0
   108  00358A                     __pidataBANK0:
   109                           	callstack 0
   110                           
   111                           ;initializer for _offset
   112  00358A  00FF               	dw	255
   113                           
   114                           ;initializer for _gain
   115  00358C  00FF               	dw	255
   116                           
   117                           	psect	idataBANK1
   118  003566                     __pidataBANK1:
   119                           	callstack 0
   120                           
   121                           ;initializer for _line
   122  003566  20                 	db	32
   123  003567  20                 	db	32
   124  003568  20                 	db	32
   125  003569  20                 	db	32
   126  00356A  20                 	db	32
   127  00356B  20                 	db	32
   128  00356C  20                 	db	32
   129  00356D  20                 	db	32
   130  00356E  20                 	db	32
   131  00356F  20                 	db	32
   132  003570  20                 	db	32
   133  003571  20                 	db	32
   134  003572  20                 	db	32
   135  003573  20                 	db	32
   136  003574  20                 	db	32
   137  003575  20                 	db	32
   138  003576  00                 	db	0
   139                           
   140                           ;initializer for _prescaler
   141                           ;newmain.c: 10: unsigned short default_tocon = 0x80;;newmain.c: 11: double prescaler = 2
      +                          .0;;newmain.c: 13: void calc_time_interrupt(double freq_value) {;newmain.c: 15:     freq
      +                          _value *= 360;;newmain.c: 17:     value_TMR0 = ((10e6) / (prescaler * freq_value));;newm
      +                          ain.c: 19:     value_TMR0 = 65536 - value_TMR0;;newmain.c: 20:     T0CON = default_tocon
      +                          ;;newmain.c: 21: };newmain.c: 22: ;newmain.c: 23: unsigned int gain = 255;;newmain.c: 24
      +                          : double gain_lcd;
   142  003577  0000               	dw	0
   143  003579  4000               	dw	16384
   144                           
   145                           	psect	mediumconst
   146  007E46                     __pmediumconst:
   147                           	callstack 0
   148  007E46  00                 	db	0
   149  007E47                     _sindata:
   150                           	callstack 0
   151  007E47  80                 	db	128
   152  007E48  82                 	db	130
   153  007E49  84                 	db	132
   154  007E4A  86                 	db	134
   155  007E4B  88                 	db	136
   156  007E4C  8B                 	db	139
   157  007E4D  8D                 	db	141
   158  007E4E  8F                 	db	143
   159  007E4F  91                 	db	145
   160  007E50  93                 	db	147
   161  007E51  96                 	db	150
   162  007E52  98                 	db	152
   163  007E53  9A                 	db	154
   164  007E54  9C                 	db	156
   165  007E55  9E                 	db	158
   166  007E56  A0                 	db	160
   167  007E57  A3                 	db	163
   168  007E58  A5                 	db	165
   169  007E59  A7                 	db	167
   170  007E5A  A9                 	db	169
   171  007E5B  AB                 	db	171
   172  007E5C  AD                 	db	173
   173  007E5D  AF                 	db	175
   174  007E5E  B1                 	db	177
   175  007E5F  B3                 	db	179
   176  007E60  B5                 	db	181
   177  007E61  B7                 	db	183
   178  007E62  B9                 	db	185
   179  007E63  BB                 	db	187
   180  007E64  BD                 	db	189
   181  007E65  BF                 	db	191
   182  007E66  C1                 	db	193
   183  007E67  C3                 	db	195
   184  007E68  C5                 	db	197
   185  007E69  C7                 	db	199
   186  007E6A  C9                 	db	201
   187  007E6B  CA                 	db	202
   188  007E6C  CC                 	db	204
   189  007E6D  CE                 	db	206
   190  007E6E  D0                 	db	208
   191  007E6F  D1                 	db	209
   192  007E70  D3                 	db	211
   193  007E71  D5                 	db	213
   194  007E72  D6                 	db	214
   195  007E73  D8                 	db	216
   196  007E74  DA                 	db	218
   197  007E75  DB                 	db	219
   198  007E76  DD                 	db	221
   199  007E77  DE                 	db	222
   200  007E78  E0                 	db	224
   201  007E79  E1                 	db	225
   202  007E7A  E3                 	db	227
   203  007E7B  E4                 	db	228
   204  007E7C  E5                 	db	229
   205  007E7D  E7                 	db	231
   206  007E7E  E8                 	db	232
   207  007E7F  E9                 	db	233
   208  007E80  EA                 	db	234
   209  007E81  EC                 	db	236
   210  007E82  ED                 	db	237
   211  007E83  EE                 	db	238
   212  007E84  EF                 	db	239
   213  007E85  F0                 	db	240
   214  007E86  F1                 	db	241
   215  007E87  F2                 	db	242
   216  007E88  F3                 	db	243
   217  007E89  F4                 	db	244
   218  007E8A  F5                 	db	245
   219  007E8B  F6                 	db	246
   220  007E8C  F7                 	db	247
   221  007E8D  F7                 	db	247
   222  007E8E  F8                 	db	248
   223  007E8F  F9                 	db	249
   224  007E90  F9                 	db	249
   225  007E91  FA                 	db	250
   226  007E92  FB                 	db	251
   227  007E93  FB                 	db	251
   228  007E94  FC                 	db	252
   229  007E95  FC                 	db	252
   230  007E96  FD                 	db	253
   231  007E97  FD                 	db	253
   232  007E98  FD                 	db	253
   233  007E99  FE                 	db	254
   234  007E9A  FE                 	db	254
   235  007E9B  FE                 	db	254
   236  007E9C  FF                 	db	255
   237  007E9D  FF                 	db	255
   238  007E9E  FF                 	db	255
   239  007E9F  FF                 	db	255
   240  007EA0  FF                 	db	255
   241  007EA1  FF                 	db	255
   242  007EA2  FF                 	db	255
   243  007EA3  FF                 	db	255
   244  007EA4  FF                 	db	255
   245  007EA5  FF                 	db	255
   246  007EA6  FF                 	db	255
   247  007EA7  FE                 	db	254
   248  007EA8  FE                 	db	254
   249  007EA9  FE                 	db	254
   250  007EAA  FD                 	db	253
   251  007EAB  FD                 	db	253
   252  007EAC  FD                 	db	253
   253  007EAD  FC                 	db	252
   254  007EAE  FC                 	db	252
   255  007EAF  FB                 	db	251
   256  007EB0  FB                 	db	251
   257  007EB1  FA                 	db	250
   258  007EB2  F9                 	db	249
   259  007EB3  F9                 	db	249
   260  007EB4  F8                 	db	248
   261  007EB5  F7                 	db	247
   262  007EB6  F7                 	db	247
   263  007EB7  F6                 	db	246
   264  007EB8  F5                 	db	245
   265  007EB9  F4                 	db	244
   266  007EBA  F3                 	db	243
   267  007EBB  F2                 	db	242
   268  007EBC  F1                 	db	241
   269  007EBD  F0                 	db	240
   270  007EBE  EF                 	db	239
   271  007EBF  EE                 	db	238
   272  007EC0  ED                 	db	237
   273  007EC1  EC                 	db	236
   274  007EC2  EA                 	db	234
   275  007EC3  E9                 	db	233
   276  007EC4  E8                 	db	232
   277  007EC5  E7                 	db	231
   278  007EC6  E5                 	db	229
   279  007EC7  E4                 	db	228
   280  007EC8  E3                 	db	227
   281  007EC9  E1                 	db	225
   282  007ECA  E0                 	db	224
   283  007ECB  DE                 	db	222
   284  007ECC  DD                 	db	221
   285  007ECD  DB                 	db	219
   286  007ECE  DA                 	db	218
   287  007ECF  D8                 	db	216
   288  007ED0  D6                 	db	214
   289  007ED1  D5                 	db	213
   290  007ED2  D3                 	db	211
   291  007ED3  D1                 	db	209
   292  007ED4  D0                 	db	208
   293  007ED5  CE                 	db	206
   294  007ED6  CC                 	db	204
   295  007ED7  CA                 	db	202
   296  007ED8  C9                 	db	201
   297  007ED9  C7                 	db	199
   298  007EDA  C5                 	db	197
   299  007EDB  C3                 	db	195
   300  007EDC  C1                 	db	193
   301  007EDD  BF                 	db	191
   302  007EDE  BD                 	db	189
   303  007EDF  BB                 	db	187
   304  007EE0  B9                 	db	185
   305  007EE1  B7                 	db	183
   306  007EE2  B5                 	db	181
   307  007EE3  B3                 	db	179
   308  007EE4  B1                 	db	177
   309  007EE5  AF                 	db	175
   310  007EE6  AD                 	db	173
   311  007EE7  AB                 	db	171
   312  007EE8  A9                 	db	169
   313  007EE9  A7                 	db	167
   314  007EEA  A5                 	db	165
   315  007EEB  A3                 	db	163
   316  007EEC  A0                 	db	160
   317  007EED  9E                 	db	158
   318  007EEE  9C                 	db	156
   319  007EEF  9A                 	db	154
   320  007EF0  98                 	db	152
   321  007EF1  96                 	db	150
   322  007EF2  93                 	db	147
   323  007EF3  91                 	db	145
   324  007EF4  8F                 	db	143
   325  007EF5  8D                 	db	141
   326  007EF6  8B                 	db	139
   327  007EF7  88                 	db	136
   328  007EF8  86                 	db	134
   329  007EF9  84                 	db	132
   330  007EFA  82                 	db	130
   331  007EFB  80                 	db	128
   332  007EFC  7D                 	db	125
   333  007EFD  7B                 	db	123
   334  007EFE  79                 	db	121
   335  007EFF  77                 	db	119
   336  007F00  74                 	db	116
   337  007F01  72                 	db	114
   338  007F02  70                 	db	112
   339  007F03  6E                 	db	110
   340  007F04  6C                 	db	108
   341  007F05  69                 	db	105
   342  007F06  67                 	db	103
   343  007F07  65                 	db	101
   344  007F08  63                 	db	99
   345  007F09  61                 	db	97
   346  007F0A  5F                 	db	95
   347  007F0B  5C                 	db	92
   348  007F0C  5A                 	db	90
   349  007F0D  58                 	db	88
   350  007F0E  56                 	db	86
   351  007F0F  54                 	db	84
   352  007F10  52                 	db	82
   353  007F11  50                 	db	80
   354  007F12  4E                 	db	78
   355  007F13  4C                 	db	76
   356  007F14  4A                 	db	74
   357  007F15  48                 	db	72
   358  007F16  46                 	db	70
   359  007F17  44                 	db	68
   360  007F18  42                 	db	66
   361  007F19  40                 	db	64
   362  007F1A  3E                 	db	62
   363  007F1B  3C                 	db	60
   364  007F1C  3A                 	db	58
   365  007F1D  38                 	db	56
   366  007F1E  36                 	db	54
   367  007F1F  35                 	db	53
   368  007F20  33                 	db	51
   369  007F21  31                 	db	49
   370  007F22  2F                 	db	47
   371  007F23  2E                 	db	46
   372  007F24  2C                 	db	44
   373  007F25  2A                 	db	42
   374  007F26  29                 	db	41
   375  007F27  27                 	db	39
   376  007F28  25                 	db	37
   377  007F29  24                 	db	36
   378  007F2A  22                 	db	34
   379  007F2B  21                 	db	33
   380  007F2C  1F                 	db	31
   381  007F2D  1E                 	db	30
   382  007F2E  1C                 	db	28
   383  007F2F  1B                 	db	27
   384  007F30  1A                 	db	26
   385  007F31  18                 	db	24
   386  007F32  17                 	db	23
   387  007F33  16                 	db	22
   388  007F34  15                 	db	21
   389  007F35  13                 	db	19
   390  007F36  12                 	db	18
   391  007F37  11                 	db	17
   392  007F38  10                 	db	16
   393  007F39  0F                 	db	15
   394  007F3A  0E                 	db	14
   395  007F3B  0D                 	db	13
   396  007F3C  0C                 	db	12
   397  007F3D  0B                 	db	11
   398  007F3E  0A                 	db	10
   399  007F3F  09                 	db	9
   400  007F40  08                 	db	8
   401  007F41  08                 	db	8
   402  007F42  07                 	db	7
   403  007F43  06                 	db	6
   404  007F44  06                 	db	6
   405  007F45  05                 	db	5
   406  007F46  04                 	db	4
   407  007F47  04                 	db	4
   408  007F48  03                 	db	3
   409  007F49  03                 	db	3
   410  007F4A  02                 	db	2
   411  007F4B  02                 	db	2
   412  007F4C  02                 	db	2
   413  007F4D  01                 	db	1
   414  007F4E  01                 	db	1
   415  007F4F  01                 	db	1
   416  007F50  00                 	db	0
   417  007F51  00                 	db	0
   418  007F52  00                 	db	0
   419  007F53  00                 	db	0
   420  007F54  00                 	db	0
   421  007F55  00                 	db	0
   422  007F56  00                 	db	0
   423  007F57  00                 	db	0
   424  007F58  00                 	db	0
   425  007F59  00                 	db	0
   426  007F5A  00                 	db	0
   427  007F5B  01                 	db	1
   428  007F5C  01                 	db	1
   429  007F5D  01                 	db	1
   430  007F5E  02                 	db	2
   431  007F5F  02                 	db	2
   432  007F60  02                 	db	2
   433  007F61  03                 	db	3
   434  007F62  03                 	db	3
   435  007F63  04                 	db	4
   436  007F64  04                 	db	4
   437  007F65  05                 	db	5
   438  007F66  06                 	db	6
   439  007F67  06                 	db	6
   440  007F68  07                 	db	7
   441  007F69  08                 	db	8
   442  007F6A  08                 	db	8
   443  007F6B  09                 	db	9
   444  007F6C  0A                 	db	10
   445  007F6D  0B                 	db	11
   446  007F6E  0C                 	db	12
   447  007F6F  0D                 	db	13
   448  007F70  0E                 	db	14
   449  007F71  0F                 	db	15
   450  007F72  10                 	db	16
   451  007F73  11                 	db	17
   452  007F74  12                 	db	18
   453  007F75  13                 	db	19
   454  007F76  15                 	db	21
   455  007F77  16                 	db	22
   456  007F78  17                 	db	23
   457  007F79  18                 	db	24
   458  007F7A  1A                 	db	26
   459  007F7B  1B                 	db	27
   460  007F7C  1C                 	db	28
   461  007F7D  1E                 	db	30
   462  007F7E  1F                 	db	31
   463  007F7F  21                 	db	33
   464  007F80  22                 	db	34
   465  007F81  24                 	db	36
   466  007F82  25                 	db	37
   467  007F83  27                 	db	39
   468  007F84  29                 	db	41
   469  007F85  2A                 	db	42
   470  007F86  2C                 	db	44
   471  007F87  2E                 	db	46
   472  007F88  2F                 	db	47
   473  007F89  31                 	db	49
   474  007F8A  33                 	db	51
   475  007F8B  35                 	db	53
   476  007F8C  36                 	db	54
   477  007F8D  38                 	db	56
   478  007F8E  3A                 	db	58
   479  007F8F  3C                 	db	60
   480  007F90  3E                 	db	62
   481  007F91  40                 	db	64
   482  007F92  42                 	db	66
   483  007F93  44                 	db	68
   484  007F94  46                 	db	70
   485  007F95  48                 	db	72
   486  007F96  4A                 	db	74
   487  007F97  4C                 	db	76
   488  007F98  4E                 	db	78
   489  007F99  50                 	db	80
   490  007F9A  52                 	db	82
   491  007F9B  54                 	db	84
   492  007F9C  56                 	db	86
   493  007F9D  58                 	db	88
   494  007F9E  5A                 	db	90
   495  007F9F  5C                 	db	92
   496  007FA0  5F                 	db	95
   497  007FA1  61                 	db	97
   498  007FA2  63                 	db	99
   499  007FA3  65                 	db	101
   500  007FA4  67                 	db	103
   501  007FA5  69                 	db	105
   502  007FA6  6C                 	db	108
   503  007FA7  6E                 	db	110
   504  007FA8  70                 	db	112
   505  007FA9  72                 	db	114
   506  007FAA  74                 	db	116
   507  007FAB  77                 	db	119
   508  007FAC  79                 	db	121
   509  007FAD  7B                 	db	123
   510  007FAE  7D                 	db	125
   511  007FAF                     __end_of_sindata:
   512                           	callstack 0
   513  007FAF                     STR_2:
   514  007FAF  47                 	db	71	;'G'
   515  007FB0  61                 	db	97	;'a'
   516  007FB1  69                 	db	105	;'i'
   517  007FB2  6E                 	db	110	;'n'
   518  007FB3  28                 	db	40
   519  007FB4  50                 	db	80	;'P'
   520  007FB5  2D                 	db	45
   521  007FB6  50                 	db	80	;'P'
   522  007FB7  29                 	db	41
   523  007FB8  3A                 	db	58	;':'
   524  007FB9  20                 	db	32
   525  007FBA  25                 	db	37
   526  007FBB  34                 	db	52	;'4'
   527  007FBC  2E                 	db	46
   528  007FBD  32                 	db	50	;'2'
   529  007FBE  66                 	db	102	;'f'
   530  007FBF  56                 	db	86	;'V'
   531  007FC0  00                 	db	0
   532  007FC1                     STR_3:
   533  007FC1  4F                 	db	79	;'O'
   534  007FC2  66                 	db	102	;'f'
   535  007FC3  66                 	db	102	;'f'
   536  007FC4  73                 	db	115	;'s'
   537  007FC5  65                 	db	101	;'e'
   538  007FC6  74                 	db	116	;'t'
   539  007FC7  3A                 	db	58	;':'
   540  007FC8  20                 	db	32
   541  007FC9  25                 	db	37
   542  007FCA  34                 	db	52	;'4'
   543  007FCB  2E                 	db	46
   544  007FCC  32                 	db	50	;'2'
   545  007FCD  66                 	db	102	;'f'
   546  007FCE  56                 	db	86	;'V'
   547  007FCF  00                 	db	0
   548  007FD0                     STR_1:
   549  007FD0  53                 	db	83	;'S'
   550  007FD1  49                 	db	73	;'I'
   551  007FD2  4E                 	db	78	;'N'
   552  007FD3  20                 	db	32
   553  007FD4  47                 	db	71	;'G'
   554  007FD5  45                 	db	69	;'E'
   555  007FD6  4E                 	db	78	;'N'
   556  007FD7  45                 	db	69	;'E'
   557  007FD8  52                 	db	82	;'R'
   558  007FD9  41                 	db	65	;'A'
   559  007FDA  54                 	db	84	;'T'
   560  007FDB  4F                 	db	79	;'O'
   561  007FDC  52                 	db	82	;'R'
   562  007FDD  00                 	db	0
   563  007FDE                     STR_4:
   564  007FDE  46                 	db	70	;'F'
   565  007FDF  72                 	db	114	;'r'
   566  007FE0  65                 	db	101	;'e'
   567  007FE1  71                 	db	113	;'q'
   568  007FE2  3A                 	db	58	;':'
   569  007FE3  20                 	db	32
   570  007FE4  25                 	db	37
   571  007FE5  34                 	db	52	;'4'
   572  007FE6  2E                 	db	46
   573  007FE7  32                 	db	50	;'2'
   574  007FE8  66                 	db	102	;'f'
   575  007FE9  48                 	db	72	;'H'
   576  007FEA  7A                 	db	122	;'z'
   577  007FEB  00                 	db	0
   578  007FEC                     STR_5:
   579  007FEC  49                 	db	73	;'I'
   580  007FED  4E                 	db	78	;'N'
   581  007FEE  46                 	db	70	;'F'
   582  007FEF  00                 	db	0
   583  007FF0                     STR_9:
   584  007FF0  4E                 	db	78	;'N'
   585  007FF1  41                 	db	65	;'A'
   586  007FF2  4E                 	db	78	;'N'
   587  007FF3  00                 	db	0
   588  007FF4                     STR_6:
   589  007FF4  69                 	db	105	;'i'
   590  007FF5  6E                 	db	110	;'n'
   591  007FF6  66                 	db	102	;'f'
   592  007FF7  00                 	db	0
   593  007FF8                     STR_10:
   594  007FF8  6E                 	db	110	;'n'
   595  007FF9  61                 	db	97	;'a'
   596  007FFA  6E                 	db	110	;'n'
   597  007FFB  00                 	db	0
   598  007FFC                     STR_13:
   599  007FFC  6C                 	db	108	;'l'
   600  007FFD  66                 	db	102	;'f'
   601  007FFE  00                 	db	0
   602  007FFF  00                 	db	0	; dummy byte at the end
   603  0000                     
   604                           	psect	nvBANK0
   605  0000F9                     __pnvBANK0:
   606                           	callstack 0
   607  0000F9                     _value_TMR0:
   608                           	callstack 0
   609  0000F9                     	ds	2
   610  0000                     _ANSELB	set	3897
   611  0000                     _ANSELD	set	3899
   612  0000                     _ANSELA	set	3896
   613  0000                     _PORTBbits	set	3969
   614  0000                     _TMR0H	set	4055
   615  0000                     _TMR0L	set	4054
   616  0000                     _ADRESL	set	4035
   617  0000                     _ADRESH	set	4036
   618  0000                     _ADCON0bits	set	4034
   619  0000                     _PORTB	set	3969
   620  0000                     _TRISB	set	3987
   621  0000                     _PORTD	set	3971
   622  0000                     _TRISD	set	3989
   623  0000                     _ADCON0	set	4034
   624  0000                     _ADCON1	set	4033
   625  0000                     _ADCON2	set	4032
   626  0000                     _PORTA	set	3968
   627  0000                     _TRISA	set	3986
   628  0000                     _T0CON	set	4053
   629  0000                     _TMR0IF	set	32658
   630  0000                     _GODONE	set	32273
   631  0000                     _GIE	set	32663
   632  0000                     _TMR0IP	set	32650
   633  0000                     _TMR0IE	set	32661
   634                           
   635                           ; #config settings
   636                           
   637                           	psect	cinit
   638  003034                     __pcinit:
   639                           	callstack 0
   640  003034                     start_initialization:
   641                           	callstack 0
   642  003034                     __initialization:
   643                           	callstack 0
   644                           
   645                           ; Initialize objects allocated to BANK1 (21 bytes)
   646                           ; load TBLPTR registers with __pidataBANK1
   647  003034  0E66               	movlw	low __pidataBANK1
   648  003036  6EF6               	movwf	tblptrl,c
   649  003038  0E35               	movlw	high __pidataBANK1
   650  00303A  6EF7               	movwf	tblptrh,c
   651  00303C  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   652  00303E  6EF8               	movwf	tblptru,c
   653  003040  EE01  F066         	lfsr	0,__pdataBANK1
   654  003044  EE10 F015          	lfsr	1,21
   655  003048                     copy_data0:
   656  003048  0009               	tblrd		*+
   657  00304A  CFF5 FFEE          	movff	tablat,postinc0
   658  00304E  50E5               	movf	postdec1,w,c
   659  003050  50E1               	movf	fsr1l,w,c
   660  003052  E1FA               	bnz	copy_data0
   661                           
   662                           ; Initialize objects allocated to BANK0 (4 bytes)
   663                           ; load TBLPTR registers with __pidataBANK0
   664  003054  0E8A               	movlw	low __pidataBANK0
   665  003056  6EF6               	movwf	tblptrl,c
   666  003058  0E35               	movlw	high __pidataBANK0
   667  00305A  6EF7               	movwf	tblptrh,c
   668  00305C  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   669  00305E  6EF8               	movwf	tblptru,c
   670  003060  EE00  F0F5         	lfsr	0,__pdataBANK0
   671  003064  EE10 F004          	lfsr	1,4
   672  003068                     copy_data1:
   673  003068  0009               	tblrd		*+
   674  00306A  CFF5 FFEE          	movff	tablat,postinc0
   675  00306E  50E5               	movf	postdec1,w,c
   676  003070  50E1               	movf	fsr1l,w,c
   677  003072  E1FA               	bnz	copy_data1
   678                           
   679                           ; Initialize objects allocated to COMRAM (2 bytes)
   680                           ; load TBLPTR registers with __pidataCOMRAM
   681  003074  0E8E               	movlw	low __pidataCOMRAM
   682  003076  6EF6               	movwf	tblptrl,c
   683  003078  0E35               	movlw	high __pidataCOMRAM
   684  00307A  6EF7               	movwf	tblptrh,c
   685  00307C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   686  00307E  6EF8               	movwf	tblptru,c
   687  003080  0009               	tblrd		*+	;fetch initializer
   688  003082  CFF5 F04F          	movff	tablat,__pdataCOMRAM
   689  003086  0009               	tblrd		*+	;fetch initializer
   690  003088  CFF5 F050          	movff	tablat,__pdataCOMRAM+1
   691                           
   692                           ; Clear objects allocated to BANK1 (102 bytes)
   693  00308C  EE01  F000         	lfsr	0,__pbssBANK1
   694  003090  0E66               	movlw	102
   695  003092                     clear_0:
   696  003092  6AEE               	clrf	postinc0,c
   697  003094  06E8               	decf	wreg,f,c
   698  003096  E1FD               	bnz	clear_0
   699                           
   700                           ; Clear objects allocated to BANK0 (6 bytes)
   701  003098  0100               	movlb	0
   702  00309A  6BF4               	clrf	(__pbssBANK0+5)& (0+255),b
   703  00309C  6BF3               	clrf	(__pbssBANK0+4)& (0+255),b
   704  00309E  6BF2               	clrf	(__pbssBANK0+3)& (0+255),b
   705  0030A0  6BF1               	clrf	(__pbssBANK0+2)& (0+255),b
   706  0030A2  6BF0               	clrf	(__pbssBANK0+1)& (0+255),b
   707  0030A4  6BEF               	clrf	__pbssBANK0& (0+255),b
   708                           
   709                           ; Clear objects allocated to COMRAM (11 bytes)
   710  0030A6  EE00  F044         	lfsr	0,__pbssCOMRAM
   711  0030AA  0E0B               	movlw	11
   712  0030AC                     clear_1:
   713  0030AC  6AEE               	clrf	postinc0,c
   714  0030AE  06E8               	decf	wreg,f,c
   715  0030B0  E1FD               	bnz	clear_1
   716  0030B2                     end_of_initialization:
   717                           	callstack 0
   718  0030B2                     __end_of__initialization:
   719                           	callstack 0
   720  0030B2  9051               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   721  0030B4  9251               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   722  0030B6  0E00               	movlw	low (__Lmediumconst shr (0+16))
   723  0030B8  6EF8               	movwf	tblptru,c
   724  0030BA  0100               	movlb	0
   725  0030BC  EFA9  F00F         	goto	_main	;jump to C main() function
   726                           
   727                           	psect	bssCOMRAM
   728  000044                     __pbssCOMRAM:
   729                           	callstack 0
   730  000044                     _new_freq:
   731                           	callstack 0
   732  000044                     	ds	4
   733  000048                     _flags:
   734                           	callstack 0
   735  000048                     	ds	2
   736  00004A                     _data:
   737                           	callstack 0
   738  00004A                     	ds	2
   739  00004C                     _i:
   740                           	callstack 0
   741  00004C                     	ds	2
   742  00004E                     _value:
   743                           	callstack 0
   744  00004E                     	ds	1
   745                           
   746                           	psect	dataCOMRAM
   747  00004F                     __pdataCOMRAM:
   748                           	callstack 0
   749  00004F                     _default_tocon:
   750                           	callstack 0
   751  00004F                     	ds	2
   752                           
   753                           	psect	bssBANK0
   754  0000EF                     __pbssBANK0:
   755                           	callstack 0
   756  0000EF                     _nout:
   757                           	callstack 0
   758  0000EF                     	ds	2
   759  0000F1                     _width:
   760                           	callstack 0
   761  0000F1                     	ds	2
   762  0000F3                     _prec:
   763                           	callstack 0
   764  0000F3                     	ds	2
   765                           
   766                           	psect	dataBANK0
   767  0000F5                     __pdataBANK0:
   768                           	callstack 0
   769  0000F5                     _offset:
   770                           	callstack 0
   771  0000F5                     	ds	2
   772  0000F7                     _gain:
   773                           	callstack 0
   774  0000F7                     	ds	2
   775                           
   776                           	psect	bssBANK1
   777  000100                     __pbssBANK1:
   778                           	callstack 0
   779  000100                     _Analog:
   780                           	callstack 0
   781  000100                     	ds	6
   782  000106                     floorf@F527:
   783                           	callstack 0
   784  000106                     	ds	4
   785  00010A                     ___fpclassifyf@F465:
   786                           	callstack 0
   787  00010A                     	ds	4
   788  00010E                     _offset_lcd:
   789                           	callstack 0
   790  00010E                     	ds	4
   791  000112                     _gain_lcd:
   792                           	callstack 0
   793  000112                     	ds	4
   794  000116                     _dbuf:
   795                           	callstack 0
   796  000116                     	ds	80
   797                           
   798                           	psect	dataBANK1
   799  000166                     __pdataBANK1:
   800                           	callstack 0
   801  000166                     _line:
   802                           	callstack 0
   803  000166                     	ds	17
   804  000177                     _prescaler:
   805                           	callstack 0
   806  000177                     	ds	4
   807                           
   808                           	psect	cstackBANK1
   809  00017B                     __pcstackBANK1:
   810                           	callstack 0
   811  00017B                     ?_sprintf:
   812                           	callstack 0
   813  00017B                     sprintf@s:
   814                           	callstack 0
   815                           
   816                           ; 2 bytes @ 0x0
   817  00017B                     	ds	2
   818  00017D                     sprintf@fmt:
   819                           	callstack 0
   820                           
   821                           ; 2 bytes @ 0x2
   822  00017D                     	ds	6
   823  000183                     sprintf@ap:
   824                           	callstack 0
   825                           
   826                           ; 2 bytes @ 0x8
   827  000183                     	ds	2
   828  000185                     sprintf@f:
   829                           	callstack 0
   830                           
   831                           ; 6 bytes @ 0xA
   832  000185                     	ds	6
   833                           
   834                           	psect	cstackBANK0
   835  000060                     __pcstackBANK0:
   836                           	callstack 0
   837  000060                     ??___flmul:
   838  000060                     ??_floorf:
   839                           
   840                           ; 1 bytes @ 0x0
   841  000060                     	ds	4
   842  000064                     ___flmul@sign:
   843                           	callstack 0
   844                           
   845                           ; 1 bytes @ 0x4
   846  000064                     	ds	1
   847  000065                     ___flmul@aexp:
   848                           	callstack 0
   849                           
   850                           ; 1 bytes @ 0x5
   851  000065                     	ds	1
   852  000066                     ___flmul@grs:
   853                           	callstack 0
   854  000066                     floorf@m:
   855                           	callstack 0
   856                           
   857                           ; 4 bytes @ 0x6
   858  000066                     	ds	4
   859  00006A                     ___flmul@bexp:
   860                           	callstack 0
   861  00006A                     floorf@e:
   862                           	callstack 0
   863                           
   864                           ; 2 bytes @ 0xA
   865  00006A                     	ds	1
   866  00006B                     ___flmul@prod:
   867                           	callstack 0
   868                           
   869                           ; 4 bytes @ 0xB
   870  00006B                     	ds	1
   871  00006C                     floorf@u:
   872                           	callstack 0
   873                           
   874                           ; 4 bytes @ 0xC
   875  00006C                     	ds	3
   876  00006F                     ___flmul@temp:
   877                           	callstack 0
   878                           
   879                           ; 2 bytes @ 0xF
   880  00006F                     	ds	2
   881  000071                     ?___fladd:
   882                           	callstack 0
   883  000071                     ?___fltol:
   884                           	callstack 0
   885  000071                     ___flge@ff1:
   886                           	callstack 0
   887  000071                     ___fltol@f1:
   888                           	callstack 0
   889  000071                     ___fladd@b:
   890                           	callstack 0
   891                           
   892                           ; 4 bytes @ 0x11
   893  000071                     	ds	4
   894  000075                     ??___fltol:
   895  000075                     ___flge@ff2:
   896                           	callstack 0
   897  000075                     ___fladd@a:
   898                           	callstack 0
   899                           
   900                           ; 4 bytes @ 0x15
   901  000075                     	ds	4
   902  000079                     ??___fladd:
   903  000079                     ??___flge:
   904  000079                     ___fltol@sign1:
   905                           	callstack 0
   906                           
   907                           ; 1 bytes @ 0x19
   908  000079                     	ds	1
   909  00007A                     ___fltol@exp1:
   910                           	callstack 0
   911                           
   912                           ; 1 bytes @ 0x1A
   913  00007A                     	ds	1
   914  00007B                     calc_time_interrupt@freq_value:
   915                           	callstack 0
   916                           
   917                           ; 4 bytes @ 0x1B
   918  00007B                     	ds	2
   919  00007D                     ___fladd@signs:
   920                           	callstack 0
   921                           
   922                           ; 1 bytes @ 0x1D
   923  00007D                     	ds	1
   924  00007E                     ___fladd@aexp:
   925                           	callstack 0
   926                           
   927                           ; 1 bytes @ 0x1E
   928  00007E                     	ds	1
   929  00007F                     ___fladd@bexp:
   930                           	callstack 0
   931                           
   932                           ; 1 bytes @ 0x1F
   933  00007F                     	ds	1
   934  000080                     ___fladd@grs:
   935                           	callstack 0
   936                           
   937                           ; 1 bytes @ 0x20
   938  000080                     	ds	1
   939  000081                     ?___flsub:
   940                           	callstack 0
   941  000081                     ___flsub@b:
   942                           	callstack 0
   943                           
   944                           ; 4 bytes @ 0x21
   945  000081                     	ds	4
   946  000085                     ___flsub@a:
   947                           	callstack 0
   948                           
   949                           ; 4 bytes @ 0x25
   950  000085                     	ds	4
   951  000089                     ?_efgtoa:
   952                           	callstack 0
   953  000089                     efgtoa@fp:
   954                           	callstack 0
   955                           
   956                           ; 2 bytes @ 0x29
   957  000089                     	ds	2
   958  00008B                     efgtoa@f:
   959                           	callstack 0
   960                           
   961                           ; 4 bytes @ 0x2B
   962  00008B                     	ds	4
   963  00008F                     efgtoa@c:
   964                           	callstack 0
   965                           
   966                           ; 1 bytes @ 0x2F
   967  00008F                     	ds	1
   968  000090                     ??_efgtoa:
   969                           
   970                           ; 1 bytes @ 0x30
   971  000090                     	ds	5
   972  000095                     _efgtoa$880:
   973                           	callstack 0
   974                           
   975                           ; 2 bytes @ 0x35
   976  000095                     	ds	2
   977  000097                     _efgtoa$881:
   978                           	callstack 0
   979                           
   980                           ; 2 bytes @ 0x37
   981  000097                     	ds	2
   982  000099                     _efgtoa$886:
   983                           	callstack 0
   984                           
   985                           ; 2 bytes @ 0x39
   986  000099                     	ds	2
   987  00009B                     _efgtoa$890:
   988                           	callstack 0
   989                           
   990                           ; 2 bytes @ 0x3B
   991  00009B                     	ds	2
   992  00009D                     _efgtoa$891:
   993                           	callstack 0
   994                           
   995                           ; 2 bytes @ 0x3D
   996  00009D                     	ds	2
   997  00009F                     _efgtoa$892:
   998                           	callstack 0
   999                           
  1000                           ; 2 bytes @ 0x3F
  1001  00009F                     	ds	2
  1002  0000A1                     efgtoa@t:
  1003                           	callstack 0
  1004                           
  1005                           ; 2 bytes @ 0x41
  1006  0000A1                     	ds	2
  1007  0000A3                     efgtoa@pp:
  1008                           	callstack 0
  1009                           
  1010                           ; 2 bytes @ 0x43
  1011  0000A3                     	ds	2
  1012  0000A5                     efgtoa@ne:
  1013                           	callstack 0
  1014                           
  1015                           ; 2 bytes @ 0x45
  1016  0000A5                     	ds	2
  1017  0000A7                     efgtoa@m:
  1018                           	callstack 0
  1019                           
  1020                           ; 2 bytes @ 0x47
  1021  0000A7                     	ds	2
  1022  0000A9                     efgtoa@ou:
  1023                           	callstack 0
  1024                           
  1025                           ; 4 bytes @ 0x49
  1026  0000A9                     	ds	4
  1027  0000AD                     efgtoa@d:
  1028                           	callstack 0
  1029                           
  1030                           ; 2 bytes @ 0x4D
  1031  0000AD                     	ds	2
  1032  0000AF                     efgtoa@sign:
  1033                           	callstack 0
  1034                           
  1035                           ; 2 bytes @ 0x4F
  1036  0000AF                     	ds	2
  1037  0000B1                     efgtoa@p:
  1038                           	callstack 0
  1039                           
  1040                           ; 2 bytes @ 0x51
  1041  0000B1                     	ds	2
  1042  0000B3                     efgtoa@w:
  1043                           	callstack 0
  1044                           
  1045                           ; 2 bytes @ 0x53
  1046  0000B3                     	ds	2
  1047  0000B5                     efgtoa@nmode:
  1048                           	callstack 0
  1049                           
  1050                           ; 1 bytes @ 0x55
  1051  0000B5                     	ds	1
  1052  0000B6                     efgtoa@mode:
  1053                           	callstack 0
  1054                           
  1055                           ; 1 bytes @ 0x56
  1056  0000B6                     	ds	1
  1057  0000B7                     efgtoa@h:
  1058                           	callstack 0
  1059                           
  1060                           ; 4 bytes @ 0x57
  1061  0000B7                     	ds	4
  1062  0000BB                     efgtoa@l:
  1063                           	callstack 0
  1064                           
  1065                           ; 4 bytes @ 0x5B
  1066  0000BB                     	ds	4
  1067  0000BF                     efgtoa@i:
  1068                           	callstack 0
  1069                           
  1070                           ; 2 bytes @ 0x5F
  1071  0000BF                     	ds	2
  1072  0000C1                     efgtoa@g:
  1073                           	callstack 0
  1074                           
  1075                           ; 4 bytes @ 0x61
  1076  0000C1                     	ds	4
  1077  0000C5                     efgtoa@e:
  1078                           	callstack 0
  1079                           
  1080                           ; 2 bytes @ 0x65
  1081  0000C5                     	ds	2
  1082  0000C7                     efgtoa@n:
  1083                           	callstack 0
  1084                           
  1085                           ; 2 bytes @ 0x67
  1086  0000C7                     	ds	2
  1087  0000C9                     efgtoa@u:
  1088                           	callstack 0
  1089                           
  1090                           ; 4 bytes @ 0x69
  1091  0000C9                     	ds	4
  1092  0000CD                     ?_vfpfcnvrt:
  1093                           	callstack 0
  1094  0000CD                     vfpfcnvrt@fp:
  1095                           	callstack 0
  1096                           
  1097                           ; 2 bytes @ 0x6D
  1098  0000CD                     	ds	2
  1099  0000CF                     vfpfcnvrt@fmt:
  1100                           	callstack 0
  1101                           
  1102                           ; 2 bytes @ 0x6F
  1103  0000CF                     	ds	2
  1104  0000D1                     vfpfcnvrt@ap:
  1105                           	callstack 0
  1106                           
  1107                           ; 2 bytes @ 0x71
  1108  0000D1                     	ds	2
  1109  0000D3                     ??_vfpfcnvrt:
  1110                           
  1111                           ; 1 bytes @ 0x73
  1112  0000D3                     	ds	4
  1113  0000D7                     _vfpfcnvrt$906:
  1114                           	callstack 0
  1115                           
  1116                           ; 2 bytes @ 0x77
  1117  0000D7                     	ds	2
  1118  0000D9                     _vfpfcnvrt$907:
  1119                           	callstack 0
  1120                           
  1121                           ; 2 bytes @ 0x79
  1122  0000D9                     	ds	2
  1123  0000DB                     _vfpfcnvrt$911:
  1124                           	callstack 0
  1125                           
  1126                           ; 2 bytes @ 0x7B
  1127  0000DB                     	ds	2
  1128  0000DD                     vfpfcnvrt@f:
  1129                           	callstack 0
  1130                           
  1131                           ; 4 bytes @ 0x7D
  1132  0000DD                     	ds	4
  1133  0000E1                     vfpfcnvrt@ct:
  1134                           	callstack 0
  1135                           
  1136                           ; 3 bytes @ 0x81
  1137  0000E1                     	ds	3
  1138  0000E4                     vfpfcnvrt@c:
  1139                           	callstack 0
  1140                           
  1141                           ; 1 bytes @ 0x84
  1142  0000E4                     	ds	1
  1143  0000E5                     ?_vfprintf:
  1144                           	callstack 0
  1145  0000E5                     vfprintf@fp:
  1146                           	callstack 0
  1147                           
  1148                           ; 2 bytes @ 0x85
  1149  0000E5                     	ds	2
  1150  0000E7                     vfprintf@fmt:
  1151                           	callstack 0
  1152                           
  1153                           ; 2 bytes @ 0x87
  1154  0000E7                     	ds	2
  1155  0000E9                     vfprintf@ap:
  1156                           	callstack 0
  1157                           
  1158                           ; 2 bytes @ 0x89
  1159  0000E9                     	ds	2
  1160  0000EB                     vfprintf@cfmt:
  1161                           	callstack 0
  1162                           
  1163                           ; 2 bytes @ 0x8B
  1164  0000EB                     	ds	2
  1165  0000ED                     ??_main:
  1166                           
  1167                           ; 1 bytes @ 0x8D
  1168  0000ED                     	ds	2
  1169                           
  1170                           	psect	cstackCOMRAM
  1171  000001                     __pcstackCOMRAM:
  1172                           	callstack 0
  1173  000001                     ?i2___wmul:
  1174                           	callstack 0
  1175  000001                     i2___wmul@multiplier:
  1176                           	callstack 0
  1177                           
  1178                           ; 2 bytes @ 0x0
  1179  000001                     	ds	2
  1180  000003                     i2___wmul@multiplicand:
  1181                           	callstack 0
  1182                           
  1183                           ; 2 bytes @ 0x2
  1184  000003                     	ds	2
  1185  000005                     i2___wmul@product:
  1186                           	callstack 0
  1187                           
  1188                           ; 2 bytes @ 0x4
  1189  000005                     	ds	2
  1190  000007                     ??_isr:
  1191                           
  1192                           ; 1 bytes @ 0x6
  1193  000007                     	ds	8
  1194  00000F                     ??_lcd_write:
  1195  00000F                     ?_strlen:
  1196                           	callstack 0
  1197  00000F                     ?___fpclassifyf:
  1198                           	callstack 0
  1199  00000F                     ?_isupper:
  1200                           	callstack 0
  1201  00000F                     ?_isdigit:
  1202                           	callstack 0
  1203  00000F                     ?_strncmp:
  1204                           	callstack 0
  1205  00000F                     ?_isspace:
  1206                           	callstack 0
  1207  00000F                     ?___wmul:
  1208                           	callstack 0
  1209  00000F                     ?___awdiv:
  1210                           	callstack 0
  1211  00000F                     ?___awmod:
  1212                           	callstack 0
  1213  00000F                     ?___flneg:
  1214                           	callstack 0
  1215  00000F                     ___wmul@multiplier:
  1216                           	callstack 0
  1217  00000F                     ___awdiv@dividend:
  1218                           	callstack 0
  1219  00000F                     ___awmod@dividend:
  1220                           	callstack 0
  1221  00000F                     isdigit@c:
  1222                           	callstack 0
  1223  00000F                     isspace@c:
  1224                           	callstack 0
  1225  00000F                     isupper@c:
  1226                           	callstack 0
  1227  00000F                     fputc@c:
  1228                           	callstack 0
  1229  00000F                     strcpy@dest:
  1230                           	callstack 0
  1231  00000F                     strlen@s:
  1232                           	callstack 0
  1233  00000F                     strncmp@_l:
  1234                           	callstack 0
  1235  00000F                     ___fleq@ff1:
  1236                           	callstack 0
  1237  00000F                     ___flneg@f1:
  1238                           	callstack 0
  1239  00000F                     ___fpclassifyf@x:
  1240                           	callstack 0
  1241                           
  1242                           ; 4 bytes @ 0xE
  1243  00000F                     	ds	1
  1244  000010                     lcd_write@c:
  1245                           	callstack 0
  1246                           
  1247                           ; 1 bytes @ 0xF
  1248  000010                     	ds	1
  1249  000011                     ??_isupper:
  1250  000011                     ??_isdigit:
  1251  000011                     ??_isspace:
  1252  000011                     ??_lcd_clear:
  1253  000011                     lcd_goto@pos:
  1254                           	callstack 0
  1255  000011                     lcd_puts@s:
  1256                           	callstack 0
  1257  000011                     ___wmul@multiplicand:
  1258                           	callstack 0
  1259  000011                     ___awdiv@divisor:
  1260                           	callstack 0
  1261  000011                     ___awmod@divisor:
  1262                           	callstack 0
  1263  000011                     fputc@fp:
  1264                           	callstack 0
  1265  000011                     strcpy@src:
  1266                           	callstack 0
  1267  000011                     strlen@a:
  1268                           	callstack 0
  1269  000011                     strncmp@_r:
  1270                           	callstack 0
  1271                           
  1272                           ; 2 bytes @ 0x10
  1273  000011                     	ds	1
  1274  000012                     ??_lcd_init:
  1275                           
  1276                           ; 1 bytes @ 0x11
  1277  000012                     	ds	1
  1278  000013                     ??_fputc:
  1279  000013                     ??___fpclassifyf:
  1280  000013                     ??_strcpy:
  1281  000013                     ___awdiv@counter:
  1282                           	callstack 0
  1283  000013                     ___awmod@counter:
  1284                           	callstack 0
  1285  000013                     ___wmul@product:
  1286                           	callstack 0
  1287  000013                     strncmp@n:
  1288                           	callstack 0
  1289  000013                     ___fleq@ff2:
  1290                           	callstack 0
  1291                           
  1292                           ; 4 bytes @ 0x12
  1293  000013                     	ds	1
  1294  000014                     ___awdiv@sign:
  1295                           	callstack 0
  1296  000014                     ___awmod@sign:
  1297                           	callstack 0
  1298                           
  1299                           ; 1 bytes @ 0x13
  1300  000014                     	ds	1
  1301  000015                     ??_strncmp:
  1302  000015                     ?_tolower:
  1303                           	callstack 0
  1304  000015                     ?___xxtofl:
  1305                           	callstack 0
  1306  000015                     _isspace$976:
  1307                           	callstack 0
  1308  000015                     ___awdiv@quotient:
  1309                           	callstack 0
  1310  000015                     strcpy@s:
  1311                           	callstack 0
  1312  000015                     tolower@c:
  1313                           	callstack 0
  1314  000015                     ___xxtofl@val:
  1315                           	callstack 0
  1316                           
  1317                           ; 4 bytes @ 0x14
  1318  000015                     	ds	1
  1319  000016                     ?_atoi:
  1320                           	callstack 0
  1321  000016                     atoi@s:
  1322                           	callstack 0
  1323  000016                     strncmp@l:
  1324                           	callstack 0
  1325                           
  1326                           ; 2 bytes @ 0x15
  1327  000016                     	ds	1
  1328  000017                     ??_tolower:
  1329  000017                     ??___fleq:
  1330  000017                     ___fpclassifyf@e:
  1331                           	callstack 0
  1332  000017                     strcpy@d:
  1333                           	callstack 0
  1334                           
  1335                           ; 2 bytes @ 0x16
  1336  000017                     	ds	1
  1337  000018                     ??_atoi:
  1338  000018                     fputs@s:
  1339                           	callstack 0
  1340  000018                     strncmp@r:
  1341                           	callstack 0
  1342                           
  1343                           ; 2 bytes @ 0x17
  1344  000018                     	ds	1
  1345  000019                     ??___xxtofl:
  1346  000019                     ___fpclassifyf@u:
  1347                           	callstack 0
  1348                           
  1349                           ; 4 bytes @ 0x18
  1350  000019                     	ds	1
  1351  00001A                     fputs@fp:
  1352                           	callstack 0
  1353                           
  1354                           ; 2 bytes @ 0x19
  1355  00001A                     	ds	1
  1356  00001B                     _tolower$1040:
  1357                           	callstack 0
  1358                           
  1359                           ; 2 bytes @ 0x1A
  1360  00001B                     	ds	1
  1361  00001C                     fputs@c:
  1362                           	callstack 0
  1363  00001C                     atoi@neg:
  1364                           	callstack 0
  1365                           
  1366                           ; 2 bytes @ 0x1B
  1367  00001C                     	ds	1
  1368  00001D                     ___xxtofl@sign:
  1369                           	callstack 0
  1370  00001D                     fputs@i:
  1371                           	callstack 0
  1372                           
  1373                           ; 2 bytes @ 0x1C
  1374  00001D                     	ds	1
  1375  00001E                     ___xxtofl@exp:
  1376                           	callstack 0
  1377  00001E                     _atoi$945:
  1378                           	callstack 0
  1379                           
  1380                           ; 2 bytes @ 0x1D
  1381  00001E                     	ds	1
  1382  00001F                     ?_pad:
  1383                           	callstack 0
  1384  00001F                     pad@fp:
  1385                           	callstack 0
  1386  00001F                     ___xxtofl@arg:
  1387                           	callstack 0
  1388                           
  1389                           ; 4 bytes @ 0x1E
  1390  00001F                     	ds	1
  1391  000020                     _atoi$947:
  1392                           	callstack 0
  1393                           
  1394                           ; 2 bytes @ 0x1F
  1395  000020                     	ds	1
  1396  000021                     pad@buf:
  1397                           	callstack 0
  1398                           
  1399                           ; 2 bytes @ 0x20
  1400  000021                     	ds	1
  1401  000022                     _atoi$946:
  1402                           	callstack 0
  1403                           
  1404                           ; 1 bytes @ 0x21
  1405  000022                     	ds	1
  1406  000023                     ?___fldiv:
  1407                           	callstack 0
  1408  000023                     pad@p:
  1409                           	callstack 0
  1410  000023                     atoi@n:
  1411                           	callstack 0
  1412  000023                     ___fldiv@b:
  1413                           	callstack 0
  1414                           
  1415                           ; 4 bytes @ 0x22
  1416  000023                     	ds	2
  1417  000025                     ??_pad:
  1418                           
  1419                           ; 1 bytes @ 0x24
  1420  000025                     	ds	1
  1421  000026                     pad@i:
  1422                           	callstack 0
  1423                           
  1424                           ; 2 bytes @ 0x25
  1425  000026                     	ds	1
  1426  000027                     ___fldiv@a:
  1427                           	callstack 0
  1428                           
  1429                           ; 4 bytes @ 0x26
  1430  000027                     	ds	1
  1431  000028                     pad@w:
  1432                           	callstack 0
  1433                           
  1434                           ; 2 bytes @ 0x27
  1435  000028                     	ds	3
  1436  00002B                     ??___fldiv:
  1437                           
  1438                           ; 1 bytes @ 0x2A
  1439  00002B                     	ds	4
  1440  00002F                     ___fldiv@rem:
  1441                           	callstack 0
  1442                           
  1443                           ; 4 bytes @ 0x2E
  1444  00002F                     	ds	4
  1445  000033                     ___fldiv@sign:
  1446                           	callstack 0
  1447                           
  1448                           ; 1 bytes @ 0x32
  1449  000033                     	ds	1
  1450  000034                     ___fldiv@new_exp:
  1451                           	callstack 0
  1452                           
  1453                           ; 2 bytes @ 0x33
  1454  000034                     	ds	2
  1455  000036                     ___fldiv@grs:
  1456                           	callstack 0
  1457                           
  1458                           ; 4 bytes @ 0x35
  1459  000036                     	ds	4
  1460  00003A                     ___fldiv@bexp:
  1461                           	callstack 0
  1462                           
  1463                           ; 1 bytes @ 0x39
  1464  00003A                     	ds	1
  1465  00003B                     ___fldiv@aexp:
  1466                           	callstack 0
  1467                           
  1468                           ; 1 bytes @ 0x3A
  1469  00003B                     	ds	1
  1470  00003C                     ?___flmul:
  1471                           	callstack 0
  1472  00003C                     ?_floorf:
  1473                           	callstack 0
  1474  00003C                     ___flmul@b:
  1475                           	callstack 0
  1476  00003C                     floorf@x:
  1477                           	callstack 0
  1478                           
  1479                           ; 4 bytes @ 0x3B
  1480  00003C                     	ds	4
  1481  000040                     ___flmul@a:
  1482                           	callstack 0
  1483                           
  1484                           ; 4 bytes @ 0x3F
  1485  000040                     	ds	4
  1486  000044                     
  1487                           ; 1 bytes @ 0x43
  1488 ;;
  1489 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1490 ;;
  1491 ;; *************** function _main *****************
  1492 ;; Defined at:
  1493 ;;		line 42 in file "newmain.c"
  1494 ;; Parameters:    Size  Location     Type
  1495 ;;		None
  1496 ;; Auto vars:     Size  Location     Type
  1497 ;;		None
  1498 ;; Return value:  Size  Location     Type
  1499 ;;                  1    wreg      void 
  1500 ;; Registers used:
  1501 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1502 ;; Tracked objects:
  1503 ;;		On entry : 0/0
  1504 ;;		On exit  : 0/0
  1505 ;;		Unchanged: 0/0
  1506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1507 ;;      Params:         0       0       0       0       0       0       0
  1508 ;;      Locals:         0       0       0       0       0       0       0
  1509 ;;      Temps:          0       2       0       0       0       0       0
  1510 ;;      Totals:         0       2       0       0       0       0       0
  1511 ;;Total ram usage:        2 bytes
  1512 ;; Hardware stack levels required when called: 10
  1513 ;; This function calls:
  1514 ;;		___fladd
  1515 ;;		___fldiv
  1516 ;;		___flmul
  1517 ;;		___wmul
  1518 ;;		___xxtofl
  1519 ;;		_calc_time_interrupt
  1520 ;;		_lcd_goto
  1521 ;;		_lcd_init
  1522 ;;		_lcd_puts
  1523 ;;		_sprintf
  1524 ;; This function is called by:
  1525 ;;		Startup code after reset
  1526 ;; This function uses a non-reentrant model
  1527 ;;
  1528                           
  1529                           	psect	text0
  1530  001F52                     __ptext0:
  1531                           	callstack 0
  1532  001F52                     _main:
  1533                           	callstack 21
  1534  001F52                     
  1535                           ;newmain.c: 44:     TRISB = 0xC0;
  1536  001F52  0E07               	movlw	7
  1537  001F54  010F               	movlb	15	; () banked
  1538  001F56  6F38               	movwf	56,b	;volatile
  1539                           
  1540                           ;newmain.c: 45:     PORTB = 0;
  1541  001F58  0EF7               	movlw	247
  1542  001F5A  6E92               	movwf	146,c	;volatile
  1543                           
  1544                           ;newmain.c: 46: 
  1545  001F5C  0E08               	movlw	8
  1546  001F5E  6E80               	movwf	128,c	;volatile
  1547                           
  1548                           ;newmain.c: 48: 
  1549  001F60  0E9A               	movlw	154
  1550  001F62  6EC0               	movwf	192,c	;volatile
  1551                           
  1552                           ;newmain.c: 49:     TMR0IE = 1;
  1553  001F64  0E00               	movlw	0
  1554  001F66  6EC1               	movwf	193,c	;volatile
  1555                           
  1556                           ;newmain.c: 50:     TMR0IP = 1;
  1557  001F68  0E03               	movlw	3
  1558  001F6A  6EC2               	movwf	194,c	;volatile
  1559                           
  1560                           ;newmain.c: 52: 
  1561  001F6C  0E00               	movlw	0
  1562  001F6E  6F3B               	movwf	59,b	;volatile
  1563                           
  1564                           ;newmain.c: 53:     lcd_init();
  1565  001F70  0E00               	movlw	0
  1566  001F72  6E95               	movwf	149,c	;volatile
  1567  001F74                     
  1568                           ; BSR set to: 15
  1569                           ;newmain.c: 54:     lcd_goto(0);
  1570  001F74  6883               	setf	131,c	;volatile
  1571                           
  1572                           ;newmain.c: 56: 
  1573  001F76  0E00               	movlw	0
  1574  001F78  6F39               	movwf	57,b	;volatile
  1575                           
  1576                           ;newmain.c: 57:     while (1) {
  1577  001F7A  0EC0               	movlw	192
  1578  001F7C  6E93               	movwf	147,c	;volatile
  1579                           
  1580                           ;newmain.c: 58: 
  1581  001F7E  0E00               	movlw	0
  1582  001F80  6E81               	movwf	129,c	;volatile
  1583  001F82                     
  1584                           ; BSR set to: 15
  1585                           ;newmain.c: 60:         GODONE = 1;
  1586  001F82  0E00               	movlw	0
  1587  001F84  0100               	movlb	0	; () banked
  1588  001F86  6F7B               	movwf	calc_time_interrupt@freq_value& (0+255),b
  1589  001F88  0E00               	movlw	0
  1590  001F8A  6F7C               	movwf	(calc_time_interrupt@freq_value+1)& (0+255),b
  1591  001F8C  0E80               	movlw	128
  1592  001F8E  6F7D               	movwf	(calc_time_interrupt@freq_value+2)& (0+255),b
  1593  001F90  0E3F               	movlw	63
  1594  001F92  6F7E               	movwf	(calc_time_interrupt@freq_value+3)& (0+255),b
  1595  001F94  EC6D  F017         	call	_calc_time_interrupt	;wreg free
  1596  001F98                     
  1597                           ;newmain.c: 62:         Analog[0] = (ADRESH << 8) + ADRESL;
  1598  001F98  8AF2               	bsf	4082,5,c	;volatile
  1599  001F9A                     
  1600                           ;newmain.c: 63: 
  1601  001F9A  84F1               	bsf	4081,2,c	;volatile
  1602  001F9C                     
  1603                           ;newmain.c: 64:         ADCON0bits.CHS = 1;
  1604  001F9C  8EF2               	bsf	4082,7,c	;volatile
  1605  001F9E                     
  1606                           ;newmain.c: 66:         while (GODONE);
  1607  001F9E  EC60  F018         	call	_lcd_init	;wreg free
  1608  001FA2                     
  1609                           ;newmain.c: 67:         Analog[1] = (ADRESH << 8) + ADRESL;
  1610  001FA2  0E00               	movlw	0
  1611  001FA4  ECBE  F01A         	call	_lcd_goto
  1612  001FA8                     
  1613                           ;newmain.c: 68: 
  1614  001FA8  0ED0               	movlw	low STR_1
  1615  001FAA  6E11               	movwf	lcd_puts@s^0,c
  1616  001FAC  0E7F               	movlw	high STR_1
  1617  001FAE  6E12               	movwf	(lcd_puts@s+1)^0,c
  1618  001FB0  ECFD  F018         	call	_lcd_puts	;wreg free
  1619  001FB4                     l5523:
  1620                           
  1621                           ;newmain.c: 72:         Analog[2] = (ADRESH << 8) + ADRESL;
  1622  001FB4  0E83               	movlw	-125
  1623  001FB6  16C2               	andwf	194,f,c	;volatile
  1624  001FB8                     
  1625                           ;newmain.c: 73: 
  1626  001FB8  82C2               	bsf	4034,1,c	;volatile
  1627  001FBA                     l91:
  1628  001FBA  B2C2               	btfsc	4034,1,c	;volatile
  1629  001FBC  EFE2  F00F         	goto	u7401
  1630  001FC0  EFE4  F00F         	goto	u7400
  1631  001FC4                     u7401:
  1632  001FC4  EFDD  F00F         	goto	l91
  1633  001FC8                     u7400:
  1634  001FC8                     
  1635                           ;newmain.c: 75: 
  1636  001FC8  50C4               	movf	196,w,c	;volatile
  1637  001FCA  0100               	movlb	0	; () banked
  1638  001FCC  6FEE               	movwf	(??_main+1)& (0+255),b
  1639  001FCE  6BED               	clrf	??_main& (0+255),b
  1640  001FD0  50C3               	movf	195,w,c	;volatile
  1641  001FD2  25ED               	addwf	??_main& (0+255),w,b
  1642  001FD4  0101               	movlb	1	; () banked
  1643  001FD6  6F00               	movwf	_Analog& (0+255),b
  1644  001FD8  0E00               	movlw	0
  1645  001FDA  0100               	movlb	0	; () banked
  1646  001FDC  21EE               	addwfc	(??_main+1)& (0+255),w,b
  1647  001FDE  0101               	movlb	1	; () banked
  1648  001FE0  6F01               	movwf	(_Analog+1)& (0+255),b
  1649  001FE2                     
  1650                           ; BSR set to: 1
  1651                           ;newmain.c: 77: 
  1652  001FE2  50C2               	movf	194,w,c	;volatile
  1653  001FE4  0B83               	andlw	-125
  1654  001FE6  0904               	iorlw	4
  1655  001FE8  6EC2               	movwf	194,c	;volatile
  1656  001FEA                     
  1657                           ; BSR set to: 1
  1658                           ;newmain.c: 78:         gain = Analog[0] >> 2;
  1659  001FEA  82C2               	bsf	4034,1,c	;volatile
  1660  001FEC                     l94:
  1661  001FEC  B2C2               	btfsc	4034,1,c	;volatile
  1662  001FEE  EFFB  F00F         	goto	u7411
  1663  001FF2  EFFD  F00F         	goto	u7410
  1664  001FF6                     u7411:
  1665  001FF6  EFF6  F00F         	goto	l94
  1666  001FFA                     u7410:
  1667  001FFA                     
  1668                           ;newmain.c: 80:         gain_lcd = (gain * 5.0) / 255.0;
  1669  001FFA  50C4               	movf	196,w,c	;volatile
  1670  001FFC  0100               	movlb	0	; () banked
  1671  001FFE  6FEE               	movwf	(??_main+1)& (0+255),b
  1672  002000  6BED               	clrf	??_main& (0+255),b
  1673  002002  50C3               	movf	195,w,c	;volatile
  1674  002004  25ED               	addwf	??_main& (0+255),w,b
  1675  002006  0101               	movlb	1	; () banked
  1676  002008  6F02               	movwf	(_Analog+2)& (0+255),b
  1677  00200A  0E00               	movlw	0
  1678  00200C  0100               	movlb	0	; () banked
  1679  00200E  21EE               	addwfc	(??_main+1)& (0+255),w,b
  1680  002010  0101               	movlb	1	; () banked
  1681  002012  6F03               	movwf	(_Analog+3)& (0+255),b
  1682  002014                     
  1683                           ; BSR set to: 1
  1684                           ;newmain.c: 82:         offset = Analog[1] >> 2;
  1685  002014  50C2               	movf	194,w,c	;volatile
  1686  002016  0B83               	andlw	-125
  1687  002018  0908               	iorlw	8
  1688  00201A  6EC2               	movwf	194,c	;volatile
  1689  00201C                     
  1690                           ; BSR set to: 1
  1691                           ;newmain.c: 83: 
  1692  00201C  82C2               	bsf	4034,1,c	;volatile
  1693  00201E                     l97:
  1694  00201E  B2C2               	btfsc	4034,1,c	;volatile
  1695  002020  EF14  F010         	goto	u7421
  1696  002024  EF16  F010         	goto	u7420
  1697  002028                     u7421:
  1698  002028  EF0F  F010         	goto	l97
  1699  00202C                     u7420:
  1700  00202C                     
  1701                           ;newmain.c: 85: 
  1702  00202C  50C4               	movf	196,w,c	;volatile
  1703  00202E  0100               	movlb	0	; () banked
  1704  002030  6FEE               	movwf	(??_main+1)& (0+255),b
  1705  002032  6BED               	clrf	??_main& (0+255),b
  1706  002034  50C3               	movf	195,w,c	;volatile
  1707  002036  25ED               	addwf	??_main& (0+255),w,b
  1708  002038  0101               	movlb	1	; () banked
  1709  00203A  6F04               	movwf	(_Analog+4)& (0+255),b
  1710  00203C  0E00               	movlw	0
  1711  00203E  0100               	movlb	0	; () banked
  1712  002040  21EE               	addwfc	(??_main+1)& (0+255),w,b
  1713  002042  0101               	movlb	1	; () banked
  1714  002044  6F05               	movwf	(_Analog+5)& (0+255),b
  1715  002046                     
  1716                           ; BSR set to: 1
  1717                           ;newmain.c: 87:         lcd_goto(0x40);
  1718  002046  0E00               	movlw	0
  1719  002048  6E40               	movwf	___flmul@a^0,c
  1720  00204A  0E00               	movlw	0
  1721  00204C  6E41               	movwf	(___flmul@a+1)^0,c
  1722  00204E  0E98               	movlw	152
  1723  002050  6E42               	movwf	(___flmul@a+2)^0,c
  1724  002052  0E41               	movlw	65
  1725  002054  6E43               	movwf	(___flmul@a+3)^0,c
  1726  002056  0E00               	movlw	0
  1727  002058  6E27               	movwf	___fldiv@a^0,c
  1728  00205A  0EC0               	movlw	192
  1729  00205C  6E28               	movwf	(___fldiv@a+1)^0,c
  1730  00205E  0E7F               	movlw	127
  1731  002060  6E29               	movwf	(___fldiv@a+2)^0,c
  1732  002062  0E44               	movlw	68
  1733  002064  6E2A               	movwf	(___fldiv@a+3)^0,c
  1734  002066  C104  F015         	movff	_Analog+4,___xxtofl@val
  1735  00206A  C105  F016         	movff	_Analog+5,___xxtofl@val+1
  1736  00206E  6A17               	clrf	(___xxtofl@val+2)^0,c
  1737  002070  6A18               	clrf	(___xxtofl@val+3)^0,c
  1738  002072  0E00               	movlw	0
  1739  002074  EC5A  F012         	call	___xxtofl
  1740  002078  C015  F023         	movff	?___xxtofl,___fldiv@b
  1741  00207C  C016  F024         	movff	?___xxtofl+1,___fldiv@b+1
  1742  002080  C017  F025         	movff	?___xxtofl+2,___fldiv@b+2
  1743  002084  C018  F026         	movff	?___xxtofl+3,___fldiv@b+3
  1744  002088  ECDC  F00D         	call	___fldiv	;wreg free
  1745  00208C  C023  F03C         	movff	?___fldiv,___flmul@b
  1746  002090  C024  F03D         	movff	?___fldiv+1,___flmul@b+1
  1747  002094  C025  F03E         	movff	?___fldiv+2,___flmul@b+2
  1748  002098  C026  F03F         	movff	?___fldiv+3,___flmul@b+3
  1749  00209C  ECC6  F00B         	call	___flmul	;wreg free
  1750  0020A0  C03C  F071         	movff	?___flmul,___fladd@b
  1751  0020A4  C03D  F072         	movff	?___flmul+1,___fladd@b+1
  1752  0020A8  C03E  F073         	movff	?___flmul+2,___fladd@b+2
  1753  0020AC  C03F  F074         	movff	?___flmul+3,___fladd@b+3
  1754  0020B0  0E00               	movlw	0
  1755  0020B2  0100               	movlb	0	; () banked
  1756  0020B4  6F75               	movwf	___fladd@a& (0+255),b
  1757  0020B6  0E00               	movlw	0
  1758  0020B8  6F76               	movwf	(___fladd@a+1)& (0+255),b
  1759  0020BA  0E80               	movlw	128
  1760  0020BC  6F77               	movwf	(___fladd@a+2)& (0+255),b
  1761  0020BE  0E3F               	movlw	63
  1762  0020C0  6F78               	movwf	(___fladd@a+3)& (0+255),b
  1763  0020C2  EC65  F009         	call	___fladd	;wreg free
  1764  0020C6  C071  F044         	movff	?___fladd,_new_freq
  1765  0020CA  C072  F045         	movff	?___fladd+1,_new_freq+1
  1766  0020CE  C073  F046         	movff	?___fladd+2,_new_freq+2
  1767  0020D2  C074  F047         	movff	?___fladd+3,_new_freq+3
  1768  0020D6                     
  1769                           ;newmain.c: 89: 
  1770  0020D6  C044  F07B         	movff	_new_freq,calc_time_interrupt@freq_value
  1771  0020DA  C045  F07C         	movff	_new_freq+1,calc_time_interrupt@freq_value+1
  1772  0020DE  C046  F07D         	movff	_new_freq+2,calc_time_interrupt@freq_value+2
  1773  0020E2  C047  F07E         	movff	_new_freq+3,calc_time_interrupt@freq_value+3
  1774  0020E6  EC6D  F017         	call	_calc_time_interrupt	;wreg free
  1775  0020EA                     
  1776                           ;newmain.c: 91:         lcd_goto(0x10);
  1777  0020EA  C100  F0ED         	movff	_Analog,??_main
  1778  0020EE  C101  F0EE         	movff	_Analog+1,??_main+1
  1779  0020F2  0100               	movlb	0	; () banked
  1780  0020F4  90D8               	bcf	status,0,c
  1781  0020F6  33EE               	rrcf	(??_main+1)& (0+255),f,b
  1782  0020F8  33ED               	rrcf	??_main& (0+255),f,b
  1783  0020FA  90D8               	bcf	status,0,c
  1784  0020FC  33EE               	rrcf	(??_main+1)& (0+255),f,b
  1785  0020FE  33ED               	rrcf	??_main& (0+255),f,b
  1786  002100  C0ED  F0F7         	movff	??_main,_gain
  1787  002104  C0EE  F0F8         	movff	??_main+1,_gain+1
  1788  002108                     
  1789                           ; BSR set to: 0
  1790                           ;newmain.c: 93: 
  1791  002108  0E00               	movlw	0
  1792  00210A  6E40               	movwf	___flmul@a^0,c
  1793  00210C  0E00               	movlw	0
  1794  00210E  6E41               	movwf	(___flmul@a+1)^0,c
  1795  002110  0EA0               	movlw	160
  1796  002112  6E42               	movwf	(___flmul@a+2)^0,c
  1797  002114  0E40               	movlw	64
  1798  002116  6E43               	movwf	(___flmul@a+3)^0,c
  1799  002118  C0F7  F015         	movff	_gain,___xxtofl@val
  1800  00211C  C0F8  F016         	movff	_gain+1,___xxtofl@val+1
  1801  002120  6A17               	clrf	(___xxtofl@val+2)^0,c
  1802  002122  6A18               	clrf	(___xxtofl@val+3)^0,c
  1803  002124  0E00               	movlw	0
  1804  002126  EC5A  F012         	call	___xxtofl
  1805  00212A  C015  F03C         	movff	?___xxtofl,___flmul@b
  1806  00212E  C016  F03D         	movff	?___xxtofl+1,___flmul@b+1
  1807  002132  C017  F03E         	movff	?___xxtofl+2,___flmul@b+2
  1808  002136  C018  F03F         	movff	?___xxtofl+3,___flmul@b+3
  1809  00213A  ECC6  F00B         	call	___flmul	;wreg free
  1810  00213E  C03C  F023         	movff	?___flmul,___fldiv@b
  1811  002142  C03D  F024         	movff	?___flmul+1,___fldiv@b+1
  1812  002146  C03E  F025         	movff	?___flmul+2,___fldiv@b+2
  1813  00214A  C03F  F026         	movff	?___flmul+3,___fldiv@b+3
  1814  00214E  0E00               	movlw	0
  1815  002150  6E27               	movwf	___fldiv@a^0,c
  1816  002152  0E00               	movlw	0
  1817  002154  6E28               	movwf	(___fldiv@a+1)^0,c
  1818  002156  0E7F               	movlw	127
  1819  002158  6E29               	movwf	(___fldiv@a+2)^0,c
  1820  00215A  0E43               	movlw	67
  1821  00215C  6E2A               	movwf	(___fldiv@a+3)^0,c
  1822  00215E  ECDC  F00D         	call	___fldiv	;wreg free
  1823  002162  C023  F112         	movff	?___fldiv,_gain_lcd
  1824  002166  C024  F113         	movff	?___fldiv+1,_gain_lcd+1
  1825  00216A  C025  F114         	movff	?___fldiv+2,_gain_lcd+2
  1826  00216E  C026  F115         	movff	?___fldiv+3,_gain_lcd+3
  1827  002172                     
  1828                           ;newmain.c: 95:         lcd_goto(0x50);
  1829  002172  EE21  F002         	lfsr	2,_Analog+2
  1830  002176  CFDE F0ED          	movff	postinc2,??_main
  1831  00217A  CFDD F0EE          	movff	postdec2,??_main+1
  1832  00217E  0100               	movlb	0	; () banked
  1833  002180  90D8               	bcf	status,0,c
  1834  002182  33EE               	rrcf	(??_main+1)& (0+255),f,b
  1835  002184  33ED               	rrcf	??_main& (0+255),f,b
  1836  002186  90D8               	bcf	status,0,c
  1837  002188  33EE               	rrcf	(??_main+1)& (0+255),f,b
  1838  00218A  33ED               	rrcf	??_main& (0+255),f,b
  1839  00218C  C0ED  F0F5         	movff	??_main,_offset
  1840  002190  C0EE  F0F6         	movff	??_main+1,_offset+1
  1841  002194                     
  1842                           ; BSR set to: 0
  1843                           ;newmain.c: 97:     }
  1844  002194  C0F5  F00F         	movff	_offset,___wmul@multiplier
  1845  002198  C0F6  F010         	movff	_offset+1,___wmul@multiplier+1
  1846  00219C  0E00               	movlw	0
  1847  00219E  6E12               	movwf	(___wmul@multiplicand+1)^0,c
  1848  0021A0  0E05               	movlw	5
  1849  0021A2  6E11               	movwf	___wmul@multiplicand^0,c
  1850  0021A4  EC80  F01A         	call	___wmul	;wreg free
  1851  0021A8  C00F  F015         	movff	?___wmul,___xxtofl@val
  1852  0021AC  C010  F016         	movff	?___wmul+1,___xxtofl@val+1
  1853  0021B0  6A17               	clrf	(___xxtofl@val+2)^0,c
  1854  0021B2  6A18               	clrf	(___xxtofl@val+3)^0,c
  1855  0021B4  0E00               	movlw	0
  1856  0021B6  EC5A  F012         	call	___xxtofl
  1857  0021BA  C015  F023         	movff	?___xxtofl,___fldiv@b
  1858  0021BE  C016  F024         	movff	?___xxtofl+1,___fldiv@b+1
  1859  0021C2  C017  F025         	movff	?___xxtofl+2,___fldiv@b+2
  1860  0021C6  C018  F026         	movff	?___xxtofl+3,___fldiv@b+3
  1861  0021CA  0E00               	movlw	0
  1862  0021CC  6E27               	movwf	___fldiv@a^0,c
  1863  0021CE  0E00               	movlw	0
  1864  0021D0  6E28               	movwf	(___fldiv@a+1)^0,c
  1865  0021D2  0E7F               	movlw	127
  1866  0021D4  6E29               	movwf	(___fldiv@a+2)^0,c
  1867  0021D6  0E43               	movlw	67
  1868  0021D8  6E2A               	movwf	(___fldiv@a+3)^0,c
  1869  0021DA  ECDC  F00D         	call	___fldiv	;wreg free
  1870  0021DE  C023  F10E         	movff	?___fldiv,_offset_lcd
  1871  0021E2  C024  F10F         	movff	?___fldiv+1,_offset_lcd+1
  1872  0021E6  C025  F110         	movff	?___fldiv+2,_offset_lcd+2
  1873  0021EA  C026  F111         	movff	?___fldiv+3,_offset_lcd+3
  1874  0021EE                     
  1875                           ;newmain.c: 99:     return;
  1876  0021EE  0E66               	movlw	low _line
  1877  0021F0  0101               	movlb	1	; () banked
  1878  0021F2  6F7B               	movwf	sprintf@s& (0+255),b
  1879  0021F4  0E01               	movlw	high _line
  1880  0021F6  6F7C               	movwf	(sprintf@s+1)& (0+255),b
  1881  0021F8  0EAF               	movlw	low STR_2
  1882  0021FA  6F7D               	movwf	sprintf@fmt& (0+255),b
  1883  0021FC  0E7F               	movlw	high STR_2
  1884  0021FE  6F7E               	movwf	(sprintf@fmt+1)& (0+255),b
  1885  002200  C112  F17F         	movff	_gain_lcd,?_sprintf+4
  1886  002204  C113  F180         	movff	_gain_lcd+1,?_sprintf+5
  1887  002208  C114  F181         	movff	_gain_lcd+2,?_sprintf+6
  1888  00220C  C115  F182         	movff	_gain_lcd+3,?_sprintf+7
  1889  002210  EC5B  F019         	call	_sprintf	;wreg free
  1890  002214                     
  1891                           ;newmain.c: 100: }
  1892  002214  0E40               	movlw	64
  1893  002216  ECBE  F01A         	call	_lcd_goto
  1894  00221A                     
  1895                           ;newmain.c: 101: 
  1896  00221A  0E66               	movlw	low _line
  1897  00221C  6E11               	movwf	lcd_puts@s^0,c
  1898  00221E  0E01               	movlw	high _line
  1899  002220  6E12               	movwf	(lcd_puts@s+1)^0,c
  1900  002222  ECFD  F018         	call	_lcd_puts	;wreg free
  1901  002226                     
  1902                           ;newmain.c: 103: 
  1903  002226  0E66               	movlw	low _line
  1904  002228  0101               	movlb	1	; () banked
  1905  00222A  6F7B               	movwf	sprintf@s& (0+255),b
  1906  00222C  0E01               	movlw	high _line
  1907  00222E  6F7C               	movwf	(sprintf@s+1)& (0+255),b
  1908  002230  0EC1               	movlw	low STR_3
  1909  002232  6F7D               	movwf	sprintf@fmt& (0+255),b
  1910  002234  0E7F               	movlw	high STR_3
  1911  002236  6F7E               	movwf	(sprintf@fmt+1)& (0+255),b
  1912  002238  C10E  F17F         	movff	_offset_lcd,?_sprintf+4
  1913  00223C  C10F  F180         	movff	_offset_lcd+1,?_sprintf+5
  1914  002240  C110  F181         	movff	_offset_lcd+2,?_sprintf+6
  1915  002244  C111  F182         	movff	_offset_lcd+3,?_sprintf+7
  1916  002248  EC5B  F019         	call	_sprintf	;wreg free
  1917  00224C                     
  1918                           ;newmain.c: 104:     if (TMR0IF) {
  1919  00224C  0E10               	movlw	16
  1920  00224E  ECBE  F01A         	call	_lcd_goto
  1921  002252                     
  1922                           ;newmain.c: 105: 
  1923  002252  0E66               	movlw	low _line
  1924  002254  6E11               	movwf	lcd_puts@s^0,c
  1925  002256  0E01               	movlw	high _line
  1926  002258  6E12               	movwf	(lcd_puts@s+1)^0,c
  1927  00225A  ECFD  F018         	call	_lcd_puts	;wreg free
  1928  00225E                     
  1929                           ;newmain.c: 107: 
  1930  00225E  0E66               	movlw	low _line
  1931  002260  0101               	movlb	1	; () banked
  1932  002262  6F7B               	movwf	sprintf@s& (0+255),b
  1933  002264  0E01               	movlw	high _line
  1934  002266  6F7C               	movwf	(sprintf@s+1)& (0+255),b
  1935  002268  0EDE               	movlw	low STR_4
  1936  00226A  6F7D               	movwf	sprintf@fmt& (0+255),b
  1937  00226C  0E7F               	movlw	high STR_4
  1938  00226E  6F7E               	movwf	(sprintf@fmt+1)& (0+255),b
  1939  002270  C044  F17F         	movff	_new_freq,?_sprintf+4
  1940  002274  C045  F180         	movff	_new_freq+1,?_sprintf+5
  1941  002278  C046  F181         	movff	_new_freq+2,?_sprintf+6
  1942  00227C  C047  F182         	movff	_new_freq+3,?_sprintf+7
  1943  002280  EC5B  F019         	call	_sprintf	;wreg free
  1944  002284                     
  1945                           ;newmain.c: 108:         TMR0L = value_TMR0;
  1946  002284  0E50               	movlw	80
  1947  002286  ECBE  F01A         	call	_lcd_goto
  1948  00228A                     
  1949                           ;newmain.c: 109:         TMR0H = value_TMR0 >> 8;
  1950  00228A  0E66               	movlw	low _line
  1951  00228C  6E11               	movwf	lcd_puts@s^0,c
  1952  00228E  0E01               	movlw	high _line
  1953  002290  6E12               	movwf	(lcd_puts@s+1)^0,c
  1954  002292  ECFD  F018         	call	_lcd_puts	;wreg free
  1955  002296  EFDA  F00F         	goto	l5523
  1956  00229A  EF7F  F000         	goto	start
  1957  00229E                     __end_of_main:
  1958                           	callstack 0
  1959                           
  1960 ;; *************** function _sprintf *****************
  1961 ;; Defined at:
  1962 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_sprintf.c"
  1963 ;; Parameters:    Size  Location     Type
  1964 ;;  s               2    0[BANK1 ] PTR unsigned char 
  1965 ;;		 -> line(17), 
  1966 ;;  fmt             2    2[BANK1 ] PTR const unsigned char 
  1967 ;;		 -> STR_4(14), STR_3(15), STR_2(18), 
  1968 ;; Auto vars:     Size  Location     Type
  1969 ;;  f               6   10[BANK1 ] struct _IO_FILE
  1970 ;;  ap              2    8[BANK1 ] PTR void [1]
  1971 ;;		 -> ?_sprintf(2), 
  1972 ;;  ret             2    0        int 
  1973 ;; Return value:  Size  Location     Type
  1974 ;;                  2    0[BANK1 ] int 
  1975 ;; Registers used:
  1976 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1977 ;; Tracked objects:
  1978 ;;		On entry : 0/0
  1979 ;;		On exit  : 0/0
  1980 ;;		Unchanged: 0/0
  1981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1982 ;;      Params:         0       0       8       0       0       0       0
  1983 ;;      Locals:         0       0       8       0       0       0       0
  1984 ;;      Temps:          0       0       0       0       0       0       0
  1985 ;;      Totals:         0       0      16       0       0       0       0
  1986 ;;Total ram usage:       16 bytes
  1987 ;; Hardware stack levels used: 1
  1988 ;; Hardware stack levels required when called: 9
  1989 ;; This function calls:
  1990 ;;		_vfprintf
  1991 ;; This function is called by:
  1992 ;;		_main
  1993 ;; This function uses a non-reentrant model
  1994 ;;
  1995                           
  1996                           	psect	text1
  1997  0032B6                     __ptext1:
  1998                           	callstack 0
  1999  0032B6                     _sprintf:
  2000                           	callstack 21
  2001  0032B6  0E7F               	movlw	low (?_sprintf+4)
  2002  0032B8  0101               	movlb	1	; () banked
  2003  0032BA  6F83               	movwf	sprintf@ap& (0+255),b
  2004  0032BC  0E01               	movlw	high (?_sprintf+4)
  2005  0032BE  6F84               	movwf	(sprintf@ap+1)& (0+255),b
  2006  0032C0  C17B  F185         	movff	sprintf@s,sprintf@f
  2007  0032C4  C17C  F186         	movff	sprintf@s+1,sprintf@f+1
  2008  0032C8                     
  2009                           ; BSR set to: 1
  2010  0032C8  0E00               	movlw	0
  2011  0032CA  6F88               	movwf	(sprintf@f+3)& (0+255),b
  2012  0032CC  0E00               	movlw	0
  2013  0032CE  6F87               	movwf	(sprintf@f+2)& (0+255),b
  2014  0032D0                     
  2015                           ; BSR set to: 1
  2016  0032D0  0E00               	movlw	0
  2017  0032D2  6F8A               	movwf	(sprintf@f+5)& (0+255),b
  2018  0032D4  0E00               	movlw	0
  2019  0032D6  6F89               	movwf	(sprintf@f+4)& (0+255),b
  2020  0032D8                     
  2021                           ; BSR set to: 1
  2022  0032D8  0E85               	movlw	low sprintf@f
  2023  0032DA  0100               	movlb	0	; () banked
  2024  0032DC  6FE5               	movwf	vfprintf@fp& (0+255),b
  2025  0032DE  0E01               	movlw	high sprintf@f
  2026  0032E0  6FE6               	movwf	(vfprintf@fp+1)& (0+255),b
  2027  0032E2  C17D  F0E7         	movff	sprintf@fmt,vfprintf@fmt
  2028  0032E6  C17E  F0E8         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2029  0032EA  0E83               	movlw	low sprintf@ap
  2030  0032EC  6FE9               	movwf	vfprintf@ap& (0+255),b
  2031  0032EE  0E01               	movlw	high sprintf@ap
  2032  0032F0  6FEA               	movwf	(vfprintf@ap+1)& (0+255),b
  2033  0032F2  EC9C  F018         	call	_vfprintf	;wreg free
  2034  0032F6  0101               	movlb	1	; () banked
  2035  0032F8  5187               	movf	(sprintf@f+2)& (0+255),w,b
  2036  0032FA  257B               	addwf	sprintf@s& (0+255),w,b
  2037  0032FC  6ED9               	movwf	fsr2l,c
  2038  0032FE  5188               	movf	(sprintf@f+3)& (0+255),w,b
  2039  003300  217C               	addwfc	(sprintf@s+1)& (0+255),w,b
  2040  003302  6EDA               	movwf	fsr2h,c
  2041  003304  0E00               	movlw	0
  2042  003306  6EDF               	movwf	indf2,c
  2043  003308                     
  2044                           ; BSR set to: 1
  2045  003308  0012               	return		;funcret
  2046  00330A                     __end_of_sprintf:
  2047                           	callstack 0
  2048                           
  2049 ;; *************** function _vfprintf *****************
  2050 ;; Defined at:
  2051 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2052 ;; Parameters:    Size  Location     Type
  2053 ;;  fp              2  133[BANK0 ] PTR struct _IO_FILE
  2054 ;;		 -> sprintf@f(6), 
  2055 ;;  fmt             2  135[BANK0 ] PTR const unsigned char 
  2056 ;;		 -> STR_4(14), STR_3(15), STR_2(18), 
  2057 ;;  ap              2  137[BANK0 ] PTR PTR void 
  2058 ;;		 -> sprintf@ap(2), 
  2059 ;; Auto vars:     Size  Location     Type
  2060 ;;  cfmt            2  139[BANK0 ] PTR unsigned char 
  2061 ;;		 -> STR_4(14), STR_3(15), STR_2(18), 
  2062 ;; Return value:  Size  Location     Type
  2063 ;;                  2  133[BANK0 ] int 
  2064 ;; Registers used:
  2065 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2066 ;; Tracked objects:
  2067 ;;		On entry : 0/0
  2068 ;;		On exit  : 0/0
  2069 ;;		Unchanged: 0/0
  2070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2071 ;;      Params:         0       6       0       0       0       0       0
  2072 ;;      Locals:         0       2       0       0       0       0       0
  2073 ;;      Temps:          0       0       0       0       0       0       0
  2074 ;;      Totals:         0       8       0       0       0       0       0
  2075 ;;Total ram usage:        8 bytes
  2076 ;; Hardware stack levels used: 1
  2077 ;; Hardware stack levels required when called: 8
  2078 ;; This function calls:
  2079 ;;		_vfpfcnvrt
  2080 ;; This function is called by:
  2081 ;;		_sprintf
  2082 ;; This function uses a non-reentrant model
  2083 ;;
  2084                           
  2085                           	psect	text2
  2086  003138                     __ptext2:
  2087                           	callstack 0
  2088  003138                     _vfprintf:
  2089                           	callstack 21
  2090  003138                     
  2091                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  2092  003138  C0E7  F0EB         	movff	vfprintf@fmt,vfprintf@cfmt
  2093  00313C  C0E8  F0EC         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2094  003140                     
  2095                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  2096  003140  0E00               	movlw	0
  2097  003142  0100               	movlb	0	; () banked
  2098  003144  6FF0               	movwf	(_nout+1)& (0+255),b
  2099  003146  0E00               	movlw	0
  2100  003148  6FEF               	movwf	_nout& (0+255),b
  2101                           
  2102                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2103  00314A  EFBA  F018         	goto	l5485
  2104  00314E                     l5483:
  2105                           
  2106                           ; BSR set to: 0
  2107                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  2108  00314E  C0E5  F0CD         	movff	vfprintf@fp,vfpfcnvrt@fp
  2109  003152  C0E6  F0CE         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2110  003156  0EEB               	movlw	low vfprintf@cfmt
  2111  003158  6FCF               	movwf	vfpfcnvrt@fmt& (0+255),b
  2112  00315A  0E00               	movlw	high vfprintf@cfmt
  2113  00315C  6FD0               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  2114  00315E  C0E9  F0D1         	movff	vfprintf@ap,vfpfcnvrt@ap
  2115  003162  C0EA  F0D2         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2116  003166  ECAF  F006         	call	_vfpfcnvrt	;wreg free
  2117  00316A  0100               	movlb	0	; () banked
  2118  00316C  51CD               	movf	?_vfpfcnvrt& (0+255),w,b
  2119  00316E  27EF               	addwf	_nout& (0+255),f,b
  2120  003170  51CE               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  2121  003172  23F0               	addwfc	(_nout+1)& (0+255),f,b
  2122  003174                     l5485:
  2123                           
  2124                           ; BSR set to: 0
  2125                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2126  003174  C0EB  FFF6         	movff	vfprintf@cfmt,tblptrl
  2127  003178  C0EC  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2128  00317C                     	if	0	;tblptru may be non-zero
  2129  00317C                     	endif
  2130  00317C                     	if	0	;tblptru may be non-zero
  2131  00317C                     	endif
  2132  00317C  0008               	tblrd		*
  2133  00317E  50F5               	movf	tablat,w,c
  2134  003180  0900               	iorlw	0
  2135  003182  A4D8               	btfss	status,2,c
  2136  003184  EFC6  F018         	goto	u7391
  2137  003188  EFC8  F018         	goto	u7390
  2138  00318C                     u7391:
  2139  00318C  EFA7  F018         	goto	l5483
  2140  003190                     u7390:
  2141  003190                     
  2142                           ; BSR set to: 0
  2143                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  2144  003190  C0EF  F0E5         	movff	_nout,?_vfprintf
  2145  003194  C0F0  F0E6         	movff	_nout+1,?_vfprintf+1
  2146  003198                     
  2147                           ; BSR set to: 0
  2148  003198  0012               	return		;funcret
  2149  00319A                     __end_of_vfprintf:
  2150                           	callstack 0
  2151                           
  2152 ;; *************** function _vfpfcnvrt *****************
  2153 ;; Defined at:
  2154 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2155 ;; Parameters:    Size  Location     Type
  2156 ;;  fp              2  109[BANK0 ] PTR struct _IO_FILE
  2157 ;;		 -> sprintf@f(6), 
  2158 ;;  fmt             2  111[BANK0 ] PTR PTR unsigned char 
  2159 ;;		 -> vfprintf@cfmt(2), 
  2160 ;;  ap              2  113[BANK0 ] PTR PTR void 
  2161 ;;		 -> sprintf@ap(2), 
  2162 ;; Auto vars:     Size  Location     Type
  2163 ;;  llu             8    0        unsigned long long 
  2164 ;;  ll              8    0        long long 
  2165 ;;  f               4  125[BANK0 ] long long 
  2166 ;;  ct              3  129[BANK0 ] unsigned char [3]
  2167 ;;  vp              3    0        PTR void 
  2168 ;;  cp              3    0        PTR unsigned char 
  2169 ;;  i               2    0        int 
  2170 ;;  done            2    0        int 
  2171 ;;  c               1  132[BANK0 ] unsigned char 
  2172 ;; Return value:  Size  Location     Type
  2173 ;;                  2  109[BANK0 ] int 
  2174 ;; Registers used:
  2175 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2176 ;; Tracked objects:
  2177 ;;		On entry : 0/0
  2178 ;;		On exit  : 0/0
  2179 ;;		Unchanged: 0/0
  2180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2181 ;;      Params:         0       6       0       0       0       0       0
  2182 ;;      Locals:         0      14       0       0       0       0       0
  2183 ;;      Temps:          0       4       0       0       0       0       0
  2184 ;;      Totals:         0      24       0       0       0       0       0
  2185 ;;Total ram usage:       24 bytes
  2186 ;; Hardware stack levels used: 1
  2187 ;; Hardware stack levels required when called: 7
  2188 ;; This function calls:
  2189 ;;		_atoi
  2190 ;;		_efgtoa
  2191 ;;		_fputc
  2192 ;;		_isdigit
  2193 ;;		_isupper
  2194 ;;		_strncmp
  2195 ;;		_tolower
  2196 ;; This function is called by:
  2197 ;;		_vfprintf
  2198 ;; This function uses a non-reentrant model
  2199 ;;
  2200                           
  2201                           	psect	text3
  2202  000D5E                     __ptext3:
  2203                           	callstack 0
  2204  000D5E                     _vfpfcnvrt:
  2205                           	callstack 21
  2206  000D5E                     
  2207                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  2208  000D5E  C0CF  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2209  000D62  C0D0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2210  000D66  CFDE FFF6          	movff	postinc2,tblptrl
  2211  000D6A  CFDD FFF7          	movff	postdec2,tblptrh
  2212  000D6E                     	if	0	;tblptru may be non-zero
  2213  000D6E                     	endif
  2214  000D6E                     	if	0	;tblptru may be non-zero
  2215  000D6E                     	endif
  2216  000D6E  0008               	tblrd		*
  2217  000D70  50F5               	movf	tablat,w,c
  2218  000D72  0A25               	xorlw	37
  2219  000D74  A4D8               	btfss	status,2,c
  2220  000D76  EFBF  F006         	goto	u7201
  2221  000D7A  EFC1  F006         	goto	u7200
  2222  000D7E                     u7201:
  2223  000D7E  EF49  F009         	goto	l5471
  2224  000D82                     u7200:
  2225  000D82                     
  2226                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  2227  000D82  C0CF  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2228  000D86  C0D0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2229  000D8A  2ADE               	incf	postinc2,f,c
  2230  000D8C  0E00               	movlw	0
  2231  000D8E  22DD               	addwfc	postdec2,f,c
  2232  000D90                     
  2233                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  2234  000D90  0E00               	movlw	0
  2235  000D92  0100               	movlb	0	; () banked
  2236  000D94  6FF2               	movwf	(_width+1)& (0+255),b
  2237  000D96  0E00               	movlw	0
  2238  000D98  6FF1               	movwf	_width& (0+255),b
  2239  000D9A  C0F1  F048         	movff	_width,_flags
  2240  000D9E  C0F2  F049         	movff	_width+1,_flags+1
  2241  000DA2                     
  2242                           ; BSR set to: 0
  2243                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  2244  000DA2  69F3               	setf	_prec& (0+255),b
  2245  000DA4  69F4               	setf	(_prec+1)& (0+255),b
  2246  000DA6                     
  2247                           ; BSR set to: 0
  2248                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 745:         if (
      +                          (*fmt)[0] == '*') {
  2249  000DA6  C0CF  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2250  000DAA  C0D0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2251  000DAE  CFDE FFF6          	movff	postinc2,tblptrl
  2252  000DB2  CFDD FFF7          	movff	postdec2,tblptrh
  2253  000DB6                     	if	0	;tblptru may be non-zero
  2254  000DB6                     	endif
  2255  000DB6                     	if	0	;tblptru may be non-zero
  2256  000DB6                     	endif
  2257  000DB6  0008               	tblrd		*
  2258  000DB8  50F5               	movf	tablat,w,c
  2259  000DBA  0A2A               	xorlw	42
  2260  000DBC  A4D8               	btfss	status,2,c
  2261  000DBE  EFE3  F006         	goto	u7211
  2262  000DC2  EFE5  F006         	goto	u7210
  2263  000DC6                     u7211:
  2264  000DC6  EF0E  F007         	goto	l5387
  2265  000DCA                     u7210:
  2266  000DCA                     
  2267                           ; BSR set to: 0
  2268                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 746:             
      +                          ++*fmt;
  2269  000DCA  C0CF  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2270  000DCE  C0D0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2271  000DD2  2ADE               	incf	postinc2,f,c
  2272  000DD4  0E00               	movlw	0
  2273  000DD6  22DD               	addwfc	postdec2,f,c
  2274                           
  2275                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 747:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  2276  000DD8  C0D1  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2277  000DDC  C0D2  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2278  000DE0  CFDF F0D3          	movff	indf2,??_vfpfcnvrt
  2279  000DE4  0E02               	movlw	2
  2280  000DE6  26DE               	addwf	postinc2,f,c
  2281  000DE8  CFDF F0D4          	movff	indf2,??_vfpfcnvrt+1
  2282  000DEC  0E00               	movlw	0
  2283  000DEE  22DD               	addwfc	postdec2,f,c
  2284  000DF0  C0D3  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2285  000DF4  C0D4  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2286  000DF8  CFDE F0F1          	movff	postinc2,_width
  2287  000DFC  CFDD F0F2          	movff	postdec2,_width+1
  2288  000E00                     
  2289                           ; BSR set to: 0
  2290                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 748:             
      +                          if (width < 0) {
  2291  000E00  BFF2               	btfsc	(_width+1)& (0+255),7,b
  2292  000E02  EF07  F007         	goto	u7220
  2293  000E06  EF05  F007         	goto	u7221
  2294  000E0A                     u7221:
  2295  000E0A  EF52  F007         	goto	l5397
  2296  000E0E                     u7220:
  2297  000E0E                     
  2298                           ; BSR set to: 0
  2299                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 749:             
      +                              flags |= (1 << 0);
  2300  000E0E  8048               	bsf	_flags^0,0,c
  2301                           
  2302                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 750:             
      +                              width = -width;
  2303  000E10  6DF1               	negf	_width& (0+255),b
  2304  000E12  1FF2               	comf	(_width+1)& (0+255),f,b
  2305  000E14  B0D8               	btfsc	status,0,c
  2306  000E16  2BF2               	incf	(_width+1)& (0+255),f,b
  2307  000E18  EF52  F007         	goto	l5397
  2308  000E1C                     l5387:
  2309                           
  2310                           ; BSR set to: 0
  2311                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 753:             
      +                          width = atoi(*fmt);
  2312  000E1C  C0CF  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2313  000E20  C0D0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2314  000E24  CFDE F016          	movff	postinc2,atoi@s
  2315  000E28  CFDD F017          	movff	postdec2,atoi@s+1
  2316  000E2C  EC34  F013         	call	_atoi	;wreg free
  2317  000E30  C016  F0F1         	movff	?_atoi,_width
  2318  000E34  C017  F0F2         	movff	?_atoi+1,_width+1
  2319                           
  2320                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 754:             
      +                          while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  2321  000E38  EF25  F007         	goto	l5391
  2322  000E3C                     l5389:
  2323                           
  2324                           ; BSR set to: 0
  2325                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 755:             
      +                              ++*fmt;
  2326  000E3C  C0CF  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2327  000E40  C0D0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2328  000E44  2ADE               	incf	postinc2,f,c
  2329  000E46  0E00               	movlw	0
  2330  000E48  22DD               	addwfc	postdec2,f,c
  2331  000E4A                     l5391:
  2332  000E4A  0ED0               	movlw	208
  2333  000E4C  0100               	movlb	0	; () banked
  2334  000E4E  6FD3               	movwf	??_vfpfcnvrt& (0+255),b
  2335  000E50  0EFF               	movlw	255
  2336  000E52  6FD4               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2337  000E54  C0CF  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2338  000E58  C0D0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2339  000E5C  CFDE FFF6          	movff	postinc2,tblptrl
  2340  000E60  CFDD FFF7          	movff	postdec2,tblptrh
  2341  000E64                     	if	0	;tblptru may be non-zero
  2342  000E64                     	endif
  2343  000E64                     	if	0	;tblptru may be non-zero
  2344  000E64                     	endif
  2345  000E64  0008               	tblrd		*
  2346  000E66  50F5               	movf	tablat,w,c
  2347  000E68  6FD5               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  2348  000E6A  6BD6               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  2349  000E6C  51D3               	movf	??_vfpfcnvrt& (0+255),w,b
  2350  000E6E  27D5               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  2351  000E70  51D4               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2352  000E72  23D6               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  2353  000E74  51D6               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  2354  000E76  E10A               	bnz	u7230
  2355  000E78  0E0A               	movlw	10
  2356  000E7A  5DD5               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  2357  000E7C  A0D8               	btfss	status,0,c
  2358  000E7E  EF43  F007         	goto	u7231
  2359  000E82  EF46  F007         	goto	u7230
  2360  000E86                     u7231:
  2361  000E86  0E01               	movlw	1
  2362  000E88  EF47  F007         	goto	u7240
  2363  000E8C                     u7230:
  2364  000E8C  0E00               	movlw	0
  2365  000E8E                     u7240:
  2366  000E8E  6FD7               	movwf	_vfpfcnvrt$906& (0+255),b
  2367  000E90  6BD8               	clrf	(_vfpfcnvrt$906+1)& (0+255),b
  2368  000E92                     
  2369                           ; BSR set to: 0
  2370  000E92  51D7               	movf	_vfpfcnvrt$906& (0+255),w,b
  2371  000E94  11D8               	iorwf	(_vfpfcnvrt$906+1)& (0+255),w,b
  2372  000E96  A4D8               	btfss	status,2,c
  2373  000E98  EF50  F007         	goto	u7251
  2374  000E9C  EF52  F007         	goto	u7250
  2375  000EA0                     u7251:
  2376  000EA0  EF1E  F007         	goto	l5389
  2377  000EA4                     u7250:
  2378  000EA4                     l5397:
  2379                           
  2380                           ; BSR set to: 0
  2381                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 762:         if (
      +                          (*fmt)[0] == '.') {
  2382  000EA4  C0CF  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2383  000EA8  C0D0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2384  000EAC  CFDE FFF6          	movff	postinc2,tblptrl
  2385  000EB0  CFDD FFF7          	movff	postdec2,tblptrh
  2386  000EB4                     	if	0	;tblptru may be non-zero
  2387  000EB4                     	endif
  2388  000EB4                     	if	0	;tblptru may be non-zero
  2389  000EB4                     	endif
  2390  000EB4  0008               	tblrd		*
  2391  000EB6  50F5               	movf	tablat,w,c
  2392  000EB8  0A2E               	xorlw	46
  2393  000EBA  A4D8               	btfss	status,2,c
  2394  000EBC  EF62  F007         	goto	u7261
  2395  000EC0  EF64  F007         	goto	u7260
  2396  000EC4                     u7261:
  2397  000EC4  EFE2  F007         	goto	l5417
  2398  000EC8                     u7260:
  2399  000EC8                     
  2400                           ; BSR set to: 0
  2401                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 763:             
      +                          prec = 0;
  2402  000EC8  0E00               	movlw	0
  2403  000ECA  6FF4               	movwf	(_prec+1)& (0+255),b
  2404  000ECC  0E00               	movlw	0
  2405  000ECE  6FF3               	movwf	_prec& (0+255),b
  2406  000ED0                     
  2407                           ; BSR set to: 0
  2408                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 764:             
      +                          ++*fmt;
  2409  000ED0  C0CF  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2410  000ED4  C0D0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2411  000ED8  2ADE               	incf	postinc2,f,c
  2412  000EDA  0E00               	movlw	0
  2413  000EDC  22DD               	addwfc	postdec2,f,c
  2414  000EDE                     
  2415                           ; BSR set to: 0
  2416                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 765:             
      +                          if ((*fmt)[0] == '*') {
  2417  000EDE  C0CF  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2418  000EE2  C0D0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2419  000EE6  CFDE FFF6          	movff	postinc2,tblptrl
  2420  000EEA  CFDD FFF7          	movff	postdec2,tblptrh
  2421  000EEE                     	if	0	;tblptru may be non-zero
  2422  000EEE                     	endif
  2423  000EEE                     	if	0	;tblptru may be non-zero
  2424  000EEE                     	endif
  2425  000EEE  0008               	tblrd		*
  2426  000EF0  50F5               	movf	tablat,w,c
  2427  000EF2  0A2A               	xorlw	42
  2428  000EF4  A4D8               	btfss	status,2,c
  2429  000EF6  EF7F  F007         	goto	u7271
  2430  000EFA  EF81  F007         	goto	u7270
  2431  000EFE                     u7271:
  2432  000EFE  EF9E  F007         	goto	l5407
  2433  000F02                     u7270:
  2434  000F02                     
  2435                           ; BSR set to: 0
  2436                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 766:             
      +                              ++*fmt;
  2437  000F02  C0CF  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2438  000F06  C0D0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2439  000F0A  2ADE               	incf	postinc2,f,c
  2440  000F0C  0E00               	movlw	0
  2441  000F0E  22DD               	addwfc	postdec2,f,c
  2442                           
  2443                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 767:             
      +                              prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  2444  000F10  C0D1  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2445  000F14  C0D2  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2446  000F18  CFDF F0D3          	movff	indf2,??_vfpfcnvrt
  2447  000F1C  0E02               	movlw	2
  2448  000F1E  26DE               	addwf	postinc2,f,c
  2449  000F20  CFDF F0D4          	movff	indf2,??_vfpfcnvrt+1
  2450  000F24  0E00               	movlw	0
  2451  000F26  22DD               	addwfc	postdec2,f,c
  2452  000F28  C0D3  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2453  000F2C  C0D4  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2454  000F30  CFDE F0F3          	movff	postinc2,_prec
  2455  000F34  CFDD F0F4          	movff	postdec2,_prec+1
  2456                           
  2457                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 768:             
      +                          } else {
  2458  000F38  EFE2  F007         	goto	l5417
  2459  000F3C                     l5407:
  2460                           
  2461                           ; BSR set to: 0
  2462                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 769:             
      +                              prec = atoi(*fmt);
  2463  000F3C  C0CF  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2464  000F40  C0D0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2465  000F44  CFDE F016          	movff	postinc2,atoi@s
  2466  000F48  CFDD F017          	movff	postdec2,atoi@s+1
  2467  000F4C  EC34  F013         	call	_atoi	;wreg free
  2468  000F50  C016  F0F3         	movff	?_atoi,_prec
  2469  000F54  C017  F0F4         	movff	?_atoi+1,_prec+1
  2470                           
  2471                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 770:             
      +                              while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  2472  000F58  EFB5  F007         	goto	l5411
  2473  000F5C                     l5409:
  2474                           
  2475                           ; BSR set to: 0
  2476                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 771:             
      +                                  ++*fmt;
  2477  000F5C  C0CF  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2478  000F60  C0D0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2479  000F64  2ADE               	incf	postinc2,f,c
  2480  000F66  0E00               	movlw	0
  2481  000F68  22DD               	addwfc	postdec2,f,c
  2482  000F6A                     l5411:
  2483  000F6A  0ED0               	movlw	208
  2484  000F6C  0100               	movlb	0	; () banked
  2485  000F6E  6FD3               	movwf	??_vfpfcnvrt& (0+255),b
  2486  000F70  0EFF               	movlw	255
  2487  000F72  6FD4               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2488  000F74  C0CF  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2489  000F78  C0D0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2490  000F7C  CFDE FFF6          	movff	postinc2,tblptrl
  2491  000F80  CFDD FFF7          	movff	postdec2,tblptrh
  2492  000F84                     	if	0	;tblptru may be non-zero
  2493  000F84                     	endif
  2494  000F84                     	if	0	;tblptru may be non-zero
  2495  000F84                     	endif
  2496  000F84  0008               	tblrd		*
  2497  000F86  50F5               	movf	tablat,w,c
  2498  000F88  6FD5               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  2499  000F8A  6BD6               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  2500  000F8C  51D3               	movf	??_vfpfcnvrt& (0+255),w,b
  2501  000F8E  27D5               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  2502  000F90  51D4               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2503  000F92  23D6               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  2504  000F94  51D6               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  2505  000F96  E10A               	bnz	u7280
  2506  000F98  0E0A               	movlw	10
  2507  000F9A  5DD5               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  2508  000F9C  A0D8               	btfss	status,0,c
  2509  000F9E  EFD3  F007         	goto	u7281
  2510  000FA2  EFD6  F007         	goto	u7280
  2511  000FA6                     u7281:
  2512  000FA6  0E01               	movlw	1
  2513  000FA8  EFD7  F007         	goto	u7290
  2514  000FAC                     u7280:
  2515  000FAC  0E00               	movlw	0
  2516  000FAE                     u7290:
  2517  000FAE  6FD9               	movwf	_vfpfcnvrt$907& (0+255),b
  2518  000FB0  6BDA               	clrf	(_vfpfcnvrt$907+1)& (0+255),b
  2519  000FB2                     
  2520                           ; BSR set to: 0
  2521  000FB2  51D9               	movf	_vfpfcnvrt$907& (0+255),w,b
  2522  000FB4  11DA               	iorwf	(_vfpfcnvrt$907+1)& (0+255),w,b
  2523  000FB6  A4D8               	btfss	status,2,c
  2524  000FB8  EFE0  F007         	goto	u7301
  2525  000FBC  EFE2  F007         	goto	u7300
  2526  000FC0                     u7301:
  2527  000FC0  EFAE  F007         	goto	l5409
  2528  000FC4                     u7300:
  2529  000FC4                     l5417:
  2530                           
  2531                           ; BSR set to: 0
  2532                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 779:         ct[0
      +                          ] = (char)tolower((int)(*fmt)[0]);
  2533  000FC4  C0CF  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2534  000FC8  C0D0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2535  000FCC  CFDE FFF6          	movff	postinc2,tblptrl
  2536  000FD0  CFDD FFF7          	movff	postdec2,tblptrh
  2537  000FD4                     	if	0	;tblptru may be non-zero
  2538  000FD4                     	endif
  2539  000FD4                     	if	0	;tblptru may be non-zero
  2540  000FD4                     	endif
  2541  000FD4  0008               	tblrd		*
  2542  000FD6  50F5               	movf	tablat,w,c
  2543  000FD8  6E15               	movwf	tolower@c^0,c
  2544  000FDA  6A16               	clrf	(tolower@c+1)^0,c
  2545  000FDC  ECCD  F018         	call	_tolower	;wreg free
  2546  000FE0  5015               	movf	?_tolower^0,w,c
  2547  000FE2  0100               	movlb	0	; () banked
  2548  000FE4  6FE1               	movwf	vfpfcnvrt@ct& (0+255),b
  2549  000FE6                     
  2550                           ; BSR set to: 0
  2551                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 780:         if (
      +                          ct[0]) {
  2552  000FE6  51E1               	movf	vfpfcnvrt@ct& (0+255),w,b
  2553  000FE8  B4D8               	btfsc	status,2,c
  2554  000FEA  EFF9  F007         	goto	u7311
  2555  000FEE  EFFB  F007         	goto	u7310
  2556  000FF2                     u7311:
  2557  000FF2  EF35  F008         	goto	l5427
  2558  000FF6                     u7310:
  2559  000FF6                     
  2560                           ; BSR set to: 0
  2561                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 781:             
      +                          ct[1] = (char)tolower((int)(*fmt)[1]);
  2562  000FF6  C0CF  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2563  000FFA  C0D0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2564  000FFE  CFDE F0D3          	movff	postinc2,??_vfpfcnvrt
  2565  001002  CFDD F0D4          	movff	postdec2,??_vfpfcnvrt+1
  2566  001006  0E01               	movlw	1
  2567  001008  27D3               	addwf	??_vfpfcnvrt& (0+255),f,b
  2568  00100A  0E00               	movlw	0
  2569  00100C  23D4               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  2570  00100E  C0D3  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2571  001012  C0D4  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2572  001016                     	if	0	;tblptru may be non-zero
  2573  001016                     	endif
  2574  001016                     	if	0	;tblptru may be non-zero
  2575  001016                     	endif
  2576  001016  0008               	tblrd		*
  2577  001018  50F5               	movf	tablat,w,c
  2578  00101A  6E15               	movwf	tolower@c^0,c
  2579  00101C  6A16               	clrf	(tolower@c+1)^0,c
  2580  00101E  ECCD  F018         	call	_tolower	;wreg free
  2581  001022  5015               	movf	?_tolower^0,w,c
  2582  001024  0100               	movlb	0	; () banked
  2583  001026  6FE2               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  2584  001028                     
  2585                           ; BSR set to: 0
  2586                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 782:             
      +                          if (ct[1]) {
  2587  001028  51E2               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  2588  00102A  B4D8               	btfsc	status,2,c
  2589  00102C  EF1A  F008         	goto	u7321
  2590  001030  EF1C  F008         	goto	u7320
  2591  001034                     u7321:
  2592  001034  EF35  F008         	goto	l5427
  2593  001038                     u7320:
  2594  001038                     
  2595                           ; BSR set to: 0
  2596                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 783:             
      +                              ct[2] = (char)tolower((int)(*fmt)[2]);
  2597  001038  C0CF  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2598  00103C  C0D0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2599  001040  CFDE F0D3          	movff	postinc2,??_vfpfcnvrt
  2600  001044  CFDD F0D4          	movff	postdec2,??_vfpfcnvrt+1
  2601  001048  0E02               	movlw	2
  2602  00104A  27D3               	addwf	??_vfpfcnvrt& (0+255),f,b
  2603  00104C  0E00               	movlw	0
  2604  00104E  23D4               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  2605  001050  C0D3  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2606  001054  C0D4  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2607  001058                     	if	0	;tblptru may be non-zero
  2608  001058                     	endif
  2609  001058                     	if	0	;tblptru may be non-zero
  2610  001058                     	endif
  2611  001058  0008               	tblrd		*
  2612  00105A  50F5               	movf	tablat,w,c
  2613  00105C  6E15               	movwf	tolower@c^0,c
  2614  00105E  6A16               	clrf	(tolower@c+1)^0,c
  2615  001060  ECCD  F018         	call	_tolower	;wreg free
  2616  001064  5015               	movf	?_tolower^0,w,c
  2617  001066  0100               	movlb	0	; () banked
  2618  001068  6FE3               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  2619  00106A                     l5427:
  2620                           
  2621                           ; BSR set to: 0
  2622                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 942:         if (
      +                          ct[0] == 'f') {
  2623  00106A  0E66               	movlw	102
  2624  00106C  19E1               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  2625  00106E  A4D8               	btfss	status,2,c
  2626  001070  EF3C  F008         	goto	u7331
  2627  001074  EF3E  F008         	goto	u7330
  2628  001078                     u7331:
  2629  001078  EF7E  F008         	goto	l5439
  2630  00107C                     u7330:
  2631  00107C                     
  2632                           ; BSR set to: 0
  2633                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 944:             
      +                          c = (*fmt)[0];
  2634  00107C  C0CF  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2635  001080  C0D0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2636  001084  CFDE FFF6          	movff	postinc2,tblptrl
  2637  001088  CFDD FFF7          	movff	postdec2,tblptrh
  2638  00108C                     	if	0	;tblptru may be non-zero
  2639  00108C                     	endif
  2640  00108C                     	if	0	;tblptru may be non-zero
  2641  00108C                     	endif
  2642  00108C  0008               	tblrd		*
  2643  00108E  CFF5 F0E4          	movff	tablat,vfpfcnvrt@c
  2644  001092                     
  2645                           ; BSR set to: 0
  2646                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 945:             
      +                          ++*fmt;
  2647  001092  C0CF  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2648  001096  C0D0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2649  00109A  2ADE               	incf	postinc2,f,c
  2650  00109C  0E00               	movlw	0
  2651  00109E  22DD               	addwfc	postdec2,f,c
  2652  0010A0                     
  2653                           ; BSR set to: 0
  2654                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 946:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2655  0010A0  C0D1  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2656  0010A4  C0D2  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2657  0010A8  CFDF F0D3          	movff	indf2,??_vfpfcnvrt
  2658  0010AC  0E04               	movlw	4
  2659  0010AE  26DE               	addwf	postinc2,f,c
  2660  0010B0  CFDF F0D4          	movff	indf2,??_vfpfcnvrt+1
  2661  0010B4  0E00               	movlw	0
  2662  0010B6  22DD               	addwfc	postdec2,f,c
  2663  0010B8  C0D3  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2664  0010BC  C0D4  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2665  0010C0  CFDE F0DD          	movff	postinc2,vfpfcnvrt@f
  2666  0010C4  CFDE F0DE          	movff	postinc2,vfpfcnvrt@f+1
  2667  0010C8  CFDE F0DF          	movff	postinc2,vfpfcnvrt@f+2
  2668  0010CC  CFDE F0E0          	movff	postinc2,vfpfcnvrt@f+3
  2669  0010D0                     l5435:
  2670                           
  2671                           ; BSR set to: 0
  2672                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 948:             
      +                          return efgtoa(fp, f, c);
  2673  0010D0  C0CD  F089         	movff	vfpfcnvrt@fp,efgtoa@fp
  2674  0010D4  C0CE  F08A         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  2675  0010D8  C0DD  F08B         	movff	vfpfcnvrt@f,efgtoa@f
  2676  0010DC  C0DE  F08C         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  2677  0010E0  C0DF  F08D         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  2678  0010E4  C0E0  F08E         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  2679  0010E8  C0E4  F08F         	movff	vfpfcnvrt@c,efgtoa@c
  2680  0010EC  EC81  F000         	call	_efgtoa	;wreg free
  2681  0010F0  C089  F0CD         	movff	?_efgtoa,?_vfpfcnvrt
  2682  0010F4  C08A  F0CE         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  2683  0010F8  EF64  F009         	goto	l987
  2684  0010FC                     l5439:
  2685                           
  2686                           ; BSR set to: 0
  2687                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 950:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  2688  0010FC  0EE1               	movlw	low vfpfcnvrt@ct
  2689  0010FE  6E0F               	movwf	strncmp@_l^0,c
  2690  001100  0E00               	movlw	high vfpfcnvrt@ct
  2691  001102  6E10               	movwf	(strncmp@_l+1)^0,c
  2692  001104  0EFC               	movlw	low STR_13
  2693  001106  6E11               	movwf	strncmp@_r^0,c
  2694  001108  0E7F               	movlw	high STR_13
  2695  00110A  6E12               	movwf	(strncmp@_r+1)^0,c
  2696  00110C  0E00               	movlw	0
  2697  00110E  6E14               	movwf	(strncmp@n+1)^0,c
  2698  001110  0E02               	movlw	2
  2699  001112  6E13               	movwf	strncmp@n^0,c
  2700  001114  EC82  F015         	call	_strncmp	;wreg free
  2701  001118  500F               	movf	?_strncmp^0,w,c
  2702  00111A  1010               	iorwf	(?_strncmp+1)^0,w,c
  2703  00111C  A4D8               	btfss	status,2,c
  2704  00111E  EF93  F008         	goto	u7341
  2705  001122  EF95  F008         	goto	u7340
  2706  001126                     u7341:
  2707  001126  EF11  F009         	goto	l5455
  2708  00112A                     u7340:
  2709  00112A                     
  2710                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 953:             
      +                          if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  2711  00112A  C0CF  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2712  00112E  C0D0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2713  001132  CFDE F0D3          	movff	postinc2,??_vfpfcnvrt
  2714  001136  CFDD F0D4          	movff	postdec2,??_vfpfcnvrt+1
  2715  00113A  0E01               	movlw	1
  2716  00113C  0100               	movlb	0	; () banked
  2717  00113E  27D3               	addwf	??_vfpfcnvrt& (0+255),f,b
  2718  001140  0E00               	movlw	0
  2719  001142  23D4               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  2720  001144  C0D3  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2721  001148  C0D4  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2722  00114C                     	if	0	;tblptru may be non-zero
  2723  00114C                     	endif
  2724  00114C                     	if	0	;tblptru may be non-zero
  2725  00114C                     	endif
  2726  00114C  0008               	tblrd		*
  2727  00114E  CFF5 F0E4          	movff	tablat,vfpfcnvrt@c
  2728  001152  0EBF               	movlw	191
  2729  001154  6FD3               	movwf	??_vfpfcnvrt& (0+255),b
  2730  001156  0EFF               	movlw	255
  2731  001158  6FD4               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2732  00115A  C0CF  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2733  00115E  C0D0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2734  001162  CFDE FFF6          	movff	postinc2,tblptrl
  2735  001166  CFDD FFF7          	movff	postdec2,tblptrh
  2736  00116A                     	if	0	;tblptru may be non-zero
  2737  00116A                     	endif
  2738  00116A                     	if	0	;tblptru may be non-zero
  2739  00116A                     	endif
  2740  00116A  0008               	tblrd		*
  2741  00116C  50F5               	movf	tablat,w,c
  2742  00116E  6FD5               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  2743  001170  6BD6               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  2744  001172  51D3               	movf	??_vfpfcnvrt& (0+255),w,b
  2745  001174  27D5               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  2746  001176  51D4               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2747  001178  23D6               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  2748  00117A  51D6               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  2749  00117C  E10A               	bnz	u7350
  2750  00117E  0E1A               	movlw	26
  2751  001180  5DD5               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  2752  001182  A0D8               	btfss	status,0,c
  2753  001184  EFC6  F008         	goto	u7351
  2754  001188  EFC9  F008         	goto	u7350
  2755  00118C                     u7351:
  2756  00118C  0E01               	movlw	1
  2757  00118E  EFCA  F008         	goto	u7360
  2758  001192                     u7350:
  2759  001192  0E00               	movlw	0
  2760  001194                     u7360:
  2761  001194  6FDB               	movwf	_vfpfcnvrt$911& (0+255),b
  2762  001196  6BDC               	clrf	(_vfpfcnvrt$911+1)& (0+255),b
  2763  001198                     
  2764                           ; BSR set to: 0
  2765  001198  51DB               	movf	_vfpfcnvrt$911& (0+255),w,b
  2766  00119A  11DC               	iorwf	(_vfpfcnvrt$911+1)& (0+255),w,b
  2767  00119C  B4D8               	btfsc	status,2,c
  2768  00119E  EFD3  F008         	goto	u7371
  2769  0011A2  EFD5  F008         	goto	u7370
  2770  0011A6                     u7371:
  2771  0011A6  EFEF  F008         	goto	l5449
  2772  0011AA                     u7370:
  2773  0011AA                     
  2774                           ; BSR set to: 0
  2775                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 954:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  2776  0011AA  C0D1  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2777  0011AE  C0D2  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2778  0011B2  CFDF F0D3          	movff	indf2,??_vfpfcnvrt
  2779  0011B6  0E04               	movlw	4
  2780  0011B8  26DE               	addwf	postinc2,f,c
  2781  0011BA  CFDF F0D4          	movff	indf2,??_vfpfcnvrt+1
  2782  0011BE  0E00               	movlw	0
  2783  0011C0  22DD               	addwfc	postdec2,f,c
  2784  0011C2  C0D3  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2785  0011C6  C0D4  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2786  0011CA  CFDE F0DD          	movff	postinc2,vfpfcnvrt@f
  2787  0011CE  CFDE F0DE          	movff	postinc2,vfpfcnvrt@f+1
  2788  0011D2  CFDE F0DF          	movff	postinc2,vfpfcnvrt@f+2
  2789  0011D6  CFDE F0E0          	movff	postinc2,vfpfcnvrt@f+3
  2790                           
  2791                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 955:             
      +                          } else {
  2792  0011DA  EF07  F009         	goto	l994
  2793  0011DE                     l5449:
  2794                           
  2795                           ; BSR set to: 0
  2796                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 956:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2797  0011DE  C0D1  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2798  0011E2  C0D2  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2799  0011E6  CFDF F0D3          	movff	indf2,??_vfpfcnvrt
  2800  0011EA  0E04               	movlw	4
  2801  0011EC  26DE               	addwf	postinc2,f,c
  2802  0011EE  CFDF F0D4          	movff	indf2,??_vfpfcnvrt+1
  2803  0011F2  0E00               	movlw	0
  2804  0011F4  22DD               	addwfc	postdec2,f,c
  2805  0011F6  C0D3  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2806  0011FA  C0D4  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2807  0011FE  CFDE F0DD          	movff	postinc2,vfpfcnvrt@f
  2808  001202  CFDE F0DE          	movff	postinc2,vfpfcnvrt@f+1
  2809  001206  CFDE F0DF          	movff	postinc2,vfpfcnvrt@f+2
  2810  00120A  CFDE F0E0          	movff	postinc2,vfpfcnvrt@f+3
  2811  00120E                     l994:
  2812                           
  2813                           ; BSR set to: 0
  2814                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 958:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  2815  00120E  0E02               	movlw	2
  2816  001210  C0CF  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2817  001214  C0D0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2818  001218  26DE               	addwf	postinc2,f,c
  2819  00121A  0E00               	movlw	0
  2820  00121C  22DD               	addwfc	postdec2,f,c
  2821  00121E  EF68  F008         	goto	l5435
  2822  001222                     l5455:
  2823                           
  2824                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  2825  001222  C0CF  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2826  001226  C0D0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2827  00122A  CFDE FFF6          	movff	postinc2,tblptrl
  2828  00122E  CFDD FFF7          	movff	postdec2,tblptrh
  2829  001232                     	if	0	;tblptru may be non-zero
  2830  001232                     	endif
  2831  001232                     	if	0	;tblptru may be non-zero
  2832  001232                     	endif
  2833  001232  0008               	tblrd		*
  2834  001234  50F5               	movf	tablat,w,c
  2835  001236  0A25               	xorlw	37
  2836  001238  A4D8               	btfss	status,2,c
  2837  00123A  EF21  F009         	goto	u7381
  2838  00123E  EF23  F009         	goto	u7380
  2839  001242                     u7381:
  2840  001242  EF3B  F009         	goto	l5465
  2841  001246                     u7380:
  2842  001246                     
  2843                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  2844  001246  C0CF  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2845  00124A  C0D0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2846  00124E  2ADE               	incf	postinc2,f,c
  2847  001250  0E00               	movlw	0
  2848  001252  22DD               	addwfc	postdec2,f,c
  2849  001254                     
  2850                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  2851  001254  0E00               	movlw	0
  2852  001256  6E10               	movwf	(fputc@c+1)^0,c
  2853  001258  0E25               	movlw	37
  2854  00125A  6E0F               	movwf	fputc@c^0,c
  2855  00125C  C0CD  F011         	movff	vfpfcnvrt@fp,fputc@fp
  2856  001260  C0CE  F012         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2857  001264  ECED  F015         	call	_fputc	;wreg free
  2858  001268                     l5461:
  2859                           
  2860                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  2861  001268  0E00               	movlw	0
  2862  00126A  0100               	movlb	0	; () banked
  2863  00126C  6FCE               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2864  00126E  0E01               	movlw	1
  2865  001270  6FCD               	movwf	?_vfpfcnvrt& (0+255),b
  2866  001272  EF64  F009         	goto	l987
  2867  001276                     l5465:
  2868                           
  2869                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  2870  001276  C0CF  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2871  00127A  C0D0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2872  00127E  2ADE               	incf	postinc2,f,c
  2873  001280  0E00               	movlw	0
  2874  001282  22DD               	addwfc	postdec2,f,c
  2875  001284                     
  2876                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  2877  001284  0E00               	movlw	0
  2878  001286  0100               	movlb	0	; () banked
  2879  001288  6FCE               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2880  00128A  0E00               	movlw	0
  2881  00128C  6FCD               	movwf	?_vfpfcnvrt& (0+255),b
  2882  00128E  EF64  F009         	goto	l987
  2883  001292                     l5471:
  2884                           
  2885                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  2886  001292  C0CF  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2887  001296  C0D0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2888  00129A  CFDE FFF6          	movff	postinc2,tblptrl
  2889  00129E  CFDD FFF7          	movff	postdec2,tblptrh
  2890  0012A2                     	if	0	;tblptru may be non-zero
  2891  0012A2                     	endif
  2892  0012A2                     	if	0	;tblptru may be non-zero
  2893  0012A2                     	endif
  2894  0012A2  0008               	tblrd		*
  2895  0012A4  50F5               	movf	tablat,w,c
  2896  0012A6  6E0F               	movwf	fputc@c^0,c
  2897  0012A8  6A10               	clrf	(fputc@c+1)^0,c
  2898  0012AA  C0CD  F011         	movff	vfpfcnvrt@fp,fputc@fp
  2899  0012AE  C0CE  F012         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2900  0012B2  ECED  F015         	call	_fputc	;wreg free
  2901  0012B6                     
  2902                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  2903  0012B6  C0CF  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2904  0012BA  C0D0  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2905  0012BE  2ADE               	incf	postinc2,f,c
  2906  0012C0  0E00               	movlw	0
  2907  0012C2  22DD               	addwfc	postdec2,f,c
  2908  0012C4  EF34  F009         	goto	l5461
  2909  0012C8                     l987:
  2910  0012C8  0012               	return		;funcret
  2911  0012CA                     __end_of_vfpfcnvrt:
  2912                           	callstack 0
  2913                           
  2914 ;; *************** function _strncmp *****************
  2915 ;; Defined at:
  2916 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strncmp.c"
  2917 ;; Parameters:    Size  Location     Type
  2918 ;;  _l              2   14[COMRAM] PTR const unsigned char 
  2919 ;;		 -> vfpfcnvrt@ct(3), 
  2920 ;;  _r              2   16[COMRAM] PTR const unsigned char 
  2921 ;;		 -> STR_15(3), 
  2922 ;;  n               2   18[COMRAM] unsigned int 
  2923 ;; Auto vars:     Size  Location     Type
  2924 ;;  r               2   23[COMRAM] PTR const unsigned char 
  2925 ;;		 -> STR_15(3), 
  2926 ;;  l               2   21[COMRAM] PTR const unsigned char 
  2927 ;;		 -> vfpfcnvrt@ct(3), 
  2928 ;; Return value:  Size  Location     Type
  2929 ;;                  2   14[COMRAM] int 
  2930 ;; Registers used:
  2931 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2932 ;; Tracked objects:
  2933 ;;		On entry : 0/0
  2934 ;;		On exit  : 0/0
  2935 ;;		Unchanged: 0/0
  2936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2937 ;;      Params:         6       0       0       0       0       0       0
  2938 ;;      Locals:         4       0       0       0       0       0       0
  2939 ;;      Temps:          1       0       0       0       0       0       0
  2940 ;;      Totals:        11       0       0       0       0       0       0
  2941 ;;Total ram usage:       11 bytes
  2942 ;; Hardware stack levels used: 1
  2943 ;; Hardware stack levels required when called: 2
  2944 ;; This function calls:
  2945 ;;		Nothing
  2946 ;; This function is called by:
  2947 ;;		_vfpfcnvrt
  2948 ;; This function uses a non-reentrant model
  2949 ;;
  2950                           
  2951                           	psect	text4
  2952  002B04                     __ptext4:
  2953                           	callstack 0
  2954  002B04                     _strncmp:
  2955                           	callstack 25
  2956  002B04  C00F  F016         	movff	strncmp@_l,strncmp@l
  2957  002B08  C010  F017         	movff	strncmp@_l+1,strncmp@l+1
  2958  002B0C  C011  F018         	movff	strncmp@_r,strncmp@r
  2959  002B10  C012  F019         	movff	strncmp@_r+1,strncmp@r+1
  2960  002B14  0613               	decf	strncmp@n^0,f,c
  2961  002B16  A0D8               	btfss	status,0,c
  2962  002B18  0614               	decf	(strncmp@n+1)^0,f,c
  2963  002B1A  2813               	incf	strncmp@n^0,w,c
  2964  002B1C  E106               	bnz	u7151
  2965  002B1E  2814               	incf	(strncmp@n+1)^0,w,c
  2966  002B20  A4D8               	btfss	status,2,c
  2967  002B22  EF95  F015         	goto	u7151
  2968  002B26  EF97  F015         	goto	u7150
  2969  002B2A                     u7151:
  2970  002B2A  EFA4  F015         	goto	l5359
  2971  002B2E                     u7150:
  2972  002B2E  0E00               	movlw	0
  2973  002B30  6E10               	movwf	(?_strncmp+1)^0,c
  2974  002B32  0E00               	movlw	0
  2975  002B34  6E0F               	movwf	?_strncmp^0,c
  2976  002B36  EFEC  F015         	goto	l1115
  2977  002B3A                     l5357:
  2978  002B3A  4A16               	infsnz	strncmp@l^0,f,c
  2979  002B3C  2A17               	incf	(strncmp@l+1)^0,f,c
  2980  002B3E  4A18               	infsnz	strncmp@r^0,f,c
  2981  002B40  2A19               	incf	(strncmp@r+1)^0,f,c
  2982  002B42  0613               	decf	strncmp@n^0,f,c
  2983  002B44  A0D8               	btfss	status,0,c
  2984  002B46  0614               	decf	(strncmp@n+1)^0,f,c
  2985  002B48                     l5359:
  2986  002B48  C016  FFD9         	movff	strncmp@l,fsr2l
  2987  002B4C  C017  FFDA         	movff	strncmp@l+1,fsr2h
  2988  002B50  50DF               	movf	indf2,w,c
  2989  002B52  B4D8               	btfsc	status,2,c
  2990  002B54  EFAE  F015         	goto	u7161
  2991  002B58  EFB0  F015         	goto	u7160
  2992  002B5C                     u7161:
  2993  002B5C  EFDB  F015         	goto	l5367
  2994  002B60                     u7160:
  2995  002B60  C018  FFF6         	movff	strncmp@r,tblptrl
  2996  002B64  C019  FFF7         	movff	strncmp@r+1,tblptrh
  2997  002B68                     	if	0	;tblptru may be non-zero
  2998  002B68                     	endif
  2999  002B68                     	if	0	;tblptru may be non-zero
  3000  002B68                     	endif
  3001  002B68  0008               	tblrd		*
  3002  002B6A  50F5               	movf	tablat,w,c
  3003  002B6C  0900               	iorlw	0
  3004  002B6E  B4D8               	btfsc	status,2,c
  3005  002B70  EFBC  F015         	goto	u7171
  3006  002B74  EFBE  F015         	goto	u7170
  3007  002B78                     u7171:
  3008  002B78  EFDB  F015         	goto	l5367
  3009  002B7C                     u7170:
  3010  002B7C  5013               	movf	strncmp@n^0,w,c
  3011  002B7E  1014               	iorwf	(strncmp@n+1)^0,w,c
  3012  002B80  B4D8               	btfsc	status,2,c
  3013  002B82  EFC5  F015         	goto	u7181
  3014  002B86  EFC7  F015         	goto	u7180
  3015  002B8A                     u7181:
  3016  002B8A  EFDB  F015         	goto	l5367
  3017  002B8E                     u7180:
  3018  002B8E  C016  FFD9         	movff	strncmp@l,fsr2l
  3019  002B92  C017  FFDA         	movff	strncmp@l+1,fsr2h
  3020  002B96  50DF               	movf	indf2,w,c
  3021  002B98  6E15               	movwf	??_strncmp^0,c
  3022  002B9A  C018  FFF6         	movff	strncmp@r,tblptrl
  3023  002B9E  C019  FFF7         	movff	strncmp@r+1,tblptrh
  3024  002BA2                     	if	0	;tblptru may be non-zero
  3025  002BA2                     	endif
  3026  002BA2                     	if	0	;tblptru may be non-zero
  3027  002BA2                     	endif
  3028  002BA2  0008               	tblrd		*
  3029  002BA4  50F5               	movf	tablat,w,c
  3030  002BA6  1815               	xorwf	??_strncmp^0,w,c
  3031  002BA8  B4D8               	btfsc	status,2,c
  3032  002BAA  EFD9  F015         	goto	u7191
  3033  002BAE  EFDB  F015         	goto	u7190
  3034  002BB2                     u7191:
  3035  002BB2  EF9D  F015         	goto	l5357
  3036  002BB6                     u7190:
  3037  002BB6                     l5367:
  3038  002BB6  C016  FFD9         	movff	strncmp@l,fsr2l
  3039  002BBA  C017  FFDA         	movff	strncmp@l+1,fsr2h
  3040  002BBE  50DF               	movf	indf2,w,c
  3041  002BC0  6E15               	movwf	??_strncmp^0,c
  3042  002BC2  C018  FFF6         	movff	strncmp@r,tblptrl
  3043  002BC6  C019  FFF7         	movff	strncmp@r+1,tblptrh
  3044  002BCA                     	if	0	;tblptru may be non-zero
  3045  002BCA                     	endif
  3046  002BCA                     	if	0	;tblptru may be non-zero
  3047  002BCA                     	endif
  3048  002BCA  0008               	tblrd		*
  3049  002BCC  50F5               	movf	tablat,w,c
  3050  002BCE  5C15               	subwf	??_strncmp^0,w,c
  3051  002BD0  6E0F               	movwf	?_strncmp^0,c
  3052  002BD2  6A10               	clrf	(?_strncmp+1)^0,c
  3053  002BD4  A0D8               	btfss	status,0,c
  3054  002BD6  0610               	decf	(?_strncmp+1)^0,f,c
  3055  002BD8                     l1115:
  3056  002BD8  0012               	return		;funcret
  3057  002BDA                     __end_of_strncmp:
  3058                           	callstack 0
  3059                           
  3060 ;; *************** function _efgtoa *****************
  3061 ;; Defined at:
  3062 ;;		line 332 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  3063 ;; Parameters:    Size  Location     Type
  3064 ;;  fp              2   41[BANK0 ] PTR struct _IO_FILE
  3065 ;;		 -> sprintf@f(6), 
  3066 ;;  f               4   43[BANK0 ] PTR struct _IO_FILE
  3067 ;;  c               1   47[BANK0 ] unsigned char 
  3068 ;; Auto vars:     Size  Location     Type
  3069 ;;  u               4  105[BANK0 ] unsigned char 
  3070 ;;  g               4   97[BANK0 ] unsigned char 
  3071 ;;  l               4   91[BANK0 ] unsigned char 
  3072 ;;  h               4   87[BANK0 ] unsigned char 
  3073 ;;  ou              4   73[BANK0 ] unsigned char 
  3074 ;;  n               2  103[BANK0 ] int 
  3075 ;;  e               2  101[BANK0 ] int 
  3076 ;;  i               2   95[BANK0 ] int 
  3077 ;;  w               2   83[BANK0 ] int 
  3078 ;;  p               2   81[BANK0 ] int 
  3079 ;;  sign            2   79[BANK0 ] int 
  3080 ;;  d               2   77[BANK0 ] int 
  3081 ;;  m               2   71[BANK0 ] int 
  3082 ;;  ne              2   69[BANK0 ] int 
  3083 ;;  pp              2   67[BANK0 ] int 
  3084 ;;  t               2   65[BANK0 ] int 
  3085 ;;  mode            1   86[BANK0 ] unsigned char 
  3086 ;;  nmode           1   85[BANK0 ] unsigned char 
  3087 ;; Return value:  Size  Location     Type
  3088 ;;                  2   41[BANK0 ] int 
  3089 ;; Registers used:
  3090 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3091 ;; Tracked objects:
  3092 ;;		On entry : 0/0
  3093 ;;		On exit  : 0/0
  3094 ;;		Unchanged: 0/0
  3095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3096 ;;      Params:         0       7       0       0       0       0       0
  3097 ;;      Locals:         0      56       0       0       0       0       0
  3098 ;;      Temps:          0       5       0       0       0       0       0
  3099 ;;      Totals:         0      68       0       0       0       0       0
  3100 ;;Total ram usage:       68 bytes
  3101 ;; Hardware stack levels used: 1
  3102 ;; Hardware stack levels required when called: 6
  3103 ;; This function calls:
  3104 ;;		___awdiv
  3105 ;;		___awmod
  3106 ;;		___fladd
  3107 ;;		___fldiv
  3108 ;;		___fleq
  3109 ;;		___flge
  3110 ;;		___flmul
  3111 ;;		___flneg
  3112 ;;		___flsub
  3113 ;;		___fltol
  3114 ;;		___fpclassifyf
  3115 ;;		_floorf
  3116 ;;		_isupper
  3117 ;;		_pad
  3118 ;;		_strcpy
  3119 ;;		_tolower
  3120 ;; This function is called by:
  3121 ;;		_vfpfcnvrt
  3122 ;; This function uses a non-reentrant model
  3123 ;;
  3124                           
  3125                           	psect	text5
  3126  000102                     __ptext5:
  3127                           	callstack 0
  3128  000102                     _efgtoa:
  3129                           	callstack 21
  3130  000102                     
  3131                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 332: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.32\pic\sources\
      +                          c99\common\doprnt.c: 333: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\
      +                          doprnt.c: 334:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c9
      +                          9\common\doprnt.c: 335:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 336:     long double g, h, l, ou, u;
  3132  000102  0E00               	movlw	0
  3133  000104  0100               	movlb	0	; () banked
  3134  000106  6FB0               	movwf	(efgtoa@sign+1)& (0+255),b
  3135  000108  0E00               	movlw	0
  3136  00010A  6FAF               	movwf	efgtoa@sign& (0+255),b
  3137  00010C                     
  3138                           ; BSR set to: 0
  3139                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 340:     g = f;
  3140  00010C  C08B  F0C1         	movff	efgtoa@f,efgtoa@g
  3141  000110  C08C  F0C2         	movff	efgtoa@f+1,efgtoa@g+1
  3142  000114  C08D  F0C3         	movff	efgtoa@f+2,efgtoa@g+2
  3143  000118  C08E  F0C4         	movff	efgtoa@f+3,efgtoa@g+3
  3144  00011C                     
  3145                           ; BSR set to: 0
  3146                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 341:     if (g < 
      +                          0.0) {
  3147  00011C  BFC4               	btfsc	(efgtoa@g+3)& (0+255),7,b
  3148  00011E  EF95  F000         	goto	u6540
  3149  000122  EF93  F000         	goto	u6541
  3150  000126                     u6541:
  3151  000126  EFAB  F000         	goto	l5011
  3152  00012A                     u6540:
  3153  00012A                     
  3154                           ; BSR set to: 0
  3155                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 342:         sign
      +                           = 1;
  3156  00012A  0E00               	movlw	0
  3157  00012C  6FB0               	movwf	(efgtoa@sign+1)& (0+255),b
  3158  00012E  0E01               	movlw	1
  3159  000130  6FAF               	movwf	efgtoa@sign& (0+255),b
  3160  000132                     
  3161                           ; BSR set to: 0
  3162                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 343:         g = 
      +                          -g;
  3163  000132  C0C1  F00F         	movff	efgtoa@g,___flneg@f1
  3164  000136  C0C2  F010         	movff	efgtoa@g+1,___flneg@f1+1
  3165  00013A  C0C3  F011         	movff	efgtoa@g+2,___flneg@f1+2
  3166  00013E  C0C4  F012         	movff	efgtoa@g+3,___flneg@f1+3
  3167  000142  EC2D  F01A         	call	___flneg	;wreg free
  3168  000146  C00F  F0C1         	movff	?___flneg,efgtoa@g
  3169  00014A  C010  F0C2         	movff	?___flneg+1,efgtoa@g+1
  3170  00014E  C011  F0C3         	movff	?___flneg+2,efgtoa@g+2
  3171  000152  C012  F0C4         	movff	?___flneg+3,efgtoa@g+3
  3172  000156                     l5011:
  3173                           
  3174                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 347:     n = 0;
  3175  000156  0E00               	movlw	0
  3176  000158  0100               	movlb	0	; () banked
  3177  00015A  6FC8               	movwf	(efgtoa@n+1)& (0+255),b
  3178  00015C  0E00               	movlw	0
  3179  00015E  6FC7               	movwf	efgtoa@n& (0+255),b
  3180  000160                     
  3181                           ; BSR set to: 0
  3182                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 348:     w = widt
      +                          h;
  3183  000160  C0F1  F0B3         	movff	_width,efgtoa@w
  3184  000164  C0F2  F0B4         	movff	_width+1,efgtoa@w+1
  3185  000168                     
  3186                           ; BSR set to: 0
  3187                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 349:     if (sign
      +                           || (flags & (1 << 2))) {
  3188  000168  51AF               	movf	efgtoa@sign& (0+255),w,b
  3189  00016A  11B0               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3190  00016C  A4D8               	btfss	status,2,c
  3191  00016E  EFBB  F000         	goto	u6551
  3192  000172  EFBD  F000         	goto	u6550
  3193  000176                     u6551:
  3194  000176  EFC4  F000         	goto	l5019
  3195  00017A                     u6550:
  3196  00017A                     
  3197                           ; BSR set to: 0
  3198  00017A  A448               	btfss	_flags^0,2,c
  3199  00017C  EFC2  F000         	goto	u6561
  3200  000180  EFC4  F000         	goto	u6560
  3201  000184                     u6561:
  3202  000184  EFDE  F000         	goto	l5031
  3203  000188                     u6560:
  3204  000188                     l5019:
  3205                           
  3206                           ; BSR set to: 0
  3207                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 350:         dbuf
      +                          [n] = sign ? '-' : '+';
  3208  000188  51AF               	movf	efgtoa@sign& (0+255),w,b
  3209  00018A  11B0               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3210  00018C  A4D8               	btfss	status,2,c
  3211  00018E  EFCB  F000         	goto	u6571
  3212  000192  EFCD  F000         	goto	u6570
  3213  000196                     u6571:
  3214  000196  EFD3  F000         	goto	l5023
  3215  00019A                     u6570:
  3216  00019A                     
  3217                           ; BSR set to: 0
  3218  00019A  0E00               	movlw	0
  3219  00019C  6F96               	movwf	(_efgtoa$880+1)& (0+255),b
  3220  00019E  0E2B               	movlw	43
  3221  0001A0  6F95               	movwf	_efgtoa$880& (0+255),b
  3222  0001A2  EFD7  F000         	goto	l5025
  3223  0001A6                     l5023:
  3224                           
  3225                           ; BSR set to: 0
  3226  0001A6  0E00               	movlw	0
  3227  0001A8  6F96               	movwf	(_efgtoa$880+1)& (0+255),b
  3228  0001AA  0E2D               	movlw	45
  3229  0001AC  6F95               	movwf	_efgtoa$880& (0+255),b
  3230  0001AE                     l5025:
  3231                           
  3232                           ; BSR set to: 0
  3233  0001AE  C095  F116         	movff	_efgtoa$880,_dbuf
  3234  0001B2                     
  3235                           ; BSR set to: 0
  3236                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 351:         ++n;
  3237  0001B2  4BC7               	infsnz	efgtoa@n& (0+255),f,b
  3238  0001B4  2BC8               	incf	(efgtoa@n+1)& (0+255),f,b
  3239  0001B6                     
  3240                           ; BSR set to: 0
  3241                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 352:         --w;
  3242  0001B6  07B3               	decf	efgtoa@w& (0+255),f,b
  3243  0001B8  A0D8               	btfss	status,0,c
  3244  0001BA  07B4               	decf	(efgtoa@w+1)& (0+255),f,b
  3245  0001BC                     l5031:
  3246                           
  3247                           ; BSR set to: 0
  3248                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 357:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  3249  0001BC  C0C1  F00F         	movff	efgtoa@g,___fpclassifyf@x
  3250  0001C0  C0C2  F010         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3251  0001C4  C0C3  F011         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3252  0001C8  C0C4  F012         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3253  0001CC  EC03  F015         	call	___fpclassifyf	;wreg free
  3254  0001D0  040F               	decf	?___fpclassifyf^0,w,c
  3255  0001D2  1010               	iorwf	(?___fpclassifyf+1)^0,w,c
  3256  0001D4  A4D8               	btfss	status,2,c
  3257  0001D6  EFEF  F000         	goto	u6581
  3258  0001DA  EFF1  F000         	goto	u6580
  3259  0001DE                     u6581:
  3260  0001DE  EF48  F001         	goto	l5049
  3261  0001E2                     u6580:
  3262  0001E2  0EBF               	movlw	191
  3263  0001E4  0100               	movlb	0	; () banked
  3264  0001E6  6F90               	movwf	??_efgtoa& (0+255),b
  3265  0001E8  0EFF               	movlw	255
  3266  0001EA  6F91               	movwf	(??_efgtoa+1)& (0+255),b
  3267  0001EC  518F               	movf	efgtoa@c& (0+255),w,b
  3268  0001EE  6F92               	movwf	(??_efgtoa+2)& (0+255),b
  3269  0001F0  6B93               	clrf	(??_efgtoa+3)& (0+255),b
  3270  0001F2  5190               	movf	??_efgtoa& (0+255),w,b
  3271  0001F4  2792               	addwf	(??_efgtoa+2)& (0+255),f,b
  3272  0001F6  5191               	movf	(??_efgtoa+1)& (0+255),w,b
  3273  0001F8  2393               	addwfc	(??_efgtoa+3)& (0+255),f,b
  3274  0001FA  5193               	movf	(??_efgtoa+3)& (0+255),w,b
  3275  0001FC  E10A               	bnz	u6590
  3276  0001FE  0E1A               	movlw	26
  3277  000200  5D92               	subwf	(??_efgtoa+2)& (0+255),w,b
  3278  000202  A0D8               	btfss	status,0,c
  3279  000204  EF06  F001         	goto	u6591
  3280  000208  EF09  F001         	goto	u6590
  3281  00020C                     u6591:
  3282  00020C  0E01               	movlw	1
  3283  00020E  EF0A  F001         	goto	u6600
  3284  000212                     u6590:
  3285  000212  0E00               	movlw	0
  3286  000214                     u6600:
  3287  000214  6F97               	movwf	_efgtoa$881& (0+255),b
  3288  000216  6B98               	clrf	(_efgtoa$881+1)& (0+255),b
  3289  000218                     
  3290                           ; BSR set to: 0
  3291  000218  5197               	movf	_efgtoa$881& (0+255),w,b
  3292  00021A  1198               	iorwf	(_efgtoa$881+1)& (0+255),w,b
  3293  00021C  B4D8               	btfsc	status,2,c
  3294  00021E  EF13  F001         	goto	u6611
  3295  000222  EF15  F001         	goto	u6610
  3296  000226                     u6611:
  3297  000226  EF23  F001         	goto	l5041
  3298  00022A                     u6610:
  3299  00022A                     
  3300                           ; BSR set to: 0
  3301                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 358:             
      +                          strcpy(&dbuf[n], "INF");
  3302  00022A  0E16               	movlw	low _dbuf
  3303  00022C  25C7               	addwf	efgtoa@n& (0+255),w,b
  3304  00022E  6E0F               	movwf	strcpy@dest^0,c
  3305  000230  0E01               	movlw	high _dbuf
  3306  000232  21C8               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3307  000234  6E10               	movwf	(strcpy@dest+1)^0,c
  3308  000236  0EEC               	movlw	low STR_5
  3309  000238  6E11               	movwf	strcpy@src^0,c
  3310  00023A  0E7F               	movlw	high STR_5
  3311  00023C  6E12               	movwf	(strcpy@src+1)^0,c
  3312  00023E  EC2D  F019         	call	_strcpy	;wreg free
  3313                           
  3314                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 359:         } el
      +                          se {
  3315  000242  EF2F  F001         	goto	l5043
  3316  000246                     l5041:
  3317                           
  3318                           ; BSR set to: 0
  3319                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 360:             
      +                          strcpy(&dbuf[n], "inf");
  3320  000246  0E16               	movlw	low _dbuf
  3321  000248  25C7               	addwf	efgtoa@n& (0+255),w,b
  3322  00024A  6E0F               	movwf	strcpy@dest^0,c
  3323  00024C  0E01               	movlw	high _dbuf
  3324  00024E  21C8               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3325  000250  6E10               	movwf	(strcpy@dest+1)^0,c
  3326  000252  0EF4               	movlw	low STR_6
  3327  000254  6E11               	movwf	strcpy@src^0,c
  3328  000256  0E7F               	movlw	high STR_6
  3329  000258  6E12               	movwf	(strcpy@src+1)^0,c
  3330  00025A  EC2D  F019         	call	_strcpy	;wreg free
  3331  00025E                     l5043:
  3332                           
  3333                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 362:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  3334  00025E  0100               	movlb	0	; () banked
  3335  000260  0EFD               	movlw	253
  3336  000262  27B3               	addwf	efgtoa@w& (0+255),f,b
  3337  000264  0EFF               	movlw	255
  3338  000266  23B4               	addwfc	(efgtoa@w+1)& (0+255),f,b
  3339  000268                     l5045:
  3340                           
  3341                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 363:         retu
      +                          rn pad(fp, &dbuf[0], w);
  3342  000268  C089  F01F         	movff	efgtoa@fp,pad@fp
  3343  00026C  C08A  F020         	movff	efgtoa@fp+1,pad@fp+1
  3344  000270  0E16               	movlw	low _dbuf
  3345  000272  6E21               	movwf	pad@buf^0,c
  3346  000274  0E01               	movlw	high _dbuf
  3347  000276  6E22               	movwf	(pad@buf+1)^0,c
  3348  000278  C0B3  F023         	movff	efgtoa@w,pad@p
  3349  00027C  C0B4  F024         	movff	efgtoa@w+1,pad@p+1
  3350  000280  ECB4  F016         	call	_pad	;wreg free
  3351  000284  C01F  F089         	movff	?_pad,?_efgtoa
  3352  000288  C020  F08A         	movff	?_pad+1,?_efgtoa+1
  3353  00028C  EFAE  F006         	goto	l885
  3354  000290                     l5049:
  3355                           
  3356                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 366:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  3357  000290  C0C1  F00F         	movff	efgtoa@g,___fpclassifyf@x
  3358  000294  C0C2  F010         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3359  000298  C0C3  F011         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3360  00029C  C0C4  F012         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3361  0002A0  EC03  F015         	call	___fpclassifyf	;wreg free
  3362  0002A4  500F               	movf	?___fpclassifyf^0,w,c
  3363  0002A6  1010               	iorwf	(?___fpclassifyf+1)^0,w,c
  3364  0002A8  A4D8               	btfss	status,2,c
  3365  0002AA  EF59  F001         	goto	u6621
  3366  0002AE  EF5B  F001         	goto	u6620
  3367  0002B2                     u6621:
  3368  0002B2  EF9B  F001         	goto	l5067
  3369  0002B6                     u6620:
  3370  0002B6  0EBF               	movlw	191
  3371  0002B8  0100               	movlb	0	; () banked
  3372  0002BA  6F90               	movwf	??_efgtoa& (0+255),b
  3373  0002BC  0EFF               	movlw	255
  3374  0002BE  6F91               	movwf	(??_efgtoa+1)& (0+255),b
  3375  0002C0  518F               	movf	efgtoa@c& (0+255),w,b
  3376  0002C2  6F92               	movwf	(??_efgtoa+2)& (0+255),b
  3377  0002C4  6B93               	clrf	(??_efgtoa+3)& (0+255),b
  3378  0002C6  5190               	movf	??_efgtoa& (0+255),w,b
  3379  0002C8  2792               	addwf	(??_efgtoa+2)& (0+255),f,b
  3380  0002CA  5191               	movf	(??_efgtoa+1)& (0+255),w,b
  3381  0002CC  2393               	addwfc	(??_efgtoa+3)& (0+255),f,b
  3382  0002CE  5193               	movf	(??_efgtoa+3)& (0+255),w,b
  3383  0002D0  E10A               	bnz	u6630
  3384  0002D2  0E1A               	movlw	26
  3385  0002D4  5D92               	subwf	(??_efgtoa+2)& (0+255),w,b
  3386  0002D6  A0D8               	btfss	status,0,c
  3387  0002D8  EF70  F001         	goto	u6631
  3388  0002DC  EF73  F001         	goto	u6630
  3389  0002E0                     u6631:
  3390  0002E0  0E01               	movlw	1
  3391  0002E2  EF74  F001         	goto	u6640
  3392  0002E6                     u6630:
  3393  0002E6  0E00               	movlw	0
  3394  0002E8                     u6640:
  3395  0002E8  6F99               	movwf	_efgtoa$886& (0+255),b
  3396  0002EA  6B9A               	clrf	(_efgtoa$886+1)& (0+255),b
  3397  0002EC                     
  3398                           ; BSR set to: 0
  3399  0002EC  5199               	movf	_efgtoa$886& (0+255),w,b
  3400  0002EE  119A               	iorwf	(_efgtoa$886+1)& (0+255),w,b
  3401  0002F0  B4D8               	btfsc	status,2,c
  3402  0002F2  EF7D  F001         	goto	u6651
  3403  0002F6  EF7F  F001         	goto	u6650
  3404  0002FA                     u6651:
  3405  0002FA  EF8D  F001         	goto	l5059
  3406  0002FE                     u6650:
  3407  0002FE                     
  3408                           ; BSR set to: 0
  3409                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 367:             
      +                          strcpy(&dbuf[n], "NAN");
  3410  0002FE  0E16               	movlw	low _dbuf
  3411  000300  25C7               	addwf	efgtoa@n& (0+255),w,b
  3412  000302  6E0F               	movwf	strcpy@dest^0,c
  3413  000304  0E01               	movlw	high _dbuf
  3414  000306  21C8               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3415  000308  6E10               	movwf	(strcpy@dest+1)^0,c
  3416  00030A  0EF0               	movlw	low STR_9
  3417  00030C  6E11               	movwf	strcpy@src^0,c
  3418  00030E  0E7F               	movlw	high STR_9
  3419  000310  6E12               	movwf	(strcpy@src+1)^0,c
  3420  000312  EC2D  F019         	call	_strcpy	;wreg free
  3421                           
  3422                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 368:         } el
      +                          se {
  3423  000316  EF2F  F001         	goto	l5043
  3424  00031A                     l5059:
  3425                           
  3426                           ; BSR set to: 0
  3427                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 369:             
      +                          strcpy(&dbuf[n], "nan");
  3428  00031A  0E16               	movlw	low _dbuf
  3429  00031C  25C7               	addwf	efgtoa@n& (0+255),w,b
  3430  00031E  6E0F               	movwf	strcpy@dest^0,c
  3431  000320  0E01               	movlw	high _dbuf
  3432  000322  21C8               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3433  000324  6E10               	movwf	(strcpy@dest+1)^0,c
  3434  000326  0EF8               	movlw	low STR_10
  3435  000328  6E11               	movwf	strcpy@src^0,c
  3436  00032A  0E7F               	movlw	high STR_10
  3437  00032C  6E12               	movwf	(strcpy@src+1)^0,c
  3438  00032E  EC2D  F019         	call	_strcpy	;wreg free
  3439  000332  EF2F  F001         	goto	l5043
  3440  000336                     l5067:
  3441                           
  3442                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 376:     u = 1.0;
  3443  000336  0E00               	movlw	0
  3444  000338  0100               	movlb	0	; () banked
  3445  00033A  6FC9               	movwf	efgtoa@u& (0+255),b
  3446  00033C  0E00               	movlw	0
  3447  00033E  6FCA               	movwf	(efgtoa@u+1)& (0+255),b
  3448  000340  0E80               	movlw	128
  3449  000342  6FCB               	movwf	(efgtoa@u+2)& (0+255),b
  3450  000344  0E3F               	movlw	63
  3451  000346  6FCC               	movwf	(efgtoa@u+3)& (0+255),b
  3452                           
  3453                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 377:     e = 0;
  3454  000348  0E00               	movlw	0
  3455  00034A  6FC6               	movwf	(efgtoa@e+1)& (0+255),b
  3456  00034C  0E00               	movlw	0
  3457  00034E  6FC5               	movwf	efgtoa@e& (0+255),b
  3458  000350                     
  3459                           ; BSR set to: 0
  3460                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 378:     if (!(g 
      +                          == 0.0)) {
  3461  000350  C0C1  F00F         	movff	efgtoa@g,___fleq@ff1
  3462  000354  C0C2  F010         	movff	efgtoa@g+1,___fleq@ff1+1
  3463  000358  C0C3  F011         	movff	efgtoa@g+2,___fleq@ff1+2
  3464  00035C  C0C4  F012         	movff	efgtoa@g+3,___fleq@ff1+3
  3465  000360  0E00               	movlw	0
  3466  000362  6E13               	movwf	___fleq@ff2^0,c
  3467  000364  0E00               	movlw	0
  3468  000366  6E14               	movwf	(___fleq@ff2+1)^0,c
  3469  000368  0E00               	movlw	0
  3470  00036A  6E15               	movwf	(___fleq@ff2+2)^0,c
  3471  00036C  0E00               	movlw	0
  3472  00036E  6E16               	movwf	(___fleq@ff2+3)^0,c
  3473  000370  ECC5  F017         	call	___fleq	;wreg free
  3474  000374  B0D8               	btfsc	status,0,c
  3475  000376  EFBF  F001         	goto	u6661
  3476  00037A  EFC1  F001         	goto	u6660
  3477  00037E                     u6661:
  3478  00037E  EF46  F002         	goto	l5085
  3479  000382                     u6660:
  3480  000382  EFE0  F001         	goto	l5077
  3481  000386                     l5073:
  3482                           
  3483                           ; BSR set to: 0
  3484                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 380:             
      +                          u = u*10.0;
  3485  000386  C0C9  F03C         	movff	efgtoa@u,___flmul@b
  3486  00038A  C0CA  F03D         	movff	efgtoa@u+1,___flmul@b+1
  3487  00038E  C0CB  F03E         	movff	efgtoa@u+2,___flmul@b+2
  3488  000392  C0CC  F03F         	movff	efgtoa@u+3,___flmul@b+3
  3489  000396  0E00               	movlw	0
  3490  000398  6E40               	movwf	___flmul@a^0,c
  3491  00039A  0E00               	movlw	0
  3492  00039C  6E41               	movwf	(___flmul@a+1)^0,c
  3493  00039E  0E20               	movlw	32
  3494  0003A0  6E42               	movwf	(___flmul@a+2)^0,c
  3495  0003A2  0E41               	movlw	65
  3496  0003A4  6E43               	movwf	(___flmul@a+3)^0,c
  3497  0003A6  ECC6  F00B         	call	___flmul	;wreg free
  3498  0003AA  C03C  F0C9         	movff	?___flmul,efgtoa@u
  3499  0003AE  C03D  F0CA         	movff	?___flmul+1,efgtoa@u+1
  3500  0003B2  C03E  F0CB         	movff	?___flmul+2,efgtoa@u+2
  3501  0003B6  C03F  F0CC         	movff	?___flmul+3,efgtoa@u+3
  3502  0003BA                     
  3503                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 381:             
      +                          ++e;
  3504  0003BA  0100               	movlb	0	; () banked
  3505  0003BC  4BC5               	infsnz	efgtoa@e& (0+255),f,b
  3506  0003BE  2BC6               	incf	(efgtoa@e+1)& (0+255),f,b
  3507  0003C0                     l5077:
  3508                           
  3509                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 379:         whil
      +                          e (!(g < (u*10.0))) {
  3510  0003C0  C0C1  F071         	movff	efgtoa@g,___flge@ff1
  3511  0003C4  C0C2  F072         	movff	efgtoa@g+1,___flge@ff1+1
  3512  0003C8  C0C3  F073         	movff	efgtoa@g+2,___flge@ff1+2
  3513  0003CC  C0C4  F074         	movff	efgtoa@g+3,___flge@ff1+3
  3514  0003D0  0E00               	movlw	0
  3515  0003D2  6E40               	movwf	___flmul@a^0,c
  3516  0003D4  0E00               	movlw	0
  3517  0003D6  6E41               	movwf	(___flmul@a+1)^0,c
  3518  0003D8  0E20               	movlw	32
  3519  0003DA  6E42               	movwf	(___flmul@a+2)^0,c
  3520  0003DC  0E41               	movlw	65
  3521  0003DE  6E43               	movwf	(___flmul@a+3)^0,c
  3522  0003E0  C0C9  F03C         	movff	efgtoa@u,___flmul@b
  3523  0003E4  C0CA  F03D         	movff	efgtoa@u+1,___flmul@b+1
  3524  0003E8  C0CB  F03E         	movff	efgtoa@u+2,___flmul@b+2
  3525  0003EC  C0CC  F03F         	movff	efgtoa@u+3,___flmul@b+3
  3526  0003F0  ECC6  F00B         	call	___flmul	;wreg free
  3527  0003F4  C03C  F075         	movff	?___flmul,___flge@ff2
  3528  0003F8  C03D  F076         	movff	?___flmul+1,___flge@ff2+1
  3529  0003FC  C03E  F077         	movff	?___flmul+2,___flge@ff2+2
  3530  000400  C03F  F078         	movff	?___flmul+3,___flge@ff2+3
  3531  000404  EC80  F014         	call	___flge	;wreg free
  3532  000408  0100               	movlb	0	; () banked
  3533  00040A  B0D8               	btfsc	status,0,c
  3534  00040C  EF0A  F002         	goto	u6671
  3535  000410  EF0C  F002         	goto	u6670
  3536  000414                     u6671:
  3537  000414  EFC3  F001         	goto	l5073
  3538  000418                     u6670:
  3539  000418  EF2C  F002         	goto	l5083
  3540  00041C                     l5079:
  3541                           
  3542                           ; BSR set to: 0
  3543                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 384:             
      +                          u = u/10.0;
  3544  00041C  C0C9  F023         	movff	efgtoa@u,___fldiv@b
  3545  000420  C0CA  F024         	movff	efgtoa@u+1,___fldiv@b+1
  3546  000424  C0CB  F025         	movff	efgtoa@u+2,___fldiv@b+2
  3547  000428  C0CC  F026         	movff	efgtoa@u+3,___fldiv@b+3
  3548  00042C  0E00               	movlw	0
  3549  00042E  6E27               	movwf	___fldiv@a^0,c
  3550  000430  0E00               	movlw	0
  3551  000432  6E28               	movwf	(___fldiv@a+1)^0,c
  3552  000434  0E20               	movlw	32
  3553  000436  6E29               	movwf	(___fldiv@a+2)^0,c
  3554  000438  0E41               	movlw	65
  3555  00043A  6E2A               	movwf	(___fldiv@a+3)^0,c
  3556  00043C  ECDC  F00D         	call	___fldiv	;wreg free
  3557  000440  C023  F0C9         	movff	?___fldiv,efgtoa@u
  3558  000444  C024  F0CA         	movff	?___fldiv+1,efgtoa@u+1
  3559  000448  C025  F0CB         	movff	?___fldiv+2,efgtoa@u+2
  3560  00044C  C026  F0CC         	movff	?___fldiv+3,efgtoa@u+3
  3561  000450                     
  3562                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 385:             
      +                          --e;
  3563  000450  0100               	movlb	0	; () banked
  3564  000452  07C5               	decf	efgtoa@e& (0+255),f,b
  3565  000454  A0D8               	btfss	status,0,c
  3566  000456  07C6               	decf	(efgtoa@e+1)& (0+255),f,b
  3567  000458                     l5083:
  3568                           
  3569                           ; BSR set to: 0
  3570                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 383:         whil
      +                          e (g < u) {
  3571  000458  C0C1  F071         	movff	efgtoa@g,___flge@ff1
  3572  00045C  C0C2  F072         	movff	efgtoa@g+1,___flge@ff1+1
  3573  000460  C0C3  F073         	movff	efgtoa@g+2,___flge@ff1+2
  3574  000464  C0C4  F074         	movff	efgtoa@g+3,___flge@ff1+3
  3575  000468  C0C9  F075         	movff	efgtoa@u,___flge@ff2
  3576  00046C  C0CA  F076         	movff	efgtoa@u+1,___flge@ff2+1
  3577  000470  C0CB  F077         	movff	efgtoa@u+2,___flge@ff2+2
  3578  000474  C0CC  F078         	movff	efgtoa@u+3,___flge@ff2+3
  3579  000478  EC80  F014         	call	___flge	;wreg free
  3580  00047C  0100               	movlb	0	; () banked
  3581  00047E  A0D8               	btfss	status,0,c
  3582  000480  EF44  F002         	goto	u6681
  3583  000484  EF46  F002         	goto	u6680
  3584  000488                     u6681:
  3585  000488  EF0E  F002         	goto	l5079
  3586  00048C                     u6680:
  3587  00048C                     l5085:
  3588                           
  3589                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 390:     mode = (
      +                          char)tolower((int)c);
  3590  00048C  C08F  F015         	movff	efgtoa@c,tolower@c
  3591  000490  6A16               	clrf	(tolower@c+1)^0,c
  3592  000492  ECCD  F018         	call	_tolower	;wreg free
  3593  000496  5015               	movf	?_tolower^0,w,c
  3594  000498  0100               	movlb	0	; () banked
  3595  00049A  6FB6               	movwf	efgtoa@mode& (0+255),b
  3596  00049C                     
  3597                           ; BSR set to: 0
  3598                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 391:     nmode = 
      +                          mode;
  3599  00049C  C0B6  F0B5         	movff	efgtoa@mode,efgtoa@nmode
  3600  0004A0                     
  3601                           ; BSR set to: 0
  3602                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 392:     if (mode
      +                           == 'g') {
  3603  0004A0  0E67               	movlw	103
  3604  0004A2  19B6               	xorwf	efgtoa@mode& (0+255),w,b
  3605  0004A4  A4D8               	btfss	status,2,c
  3606  0004A6  EF57  F002         	goto	u6691
  3607  0004AA  EF59  F002         	goto	u6690
  3608  0004AE                     u6691:
  3609  0004AE  EF7F  F002         	goto	l5099
  3610  0004B2                     u6690:
  3611  0004B2                     
  3612                           ; BSR set to: 0
  3613                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 393:   if (prec =
      +                          = 0) {
  3614  0004B2  51F3               	movf	_prec& (0+255),w,b
  3615  0004B4  11F4               	iorwf	(_prec+1)& (0+255),w,b
  3616  0004B6  A4D8               	btfss	status,2,c
  3617  0004B8  EF60  F002         	goto	u6701
  3618  0004BC  EF62  F002         	goto	u6700
  3619  0004C0                     u6701:
  3620  0004C0  EF66  F002         	goto	l5095
  3621  0004C4                     u6700:
  3622  0004C4                     
  3623                           ; BSR set to: 0
  3624                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 394:    prec = 1;
  3625  0004C4  0E00               	movlw	0
  3626  0004C6  6FF4               	movwf	(_prec+1)& (0+255),b
  3627  0004C8  0E01               	movlw	1
  3628  0004CA  6FF3               	movwf	_prec& (0+255),b
  3629  0004CC                     l5095:
  3630                           
  3631                           ; BSR set to: 0
  3632                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 396:         p = 
      +                          (0 < prec) ? prec : 6;
  3633  0004CC  BFF4               	btfsc	(_prec+1)& (0+255),7,b
  3634  0004CE  EF73  F002         	goto	u6710
  3635  0004D2  51F4               	movf	(_prec+1)& (0+255),w,b
  3636  0004D4  E106               	bnz	u6711
  3637  0004D6  05F3               	decf	_prec& (0+255),w,b
  3638  0004D8  B0D8               	btfsc	status,0,c
  3639  0004DA  EF71  F002         	goto	u6711
  3640  0004DE  EF73  F002         	goto	u6710
  3641  0004E2                     u6711:
  3642  0004E2  EF79  F002         	goto	l903
  3643  0004E6                     u6710:
  3644  0004E6                     l5097:
  3645                           
  3646                           ; BSR set to: 0
  3647  0004E6  0E00               	movlw	0
  3648  0004E8  6FB2               	movwf	(efgtoa@p+1)& (0+255),b
  3649  0004EA  0E06               	movlw	6
  3650  0004EC  6FB1               	movwf	efgtoa@p& (0+255),b
  3651  0004EE  EF88  F002         	goto	l5105
  3652  0004F2                     l903:
  3653                           
  3654                           ; BSR set to: 0
  3655  0004F2  C0F3  F0B1         	movff	_prec,efgtoa@p
  3656  0004F6  C0F4  F0B2         	movff	_prec+1,efgtoa@p+1
  3657  0004FA  EF88  F002         	goto	l5105
  3658  0004FE                     l5099:
  3659                           
  3660                           ; BSR set to: 0
  3661                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 398:         p = 
      +                          (prec < 0) ? 6 : prec;
  3662  0004FE  BFF4               	btfsc	(_prec+1)& (0+255),7,b
  3663  000500  EF84  F002         	goto	u6721
  3664  000504  EF86  F002         	goto	u6720
  3665  000508                     u6721:
  3666  000508  EF73  F002         	goto	l5097
  3667  00050C                     u6720:
  3668  00050C  EF79  F002         	goto	l903
  3669  000510                     l5105:
  3670                           
  3671                           ; BSR set to: 0
  3672                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 402:     if (mode
      +                           == 'g') {
  3673  000510  0E67               	movlw	103
  3674  000512  19B6               	xorwf	efgtoa@mode& (0+255),w,b
  3675  000514  A4D8               	btfss	status,2,c
  3676  000516  EF8F  F002         	goto	u6731
  3677  00051A  EF91  F002         	goto	u6730
  3678  00051E                     u6731:
  3679  00051E  EFC0  F002         	goto	l5115
  3680  000522                     u6730:
  3681  000522                     
  3682                           ; BSR set to: 0
  3683                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 403:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  3684  000522  AFC6               	btfss	(efgtoa@e+1)& (0+255),7,b
  3685  000524  EF9F  F002         	goto	u6740
  3686  000528  0EFC               	movlw	252
  3687  00052A  5DC5               	subwf	efgtoa@e& (0+255),w,b
  3688  00052C  0EFF               	movlw	255
  3689  00052E  59C6               	subwfb	(efgtoa@e+1)& (0+255),w,b
  3690  000530  A0D8               	btfss	status,0,c
  3691  000532  EF9D  F002         	goto	u6741
  3692  000536  EF9F  F002         	goto	u6740
  3693  00053A                     u6741:
  3694  00053A  EFBE  F002         	goto	l5113
  3695  00053E                     u6740:
  3696  00053E                     
  3697                           ; BSR set to: 0
  3698  00053E  0EFF               	movlw	255
  3699  000540  6F90               	movwf	??_efgtoa& (0+255),b
  3700  000542  0EFF               	movlw	255
  3701  000544  6F91               	movwf	(??_efgtoa+1)& (0+255),b
  3702  000546  C0B1  F092         	movff	efgtoa@p,??_efgtoa+2
  3703  00054A  C0B2  F093         	movff	efgtoa@p+1,??_efgtoa+3
  3704  00054E  5190               	movf	??_efgtoa& (0+255),w,b
  3705  000550  2792               	addwf	(??_efgtoa+2)& (0+255),f,b
  3706  000552  5191               	movf	(??_efgtoa+1)& (0+255),w,b
  3707  000554  2393               	addwfc	(??_efgtoa+3)& (0+255),f,b
  3708  000556  51C5               	movf	efgtoa@e& (0+255),w,b
  3709  000558  5D92               	subwf	(??_efgtoa+2)& (0+255),w,b
  3710  00055A  5193               	movf	(??_efgtoa+3)& (0+255),w,b
  3711  00055C  0A80               	xorlw	128
  3712  00055E  6F94               	movwf	(??_efgtoa+4)& (0+255),b
  3713  000560  51C6               	movf	(efgtoa@e+1)& (0+255),w,b
  3714  000562  0A80               	xorlw	128
  3715  000564  5994               	subwfb	(??_efgtoa+4)& (0+255),w,b
  3716  000566  A0D8               	btfss	status,0,c
  3717  000568  EFB8  F002         	goto	u6751
  3718  00056C  EFBA  F002         	goto	u6750
  3719  000570                     u6751:
  3720  000570  EFBE  F002         	goto	l5113
  3721  000574                     u6750:
  3722  000574                     
  3723                           ; BSR set to: 0
  3724                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 404:             
      +                          nmode = 'f';
  3725  000574  0E66               	movlw	102
  3726  000576  6FB5               	movwf	efgtoa@nmode& (0+255),b
  3727                           
  3728                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 405:         } el
      +                          se {
  3729  000578  EFC0  F002         	goto	l5115
  3730  00057C                     l5113:
  3731                           
  3732                           ; BSR set to: 0
  3733                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 406:             
      +                          nmode = 'e';
  3734  00057C  0E65               	movlw	101
  3735  00057E  6FB5               	movwf	efgtoa@nmode& (0+255),b
  3736  000580                     l5115:
  3737                           
  3738                           ; BSR set to: 0
  3739                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 411:     m = p;
  3740  000580  C0B1  F0A7         	movff	efgtoa@p,efgtoa@m
  3741  000584  C0B2  F0A8         	movff	efgtoa@p+1,efgtoa@m+1
  3742  000588                     
  3743                           ; BSR set to: 0
  3744                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 412:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  3745  000588  0E67               	movlw	103
  3746  00058A  19B6               	xorwf	efgtoa@mode& (0+255),w,b
  3747  00058C  A4D8               	btfss	status,2,c
  3748  00058E  EFCB  F002         	goto	u6761
  3749  000592  EFCD  F002         	goto	u6760
  3750  000596                     u6761:
  3751  000596  EFDD  F002         	goto	l5123
  3752  00059A                     u6760:
  3753  00059A                     
  3754                           ; BSR set to: 0
  3755  00059A  0E66               	movlw	102
  3756  00059C  19B5               	xorwf	efgtoa@nmode& (0+255),w,b
  3757  00059E  A4D8               	btfss	status,2,c
  3758  0005A0  EFD4  F002         	goto	u6771
  3759  0005A4  EFD6  F002         	goto	u6770
  3760  0005A8                     u6771:
  3761  0005A8  EFDF  F002         	goto	l5125
  3762  0005AC                     u6770:
  3763  0005AC                     
  3764                           ; BSR set to: 0
  3765  0005AC  BFC6               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3766  0005AE  EFDD  F002         	goto	u6780
  3767  0005B2  EFDB  F002         	goto	u6781
  3768  0005B6                     u6781:
  3769  0005B6  EFDF  F002         	goto	l5125
  3770  0005BA                     u6780:
  3771  0005BA                     l5123:
  3772                           
  3773                           ; BSR set to: 0
  3774                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 413:         ++m;
  3775  0005BA  4BA7               	infsnz	efgtoa@m& (0+255),f,b
  3776  0005BC  2BA8               	incf	(efgtoa@m+1)& (0+255),f,b
  3777  0005BE                     l5125:
  3778                           
  3779                           ; BSR set to: 0
  3780                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 417:     if (nmod
      +                          e == 'f') {
  3781  0005BE  0E66               	movlw	102
  3782  0005C0  19B5               	xorwf	efgtoa@nmode& (0+255),w,b
  3783  0005C2  A4D8               	btfss	status,2,c
  3784  0005C4  EFE6  F002         	goto	u6791
  3785  0005C8  EFE8  F002         	goto	u6790
  3786  0005CC                     u6791:
  3787  0005CC  EF08  F003         	goto	l5135
  3788  0005D0                     u6790:
  3789  0005D0                     
  3790                           ; BSR set to: 0
  3791                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 418:         if (
      +                          e < 0) {
  3792  0005D0  BFC6               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3793  0005D2  EFEF  F002         	goto	u6800
  3794  0005D6  EFED  F002         	goto	u6801
  3795  0005DA                     u6801:
  3796  0005DA  EFFB  F002         	goto	l5131
  3797  0005DE                     u6800:
  3798  0005DE                     
  3799                           ; BSR set to: 0
  3800                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 419:             
      +                          u = 1.0;
  3801  0005DE  0E00               	movlw	0
  3802  0005E0  6FC9               	movwf	efgtoa@u& (0+255),b
  3803  0005E2  0E00               	movlw	0
  3804  0005E4  6FCA               	movwf	(efgtoa@u+1)& (0+255),b
  3805  0005E6  0E80               	movlw	128
  3806  0005E8  6FCB               	movwf	(efgtoa@u+2)& (0+255),b
  3807  0005EA  0E3F               	movlw	63
  3808  0005EC  6FCC               	movwf	(efgtoa@u+3)& (0+255),b
  3809                           
  3810                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 420:             
      +                          e = 0;
  3811  0005EE  0E00               	movlw	0
  3812  0005F0  6FC6               	movwf	(efgtoa@e+1)& (0+255),b
  3813  0005F2  0E00               	movlw	0
  3814  0005F4  6FC5               	movwf	efgtoa@e& (0+255),b
  3815  0005F6                     l5131:
  3816                           
  3817                           ; BSR set to: 0
  3818                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 422:         if (
      +                          !(mode == 'g')) {
  3819  0005F6  0E67               	movlw	103
  3820  0005F8  19B6               	xorwf	efgtoa@mode& (0+255),w,b
  3821  0005FA  B4D8               	btfsc	status,2,c
  3822  0005FC  EF02  F003         	goto	u6811
  3823  000600  EF04  F003         	goto	u6810
  3824  000604                     u6811:
  3825  000604  EF08  F003         	goto	l5135
  3826  000608                     u6810:
  3827  000608                     
  3828                           ; BSR set to: 0
  3829                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 423:             
      +                          m += e;
  3830  000608  51C5               	movf	efgtoa@e& (0+255),w,b
  3831  00060A  27A7               	addwf	efgtoa@m& (0+255),f,b
  3832  00060C  51C6               	movf	(efgtoa@e+1)& (0+255),w,b
  3833  00060E  23A8               	addwfc	(efgtoa@m+1)& (0+255),f,b
  3834  000610                     l5135:
  3835                           
  3836                           ; BSR set to: 0
  3837                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 428:     i = 0;
  3838  000610  0E00               	movlw	0
  3839  000612  6FC0               	movwf	(efgtoa@i+1)& (0+255),b
  3840  000614  0E00               	movlw	0
  3841  000616  6FBF               	movwf	efgtoa@i& (0+255),b
  3842  000618                     
  3843                           ; BSR set to: 0
  3844                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 429:     h = g;
  3845  000618  C0C1  F0B7         	movff	efgtoa@g,efgtoa@h
  3846  00061C  C0C2  F0B8         	movff	efgtoa@g+1,efgtoa@h+1
  3847  000620  C0C3  F0B9         	movff	efgtoa@g+2,efgtoa@h+2
  3848  000624  C0C4  F0BA         	movff	efgtoa@g+3,efgtoa@h+3
  3849  000628                     
  3850                           ; BSR set to: 0
  3851                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 430:     ou = u;
  3852  000628  C0C9  F0A9         	movff	efgtoa@u,efgtoa@ou
  3853  00062C  C0CA  F0AA         	movff	efgtoa@u+1,efgtoa@ou+1
  3854  000630  C0CB  F0AB         	movff	efgtoa@u+2,efgtoa@ou+2
  3855  000634  C0CC  F0AC         	movff	efgtoa@u+3,efgtoa@ou+3
  3856                           
  3857                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  3858  000638  EF99  F003         	goto	l5149
  3859  00063C                     l5141:
  3860                           
  3861                           ; BSR set to: 0
  3862                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 432:         l = 
      +                          floorf(h/u);
  3863  00063C  C0B7  F023         	movff	efgtoa@h,___fldiv@b
  3864  000640  C0B8  F024         	movff	efgtoa@h+1,___fldiv@b+1
  3865  000644  C0B9  F025         	movff	efgtoa@h+2,___fldiv@b+2
  3866  000648  C0BA  F026         	movff	efgtoa@h+3,___fldiv@b+3
  3867  00064C  C0C9  F027         	movff	efgtoa@u,___fldiv@a
  3868  000650  C0CA  F028         	movff	efgtoa@u+1,___fldiv@a+1
  3869  000654  C0CB  F029         	movff	efgtoa@u+2,___fldiv@a+2
  3870  000658  C0CC  F02A         	movff	efgtoa@u+3,___fldiv@a+3
  3871  00065C  ECDC  F00D         	call	___fldiv	;wreg free
  3872  000660  C023  F03C         	movff	?___fldiv,floorf@x
  3873  000664  C024  F03D         	movff	?___fldiv+1,floorf@x+1
  3874  000668  C025  F03E         	movff	?___fldiv+2,floorf@x+2
  3875  00066C  C026  F03F         	movff	?___fldiv+3,floorf@x+3
  3876  000670  EC4F  F011         	call	_floorf	;wreg free
  3877  000674  C03C  F0BB         	movff	?_floorf,efgtoa@l
  3878  000678  C03D  F0BC         	movff	?_floorf+1,efgtoa@l+1
  3879  00067C  C03E  F0BD         	movff	?_floorf+2,efgtoa@l+2
  3880  000680  C03F  F0BE         	movff	?_floorf+3,efgtoa@l+3
  3881                           
  3882                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 433:         d = 
      +                          (int)l;
  3883  000684  C0BB  F071         	movff	efgtoa@l,___fltol@f1
  3884  000688  C0BC  F072         	movff	efgtoa@l+1,___fltol@f1+1
  3885  00068C  C0BD  F073         	movff	efgtoa@l+2,___fltol@f1+2
  3886  000690  C0BE  F074         	movff	efgtoa@l+3,___fltol@f1+3
  3887  000694  ECFC  F013         	call	___fltol	;wreg free
  3888  000698  C071  F0AD         	movff	?___fltol,efgtoa@d
  3889  00069C  C072  F0AE         	movff	?___fltol+1,efgtoa@d+1
  3890  0006A0                     
  3891                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 434:         h -=
      +                           l*u;
  3892  0006A0  C0B7  F081         	movff	efgtoa@h,___flsub@b
  3893  0006A4  C0B8  F082         	movff	efgtoa@h+1,___flsub@b+1
  3894  0006A8  C0B9  F083         	movff	efgtoa@h+2,___flsub@b+2
  3895  0006AC  C0BA  F084         	movff	efgtoa@h+3,___flsub@b+3
  3896  0006B0  C0C9  F040         	movff	efgtoa@u,___flmul@a
  3897  0006B4  C0CA  F041         	movff	efgtoa@u+1,___flmul@a+1
  3898  0006B8  C0CB  F042         	movff	efgtoa@u+2,___flmul@a+2
  3899  0006BC  C0CC  F043         	movff	efgtoa@u+3,___flmul@a+3
  3900  0006C0  C0BB  F03C         	movff	efgtoa@l,___flmul@b
  3901  0006C4  C0BC  F03D         	movff	efgtoa@l+1,___flmul@b+1
  3902  0006C8  C0BD  F03E         	movff	efgtoa@l+2,___flmul@b+2
  3903  0006CC  C0BE  F03F         	movff	efgtoa@l+3,___flmul@b+3
  3904  0006D0  ECC6  F00B         	call	___flmul	;wreg free
  3905  0006D4  C03C  F085         	movff	?___flmul,___flsub@a
  3906  0006D8  C03D  F086         	movff	?___flmul+1,___flsub@a+1
  3907  0006DC  C03E  F087         	movff	?___flmul+2,___flsub@a+2
  3908  0006E0  C03F  F088         	movff	?___flmul+3,___flsub@a+3
  3909  0006E4  ECAE  F019         	call	___flsub	;wreg free
  3910  0006E8  C081  F0B7         	movff	?___flsub,efgtoa@h
  3911  0006EC  C082  F0B8         	movff	?___flsub+1,efgtoa@h+1
  3912  0006F0  C083  F0B9         	movff	?___flsub+2,efgtoa@h+2
  3913  0006F4  C084  F0BA         	movff	?___flsub+3,efgtoa@h+3
  3914  0006F8                     
  3915                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 435:         u = 
      +                          u/10.0;
  3916  0006F8  C0C9  F023         	movff	efgtoa@u,___fldiv@b
  3917  0006FC  C0CA  F024         	movff	efgtoa@u+1,___fldiv@b+1
  3918  000700  C0CB  F025         	movff	efgtoa@u+2,___fldiv@b+2
  3919  000704  C0CC  F026         	movff	efgtoa@u+3,___fldiv@b+3
  3920  000708  0E00               	movlw	0
  3921  00070A  6E27               	movwf	___fldiv@a^0,c
  3922  00070C  0E00               	movlw	0
  3923  00070E  6E28               	movwf	(___fldiv@a+1)^0,c
  3924  000710  0E20               	movlw	32
  3925  000712  6E29               	movwf	(___fldiv@a+2)^0,c
  3926  000714  0E41               	movlw	65
  3927  000716  6E2A               	movwf	(___fldiv@a+3)^0,c
  3928  000718  ECDC  F00D         	call	___fldiv	;wreg free
  3929  00071C  C023  F0C9         	movff	?___fldiv,efgtoa@u
  3930  000720  C024  F0CA         	movff	?___fldiv+1,efgtoa@u+1
  3931  000724  C025  F0CB         	movff	?___fldiv+2,efgtoa@u+2
  3932  000728  C026  F0CC         	movff	?___fldiv+3,efgtoa@u+3
  3933  00072C                     
  3934                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 436:         ++i;
  3935  00072C  0100               	movlb	0	; () banked
  3936  00072E  4BBF               	infsnz	efgtoa@i& (0+255),f,b
  3937  000730  2BC0               	incf	(efgtoa@i+1)& (0+255),f,b
  3938  000732                     l5149:
  3939                           
  3940                           ; BSR set to: 0
  3941                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  3942  000732  51A7               	movf	efgtoa@m& (0+255),w,b
  3943  000734  5DBF               	subwf	efgtoa@i& (0+255),w,b
  3944  000736  51C0               	movf	(efgtoa@i+1)& (0+255),w,b
  3945  000738  0A80               	xorlw	128
  3946  00073A  6F90               	movwf	??_efgtoa& (0+255),b
  3947  00073C  51A8               	movf	(efgtoa@m+1)& (0+255),w,b
  3948  00073E  0A80               	xorlw	128
  3949  000740  5990               	subwfb	??_efgtoa& (0+255),w,b
  3950  000742  A0D8               	btfss	status,0,c
  3951  000744  EFA6  F003         	goto	u6821
  3952  000748  EFA8  F003         	goto	u6820
  3953  00074C                     u6821:
  3954  00074C  EF1E  F003         	goto	l5141
  3955  000750                     u6820:
  3956  000750                     
  3957                           ; BSR set to: 0
  3958                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 440:     l = u*5.
      +                          0;
  3959  000750  C0C9  F03C         	movff	efgtoa@u,___flmul@b
  3960  000754  C0CA  F03D         	movff	efgtoa@u+1,___flmul@b+1
  3961  000758  C0CB  F03E         	movff	efgtoa@u+2,___flmul@b+2
  3962  00075C  C0CC  F03F         	movff	efgtoa@u+3,___flmul@b+3
  3963  000760  0E00               	movlw	0
  3964  000762  6E40               	movwf	___flmul@a^0,c
  3965  000764  0E00               	movlw	0
  3966  000766  6E41               	movwf	(___flmul@a+1)^0,c
  3967  000768  0EA0               	movlw	160
  3968  00076A  6E42               	movwf	(___flmul@a+2)^0,c
  3969  00076C  0E40               	movlw	64
  3970  00076E  6E43               	movwf	(___flmul@a+3)^0,c
  3971  000770  ECC6  F00B         	call	___flmul	;wreg free
  3972  000774  C03C  F0BB         	movff	?___flmul,efgtoa@l
  3973  000778  C03D  F0BC         	movff	?___flmul+1,efgtoa@l+1
  3974  00077C  C03E  F0BD         	movff	?___flmul+2,efgtoa@l+2
  3975  000780  C03F  F0BE         	movff	?___flmul+3,efgtoa@l+3
  3976  000784                     
  3977                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 441:     if (h < 
      +                          l) {
  3978  000784  C0B7  F071         	movff	efgtoa@h,___flge@ff1
  3979  000788  C0B8  F072         	movff	efgtoa@h+1,___flge@ff1+1
  3980  00078C  C0B9  F073         	movff	efgtoa@h+2,___flge@ff1+2
  3981  000790  C0BA  F074         	movff	efgtoa@h+3,___flge@ff1+3
  3982  000794  C0BB  F075         	movff	efgtoa@l,___flge@ff2
  3983  000798  C0BC  F076         	movff	efgtoa@l+1,___flge@ff2+1
  3984  00079C  C0BD  F077         	movff	efgtoa@l+2,___flge@ff2+2
  3985  0007A0  C0BE  F078         	movff	efgtoa@l+3,___flge@ff2+3
  3986  0007A4  EC80  F014         	call	___flge	;wreg free
  3987  0007A8  0100               	movlb	0	; () banked
  3988  0007AA  B0D8               	btfsc	status,0,c
  3989  0007AC  EFDA  F003         	goto	u6831
  3990  0007B0  EFDC  F003         	goto	u6830
  3991  0007B4                     u6831:
  3992  0007B4  EFE6  F003         	goto	l5157
  3993  0007B8                     u6830:
  3994  0007B8                     
  3995                           ; BSR set to: 0
  3996                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 442:         l = 
      +                          0.0;
  3997  0007B8  0E00               	movlw	0
  3998  0007BA  6FBB               	movwf	efgtoa@l& (0+255),b
  3999  0007BC  0E00               	movlw	0
  4000  0007BE  6FBC               	movwf	(efgtoa@l+1)& (0+255),b
  4001  0007C0  0E00               	movlw	0
  4002  0007C2  6FBD               	movwf	(efgtoa@l+2)& (0+255),b
  4003  0007C4  0E00               	movlw	0
  4004  0007C6  6FBE               	movwf	(efgtoa@l+3)& (0+255),b
  4005                           
  4006                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 443:     } else {
  4007  0007C8  EF0F  F004         	goto	l5163
  4008  0007CC                     l5157:
  4009                           
  4010                           ; BSR set to: 0
  4011                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 445:         if (
      +                          (h == l) && !(d % 2)) {
  4012  0007CC  C0B7  F00F         	movff	efgtoa@h,___fleq@ff1
  4013  0007D0  C0B8  F010         	movff	efgtoa@h+1,___fleq@ff1+1
  4014  0007D4  C0B9  F011         	movff	efgtoa@h+2,___fleq@ff1+2
  4015  0007D8  C0BA  F012         	movff	efgtoa@h+3,___fleq@ff1+3
  4016  0007DC  C0BB  F013         	movff	efgtoa@l,___fleq@ff2
  4017  0007E0  C0BC  F014         	movff	efgtoa@l+1,___fleq@ff2+1
  4018  0007E4  C0BD  F015         	movff	efgtoa@l+2,___fleq@ff2+2
  4019  0007E8  C0BE  F016         	movff	efgtoa@l+3,___fleq@ff2+3
  4020  0007EC  ECC5  F017         	call	___fleq	;wreg free
  4021  0007F0  A0D8               	btfss	status,0,c
  4022  0007F2  EFFD  F003         	goto	u6841
  4023  0007F6  EFFF  F003         	goto	u6840
  4024  0007FA                     u6841:
  4025  0007FA  EF0F  F004         	goto	l5163
  4026  0007FE                     u6840:
  4027  0007FE  0100               	movlb	0	; () banked
  4028  000800  B1AD               	btfsc	efgtoa@d& (0+255),0,b
  4029  000802  EF05  F004         	goto	u6851
  4030  000806  EF07  F004         	goto	u6850
  4031  00080A                     u6851:
  4032  00080A  EF0F  F004         	goto	l5163
  4033  00080E                     u6850:
  4034  00080E                     
  4035                           ; BSR set to: 0
  4036                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 446:             
      +                          l = 0.0;
  4037  00080E  0E00               	movlw	0
  4038  000810  6FBB               	movwf	efgtoa@l& (0+255),b
  4039  000812  0E00               	movlw	0
  4040  000814  6FBC               	movwf	(efgtoa@l+1)& (0+255),b
  4041  000816  0E00               	movlw	0
  4042  000818  6FBD               	movwf	(efgtoa@l+2)& (0+255),b
  4043  00081A  0E00               	movlw	0
  4044  00081C  6FBE               	movwf	(efgtoa@l+3)& (0+255),b
  4045  00081E                     l5163:
  4046                           
  4047                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 451:     h = g + 
      +                          l;
  4048  00081E  C0C1  F071         	movff	efgtoa@g,___fladd@b
  4049  000822  C0C2  F072         	movff	efgtoa@g+1,___fladd@b+1
  4050  000826  C0C3  F073         	movff	efgtoa@g+2,___fladd@b+2
  4051  00082A  C0C4  F074         	movff	efgtoa@g+3,___fladd@b+3
  4052  00082E  C0BB  F075         	movff	efgtoa@l,___fladd@a
  4053  000832  C0BC  F076         	movff	efgtoa@l+1,___fladd@a+1
  4054  000836  C0BD  F077         	movff	efgtoa@l+2,___fladd@a+2
  4055  00083A  C0BE  F078         	movff	efgtoa@l+3,___fladd@a+3
  4056  00083E  EC65  F009         	call	___fladd	;wreg free
  4057  000842  C071  F0B7         	movff	?___fladd,efgtoa@h
  4058  000846  C072  F0B8         	movff	?___fladd+1,efgtoa@h+1
  4059  00084A  C073  F0B9         	movff	?___fladd+2,efgtoa@h+2
  4060  00084E  C074  F0BA         	movff	?___fladd+3,efgtoa@h+3
  4061  000852                     
  4062                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 453:  if (h >= (o
      +                          u*10.0)) {
  4063  000852  C0B7  F071         	movff	efgtoa@h,___flge@ff1
  4064  000856  C0B8  F072         	movff	efgtoa@h+1,___flge@ff1+1
  4065  00085A  C0B9  F073         	movff	efgtoa@h+2,___flge@ff1+2
  4066  00085E  C0BA  F074         	movff	efgtoa@h+3,___flge@ff1+3
  4067  000862  0E00               	movlw	0
  4068  000864  6E40               	movwf	___flmul@a^0,c
  4069  000866  0E00               	movlw	0
  4070  000868  6E41               	movwf	(___flmul@a+1)^0,c
  4071  00086A  0E20               	movlw	32
  4072  00086C  6E42               	movwf	(___flmul@a+2)^0,c
  4073  00086E  0E41               	movlw	65
  4074  000870  6E43               	movwf	(___flmul@a+3)^0,c
  4075  000872  C0A9  F03C         	movff	efgtoa@ou,___flmul@b
  4076  000876  C0AA  F03D         	movff	efgtoa@ou+1,___flmul@b+1
  4077  00087A  C0AB  F03E         	movff	efgtoa@ou+2,___flmul@b+2
  4078  00087E  C0AC  F03F         	movff	efgtoa@ou+3,___flmul@b+3
  4079  000882  ECC6  F00B         	call	___flmul	;wreg free
  4080  000886  C03C  F075         	movff	?___flmul,___flge@ff2
  4081  00088A  C03D  F076         	movff	?___flmul+1,___flge@ff2+1
  4082  00088E  C03E  F077         	movff	?___flmul+2,___flge@ff2+2
  4083  000892  C03F  F078         	movff	?___flmul+3,___flge@ff2+3
  4084  000896  EC80  F014         	call	___flge	;wreg free
  4085  00089A  0100               	movlb	0	; () banked
  4086  00089C  A0D8               	btfss	status,0,c
  4087  00089E  EF53  F004         	goto	u6861
  4088  0008A2  EF55  F004         	goto	u6860
  4089  0008A6                     u6861:
  4090  0008A6  EF7D  F004         	goto	l5175
  4091  0008AA                     u6860:
  4092  0008AA                     
  4093                           ; BSR set to: 0
  4094                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 454:   e++;
  4095  0008AA  4BC5               	infsnz	efgtoa@e& (0+255),f,b
  4096  0008AC  2BC6               	incf	(efgtoa@e+1)& (0+255),f,b
  4097  0008AE                     
  4098                           ; BSR set to: 0
  4099                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 455:   ou *= 10.0
      +                          ;
  4100  0008AE  C0A9  F03C         	movff	efgtoa@ou,___flmul@b
  4101  0008B2  C0AA  F03D         	movff	efgtoa@ou+1,___flmul@b+1
  4102  0008B6  C0AB  F03E         	movff	efgtoa@ou+2,___flmul@b+2
  4103  0008BA  C0AC  F03F         	movff	efgtoa@ou+3,___flmul@b+3
  4104  0008BE  0E00               	movlw	0
  4105  0008C0  6E40               	movwf	___flmul@a^0,c
  4106  0008C2  0E00               	movlw	0
  4107  0008C4  6E41               	movwf	(___flmul@a+1)^0,c
  4108  0008C6  0E20               	movlw	32
  4109  0008C8  6E42               	movwf	(___flmul@a+2)^0,c
  4110  0008CA  0E41               	movlw	65
  4111  0008CC  6E43               	movwf	(___flmul@a+3)^0,c
  4112  0008CE  ECC6  F00B         	call	___flmul	;wreg free
  4113  0008D2  C03C  F0A9         	movff	?___flmul,efgtoa@ou
  4114  0008D6  C03D  F0AA         	movff	?___flmul+1,efgtoa@ou+1
  4115  0008DA  C03E  F0AB         	movff	?___flmul+2,efgtoa@ou+2
  4116  0008DE  C03F  F0AC         	movff	?___flmul+3,efgtoa@ou+3
  4117  0008E2                     
  4118                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 456:   if (nmode 
      +                          == 'f') {
  4119  0008E2  0E66               	movlw	102
  4120  0008E4  0100               	movlb	0	; () banked
  4121  0008E6  19B5               	xorwf	efgtoa@nmode& (0+255),w,b
  4122  0008E8  A4D8               	btfss	status,2,c
  4123  0008EA  EF79  F004         	goto	u6871
  4124  0008EE  EF7B  F004         	goto	u6870
  4125  0008F2                     u6871:
  4126  0008F2  EF7D  F004         	goto	l5175
  4127  0008F6                     u6870:
  4128  0008F6                     
  4129                           ; BSR set to: 0
  4130                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 458:    m++;
  4131  0008F6  4BA7               	infsnz	efgtoa@m& (0+255),f,b
  4132  0008F8  2BA8               	incf	(efgtoa@m+1)& (0+255),f,b
  4133  0008FA                     l5175:
  4134                           
  4135                           ; BSR set to: 0
  4136                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 463:     u = ou;
  4137  0008FA  C0A9  F0C9         	movff	efgtoa@ou,efgtoa@u
  4138  0008FE  C0AA  F0CA         	movff	efgtoa@ou+1,efgtoa@u+1
  4139  000902  C0AB  F0CB         	movff	efgtoa@ou+2,efgtoa@u+2
  4140  000906  C0AC  F0CC         	movff	efgtoa@ou+3,efgtoa@u+3
  4141  00090A                     
  4142                           ; BSR set to: 0
  4143                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 464:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  4144  00090A  0E65               	movlw	101
  4145  00090C  19B5               	xorwf	efgtoa@nmode& (0+255),w,b
  4146  00090E  B4D8               	btfsc	status,2,c
  4147  000910  EF8C  F004         	goto	u6881
  4148  000914  EF8E  F004         	goto	u6880
  4149  000918                     u6881:
  4150  000918  EF94  F004         	goto	l5181
  4151  00091C                     u6880:
  4152  00091C                     
  4153                           ; BSR set to: 0
  4154  00091C  C0C5  F0A5         	movff	efgtoa@e,efgtoa@ne
  4155  000920  C0C6  F0A6         	movff	efgtoa@e+1,efgtoa@ne+1
  4156  000924  EF98  F004         	goto	l931
  4157  000928                     l5181:
  4158                           
  4159                           ; BSR set to: 0
  4160  000928  0E00               	movlw	0
  4161  00092A  6FA6               	movwf	(efgtoa@ne+1)& (0+255),b
  4162  00092C  0E00               	movlw	0
  4163  00092E  6FA5               	movwf	efgtoa@ne& (0+255),b
  4164  000930                     l931:
  4165                           
  4166                           ; BSR set to: 0
  4167                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 465:     pp = 0;
  4168  000930  0E00               	movlw	0
  4169  000932  6FA4               	movwf	(efgtoa@pp+1)& (0+255),b
  4170  000934  0E00               	movlw	0
  4171  000936  6FA3               	movwf	efgtoa@pp& (0+255),b
  4172                           
  4173                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 466:     t = 0;
  4174  000938  0E00               	movlw	0
  4175  00093A  6FA2               	movwf	(efgtoa@t+1)& (0+255),b
  4176  00093C  0E00               	movlw	0
  4177  00093E  6FA1               	movwf	efgtoa@t& (0+255),b
  4178                           
  4179                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 467:     i = 0;
  4180  000940  0E00               	movlw	0
  4181  000942  6FC0               	movwf	(efgtoa@i+1)& (0+255),b
  4182  000944  0E00               	movlw	0
  4183  000946  6FBF               	movwf	efgtoa@i& (0+255),b
  4184                           
  4185                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  4186  000948  EF94  F005         	goto	l5231
  4187  00094C                     l5183:
  4188                           
  4189                           ; BSR set to: 0
  4190                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 469:         l = 
      +                          floorf(h/u);
  4191  00094C  C0B7  F023         	movff	efgtoa@h,___fldiv@b
  4192  000950  C0B8  F024         	movff	efgtoa@h+1,___fldiv@b+1
  4193  000954  C0B9  F025         	movff	efgtoa@h+2,___fldiv@b+2
  4194  000958  C0BA  F026         	movff	efgtoa@h+3,___fldiv@b+3
  4195  00095C  C0C9  F027         	movff	efgtoa@u,___fldiv@a
  4196  000960  C0CA  F028         	movff	efgtoa@u+1,___fldiv@a+1
  4197  000964  C0CB  F029         	movff	efgtoa@u+2,___fldiv@a+2
  4198  000968  C0CC  F02A         	movff	efgtoa@u+3,___fldiv@a+3
  4199  00096C  ECDC  F00D         	call	___fldiv	;wreg free
  4200  000970  C023  F03C         	movff	?___fldiv,floorf@x
  4201  000974  C024  F03D         	movff	?___fldiv+1,floorf@x+1
  4202  000978  C025  F03E         	movff	?___fldiv+2,floorf@x+2
  4203  00097C  C026  F03F         	movff	?___fldiv+3,floorf@x+3
  4204  000980  EC4F  F011         	call	_floorf	;wreg free
  4205  000984  C03C  F0BB         	movff	?_floorf,efgtoa@l
  4206  000988  C03D  F0BC         	movff	?_floorf+1,efgtoa@l+1
  4207  00098C  C03E  F0BD         	movff	?_floorf+2,efgtoa@l+2
  4208  000990  C03F  F0BE         	movff	?_floorf+3,efgtoa@l+3
  4209                           
  4210                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 470:         d = 
      +                          (int)l;
  4211  000994  C0BB  F071         	movff	efgtoa@l,___fltol@f1
  4212  000998  C0BC  F072         	movff	efgtoa@l+1,___fltol@f1+1
  4213  00099C  C0BD  F073         	movff	efgtoa@l+2,___fltol@f1+2
  4214  0009A0  C0BE  F074         	movff	efgtoa@l+3,___fltol@f1+3
  4215  0009A4  ECFC  F013         	call	___fltol	;wreg free
  4216  0009A8  C071  F0AD         	movff	?___fltol,efgtoa@d
  4217  0009AC  C072  F0AE         	movff	?___fltol+1,efgtoa@d+1
  4218  0009B0                     
  4219                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 471:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  4220  0009B0  B848               	btfsc	_flags^0,4,c
  4221  0009B2  EFDD  F004         	goto	u6891
  4222  0009B6  EFDF  F004         	goto	u6890
  4223  0009BA                     u6891:
  4224  0009BA  EFFD  F004         	goto	l5195
  4225  0009BE                     u6890:
  4226  0009BE  0100               	movlb	0	; () banked
  4227  0009C0  51AD               	movf	efgtoa@d& (0+255),w,b
  4228  0009C2  11AE               	iorwf	(efgtoa@d+1)& (0+255),w,b
  4229  0009C4  A4D8               	btfss	status,2,c
  4230  0009C6  EFE7  F004         	goto	u6901
  4231  0009CA  EFE9  F004         	goto	u6900
  4232  0009CE                     u6901:
  4233  0009CE  EFFD  F004         	goto	l5195
  4234  0009D2                     u6900:
  4235  0009D2                     
  4236                           ; BSR set to: 0
  4237  0009D2  0E67               	movlw	103
  4238  0009D4  19B6               	xorwf	efgtoa@mode& (0+255),w,b
  4239  0009D6  A4D8               	btfss	status,2,c
  4240  0009D8  EFF0  F004         	goto	u6911
  4241  0009DC  EFF2  F004         	goto	u6910
  4242  0009E0                     u6911:
  4243  0009E0  EFFD  F004         	goto	l5195
  4244  0009E4                     u6910:
  4245  0009E4                     
  4246                           ; BSR set to: 0
  4247  0009E4  BFA6               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  4248  0009E6  EFF9  F004         	goto	u6920
  4249  0009EA  EFF7  F004         	goto	u6921
  4250  0009EE                     u6921:
  4251  0009EE  EFFD  F004         	goto	l5195
  4252  0009F2                     u6920:
  4253  0009F2                     
  4254                           ; BSR set to: 0
  4255                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 472:             
      +                          ++t;
  4256  0009F2  4BA1               	infsnz	efgtoa@t& (0+255),f,b
  4257  0009F4  2BA2               	incf	(efgtoa@t+1)& (0+255),f,b
  4258                           
  4259                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 473:         } el
      +                          se {
  4260  0009F6  EF48  F005         	goto	l5223
  4261  0009FA                     l5195:
  4262                           
  4263                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 474:             
      +                          if (!pp && (ne < 0)) {
  4264  0009FA  0100               	movlb	0	; () banked
  4265  0009FC  51A3               	movf	efgtoa@pp& (0+255),w,b
  4266  0009FE  11A4               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  4267  000A00  A4D8               	btfss	status,2,c
  4268  000A02  EF05  F005         	goto	u6931
  4269  000A06  EF07  F005         	goto	u6930
  4270  000A0A                     u6931:
  4271  000A0A  EF31  F005         	goto	l5215
  4272  000A0E                     u6930:
  4273  000A0E                     
  4274                           ; BSR set to: 0
  4275  000A0E  BFA6               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  4276  000A10  EF0E  F005         	goto	u6940
  4277  000A14  EF0C  F005         	goto	u6941
  4278  000A18                     u6941:
  4279  000A18  EF31  F005         	goto	l5215
  4280  000A1C                     u6940:
  4281  000A1C                     
  4282                           ; BSR set to: 0
  4283                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 475:             
      +                              dbuf[n++] = '.';
  4284  000A1C  0E16               	movlw	low _dbuf
  4285  000A1E  25C7               	addwf	efgtoa@n& (0+255),w,b
  4286  000A20  6ED9               	movwf	fsr2l,c
  4287  000A22  0E01               	movlw	high _dbuf
  4288  000A24  21C8               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4289  000A26  6EDA               	movwf	fsr2h,c
  4290  000A28  0E2E               	movlw	46
  4291  000A2A  6EDF               	movwf	indf2,c
  4292  000A2C                     
  4293                           ; BSR set to: 0
  4294  000A2C  4BC7               	infsnz	efgtoa@n& (0+255),f,b
  4295  000A2E  2BC8               	incf	(efgtoa@n+1)& (0+255),f,b
  4296  000A30                     
  4297                           ; BSR set to: 0
  4298                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 476:             
      +                              --w;
  4299  000A30  07B3               	decf	efgtoa@w& (0+255),f,b
  4300  000A32  A0D8               	btfss	status,0,c
  4301  000A34  07B4               	decf	(efgtoa@w+1)& (0+255),f,b
  4302  000A36                     
  4303                           ; BSR set to: 0
  4304                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 477:             
      +                              pp = 1;
  4305  000A36  0E00               	movlw	0
  4306  000A38  6FA4               	movwf	(efgtoa@pp+1)& (0+255),b
  4307  000A3A  0E01               	movlw	1
  4308  000A3C  6FA3               	movwf	efgtoa@pp& (0+255),b
  4309  000A3E  EF31  F005         	goto	l5215
  4310  000A42                     l5207:
  4311                           
  4312                           ; BSR set to: 0
  4313                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 480:             
      +                              dbuf[n++] = '0';
  4314  000A42  0E16               	movlw	low _dbuf
  4315  000A44  25C7               	addwf	efgtoa@n& (0+255),w,b
  4316  000A46  6ED9               	movwf	fsr2l,c
  4317  000A48  0E01               	movlw	high _dbuf
  4318  000A4A  21C8               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4319  000A4C  6EDA               	movwf	fsr2h,c
  4320  000A4E  0E30               	movlw	48
  4321  000A50  6EDF               	movwf	indf2,c
  4322  000A52                     
  4323                           ; BSR set to: 0
  4324  000A52  4BC7               	infsnz	efgtoa@n& (0+255),f,b
  4325  000A54  2BC8               	incf	(efgtoa@n+1)& (0+255),f,b
  4326  000A56                     
  4327                           ; BSR set to: 0
  4328                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 481:             
      +                              --w;
  4329  000A56  07B3               	decf	efgtoa@w& (0+255),f,b
  4330  000A58  A0D8               	btfss	status,0,c
  4331  000A5A  07B4               	decf	(efgtoa@w+1)& (0+255),f,b
  4332  000A5C                     
  4333                           ; BSR set to: 0
  4334                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 482:             
      +                              --t;
  4335  000A5C  07A1               	decf	efgtoa@t& (0+255),f,b
  4336  000A5E  A0D8               	btfss	status,0,c
  4337  000A60  07A2               	decf	(efgtoa@t+1)& (0+255),f,b
  4338  000A62                     l5215:
  4339                           
  4340                           ; BSR set to: 0
  4341                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 479:             
      +                          while (t) {
  4342  000A62  51A1               	movf	efgtoa@t& (0+255),w,b
  4343  000A64  11A2               	iorwf	(efgtoa@t+1)& (0+255),w,b
  4344  000A66  A4D8               	btfss	status,2,c
  4345  000A68  EF38  F005         	goto	u6951
  4346  000A6C  EF3A  F005         	goto	u6950
  4347  000A70                     u6951:
  4348  000A70  EF21  F005         	goto	l5207
  4349  000A74                     u6950:
  4350  000A74                     
  4351                           ; BSR set to: 0
  4352                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 484:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  4353  000A74  0E16               	movlw	low _dbuf
  4354  000A76  25C7               	addwf	efgtoa@n& (0+255),w,b
  4355  000A78  6ED9               	movwf	fsr2l,c
  4356  000A7A  0E01               	movlw	high _dbuf
  4357  000A7C  21C8               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4358  000A7E  6EDA               	movwf	fsr2h,c
  4359  000A80  51AD               	movf	efgtoa@d& (0+255),w,b
  4360  000A82  0F30               	addlw	48
  4361  000A84  6EDF               	movwf	indf2,c
  4362  000A86                     
  4363                           ; BSR set to: 0
  4364  000A86  4BC7               	infsnz	efgtoa@n& (0+255),f,b
  4365  000A88  2BC8               	incf	(efgtoa@n+1)& (0+255),f,b
  4366  000A8A                     
  4367                           ; BSR set to: 0
  4368                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 485:             
      +                          --w;
  4369  000A8A  07B3               	decf	efgtoa@w& (0+255),f,b
  4370  000A8C  A0D8               	btfss	status,0,c
  4371  000A8E  07B4               	decf	(efgtoa@w+1)& (0+255),f,b
  4372  000A90                     l5223:
  4373                           
  4374                           ; BSR set to: 0
  4375                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 487:         h -=
      +                           l*u;
  4376  000A90  C0B7  F081         	movff	efgtoa@h,___flsub@b
  4377  000A94  C0B8  F082         	movff	efgtoa@h+1,___flsub@b+1
  4378  000A98  C0B9  F083         	movff	efgtoa@h+2,___flsub@b+2
  4379  000A9C  C0BA  F084         	movff	efgtoa@h+3,___flsub@b+3
  4380  000AA0  C0C9  F040         	movff	efgtoa@u,___flmul@a
  4381  000AA4  C0CA  F041         	movff	efgtoa@u+1,___flmul@a+1
  4382  000AA8  C0CB  F042         	movff	efgtoa@u+2,___flmul@a+2
  4383  000AAC  C0CC  F043         	movff	efgtoa@u+3,___flmul@a+3
  4384  000AB0  C0BB  F03C         	movff	efgtoa@l,___flmul@b
  4385  000AB4  C0BC  F03D         	movff	efgtoa@l+1,___flmul@b+1
  4386  000AB8  C0BD  F03E         	movff	efgtoa@l+2,___flmul@b+2
  4387  000ABC  C0BE  F03F         	movff	efgtoa@l+3,___flmul@b+3
  4388  000AC0  ECC6  F00B         	call	___flmul	;wreg free
  4389  000AC4  C03C  F085         	movff	?___flmul,___flsub@a
  4390  000AC8  C03D  F086         	movff	?___flmul+1,___flsub@a+1
  4391  000ACC  C03E  F087         	movff	?___flmul+2,___flsub@a+2
  4392  000AD0  C03F  F088         	movff	?___flmul+3,___flsub@a+3
  4393  000AD4  ECAE  F019         	call	___flsub	;wreg free
  4394  000AD8  C081  F0B7         	movff	?___flsub,efgtoa@h
  4395  000ADC  C082  F0B8         	movff	?___flsub+1,efgtoa@h+1
  4396  000AE0  C083  F0B9         	movff	?___flsub+2,efgtoa@h+2
  4397  000AE4  C084  F0BA         	movff	?___flsub+3,efgtoa@h+3
  4398  000AE8                     
  4399                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 488:         u = 
      +                          u/10.0;
  4400  000AE8  C0C9  F023         	movff	efgtoa@u,___fldiv@b
  4401  000AEC  C0CA  F024         	movff	efgtoa@u+1,___fldiv@b+1
  4402  000AF0  C0CB  F025         	movff	efgtoa@u+2,___fldiv@b+2
  4403  000AF4  C0CC  F026         	movff	efgtoa@u+3,___fldiv@b+3
  4404  000AF8  0E00               	movlw	0
  4405  000AFA  6E27               	movwf	___fldiv@a^0,c
  4406  000AFC  0E00               	movlw	0
  4407  000AFE  6E28               	movwf	(___fldiv@a+1)^0,c
  4408  000B00  0E20               	movlw	32
  4409  000B02  6E29               	movwf	(___fldiv@a+2)^0,c
  4410  000B04  0E41               	movlw	65
  4411  000B06  6E2A               	movwf	(___fldiv@a+3)^0,c
  4412  000B08  ECDC  F00D         	call	___fldiv	;wreg free
  4413  000B0C  C023  F0C9         	movff	?___fldiv,efgtoa@u
  4414  000B10  C024  F0CA         	movff	?___fldiv+1,efgtoa@u+1
  4415  000B14  C025  F0CB         	movff	?___fldiv+2,efgtoa@u+2
  4416  000B18  C026  F0CC         	movff	?___fldiv+3,efgtoa@u+3
  4417  000B1C                     
  4418                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 489:         --ne
      +                          ;
  4419  000B1C  0100               	movlb	0	; () banked
  4420  000B1E  07A5               	decf	efgtoa@ne& (0+255),f,b
  4421  000B20  A0D8               	btfss	status,0,c
  4422  000B22  07A6               	decf	(efgtoa@ne+1)& (0+255),f,b
  4423  000B24                     
  4424                           ; BSR set to: 0
  4425                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 490:         ++i;
  4426  000B24  4BBF               	infsnz	efgtoa@i& (0+255),f,b
  4427  000B26  2BC0               	incf	(efgtoa@i+1)& (0+255),f,b
  4428  000B28                     l5231:
  4429                           
  4430                           ; BSR set to: 0
  4431                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  4432  000B28  51A7               	movf	efgtoa@m& (0+255),w,b
  4433  000B2A  5DBF               	subwf	efgtoa@i& (0+255),w,b
  4434  000B2C  51C0               	movf	(efgtoa@i+1)& (0+255),w,b
  4435  000B2E  0A80               	xorlw	128
  4436  000B30  6F90               	movwf	??_efgtoa& (0+255),b
  4437  000B32  51A8               	movf	(efgtoa@m+1)& (0+255),w,b
  4438  000B34  0A80               	xorlw	128
  4439  000B36  5990               	subwfb	??_efgtoa& (0+255),w,b
  4440  000B38  B0D8               	btfsc	status,0,c
  4441  000B3A  EFA1  F005         	goto	u6961
  4442  000B3E  EFA3  F005         	goto	u6960
  4443  000B42                     u6961:
  4444  000B42  EFB1  F005         	goto	l5235
  4445  000B46                     u6960:
  4446  000B46                     
  4447                           ; BSR set to: 0
  4448  000B46  BFC8               	btfsc	(efgtoa@n+1)& (0+255),7,b
  4449  000B48  EFAF  F005         	goto	u6971
  4450  000B4C  51C8               	movf	(efgtoa@n+1)& (0+255),w,b
  4451  000B4E  E109               	bnz	u6970
  4452  000B50  0E4B               	movlw	75
  4453  000B52  5DC7               	subwf	efgtoa@n& (0+255),w,b
  4454  000B54  A0D8               	btfss	status,0,c
  4455  000B56  EFAF  F005         	goto	u6971
  4456  000B5A  EFB1  F005         	goto	u6970
  4457  000B5E                     u6971:
  4458  000B5E  EFA6  F004         	goto	l5183
  4459  000B62                     u6970:
  4460  000B62                     l5235:
  4461                           
  4462                           ; BSR set to: 0
  4463                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 492:     if (!pp 
      +                          && (flags & (1 << 4))) {
  4464  000B62  51A3               	movf	efgtoa@pp& (0+255),w,b
  4465  000B64  11A4               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  4466  000B66  A4D8               	btfss	status,2,c
  4467  000B68  EFB8  F005         	goto	u6981
  4468  000B6C  EFBA  F005         	goto	u6980
  4469  000B70                     u6981:
  4470  000B70  EFCB  F005         	goto	l5243
  4471  000B74                     u6980:
  4472  000B74                     
  4473                           ; BSR set to: 0
  4474  000B74  A848               	btfss	_flags^0,4,c
  4475  000B76  EFBF  F005         	goto	u6991
  4476  000B7A  EFC1  F005         	goto	u6990
  4477  000B7E                     u6991:
  4478  000B7E  EFCB  F005         	goto	l5243
  4479  000B82                     u6990:
  4480  000B82                     
  4481                           ; BSR set to: 0
  4482                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [n++] = '.';
  4483  000B82  0E16               	movlw	low _dbuf
  4484  000B84  25C7               	addwf	efgtoa@n& (0+255),w,b
  4485  000B86  6ED9               	movwf	fsr2l,c
  4486  000B88  0E01               	movlw	high _dbuf
  4487  000B8A  21C8               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4488  000B8C  6EDA               	movwf	fsr2h,c
  4489  000B8E  0E2E               	movlw	46
  4490  000B90  6EDF               	movwf	indf2,c
  4491  000B92                     
  4492                           ; BSR set to: 0
  4493  000B92  4BC7               	infsnz	efgtoa@n& (0+255),f,b
  4494  000B94  2BC8               	incf	(efgtoa@n+1)& (0+255),f,b
  4495  000B96                     l5243:
  4496                           
  4497                           ; BSR set to: 0
  4498                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 495:     dbuf[n] 
      +                          = '\0';
  4499  000B96  0E16               	movlw	low _dbuf
  4500  000B98  25C7               	addwf	efgtoa@n& (0+255),w,b
  4501  000B9A  6ED9               	movwf	fsr2l,c
  4502  000B9C  0E01               	movlw	high _dbuf
  4503  000B9E  21C8               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4504  000BA0  6EDA               	movwf	fsr2h,c
  4505  000BA2  0E00               	movlw	0
  4506  000BA4  6EDF               	movwf	indf2,c
  4507  000BA6                     
  4508                           ; BSR set to: 0
  4509                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 498:     if (nmod
      +                          e == 'e') {
  4510  000BA6  0E65               	movlw	101
  4511  000BA8  19B5               	xorwf	efgtoa@nmode& (0+255),w,b
  4512  000BAA  A4D8               	btfss	status,2,c
  4513  000BAC  EFDA  F005         	goto	u7001
  4514  000BB0  EFDC  F005         	goto	u7000
  4515  000BB4                     u7001:
  4516  000BB4  EF34  F001         	goto	l5045
  4517  000BB8                     u7000:
  4518  000BB8                     
  4519                           ; BSR set to: 0
  4520                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 499:         i = 
      +                          sizeof(dbuf) - 1;
  4521  000BB8  0E00               	movlw	0
  4522  000BBA  6FC0               	movwf	(efgtoa@i+1)& (0+255),b
  4523  000BBC  0E4F               	movlw	79
  4524  000BBE  6FBF               	movwf	efgtoa@i& (0+255),b
  4525  000BC0                     
  4526                           ; BSR set to: 0
  4527                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 500:         dbuf
      +                          [i] = '\0';
  4528  000BC0  0E16               	movlw	low _dbuf
  4529  000BC2  25BF               	addwf	efgtoa@i& (0+255),w,b
  4530  000BC4  6ED9               	movwf	fsr2l,c
  4531  000BC6  0E01               	movlw	high _dbuf
  4532  000BC8  21C0               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4533  000BCA  6EDA               	movwf	fsr2h,c
  4534  000BCC  0E00               	movlw	0
  4535  000BCE  6EDF               	movwf	indf2,c
  4536  000BD0                     
  4537                           ; BSR set to: 0
  4538                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 501:         sign
      +                           = 0;
  4539  000BD0  0E00               	movlw	0
  4540  000BD2  6FB0               	movwf	(efgtoa@sign+1)& (0+255),b
  4541  000BD4  0E00               	movlw	0
  4542  000BD6  6FAF               	movwf	efgtoa@sign& (0+255),b
  4543  000BD8                     
  4544                           ; BSR set to: 0
  4545                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 502:         if (
      +                          e < 0) {
  4546  000BD8  BFC6               	btfsc	(efgtoa@e+1)& (0+255),7,b
  4547  000BDA  EFF3  F005         	goto	u7010
  4548  000BDE  EFF1  F005         	goto	u7011
  4549  000BE2                     u7011:
  4550  000BE2  EFFB  F005         	goto	l5259
  4551  000BE6                     u7010:
  4552  000BE6                     
  4553                           ; BSR set to: 0
  4554                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 503:             
      +                          sign = 1;
  4555  000BE6  0E00               	movlw	0
  4556  000BE8  6FB0               	movwf	(efgtoa@sign+1)& (0+255),b
  4557  000BEA  0E01               	movlw	1
  4558  000BEC  6FAF               	movwf	efgtoa@sign& (0+255),b
  4559  000BEE                     
  4560                           ; BSR set to: 0
  4561                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 504:             
      +                          e = -e;
  4562  000BEE  6DC5               	negf	efgtoa@e& (0+255),b
  4563  000BF0  1FC6               	comf	(efgtoa@e+1)& (0+255),f,b
  4564  000BF2  B0D8               	btfsc	status,0,c
  4565  000BF4  2BC6               	incf	(efgtoa@e+1)& (0+255),f,b
  4566  000BF6                     l5259:
  4567                           
  4568                           ; BSR set to: 0
  4569                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 506:         p = 
      +                          2;
  4570  000BF6  0E00               	movlw	0
  4571  000BF8  6FB2               	movwf	(efgtoa@p+1)& (0+255),b
  4572  000BFA  0E02               	movlw	2
  4573  000BFC  6FB1               	movwf	efgtoa@p& (0+255),b
  4574                           
  4575                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  4576  000BFE  EF2C  F006         	goto	l5271
  4577  000C02                     l5261:
  4578                           
  4579                           ; BSR set to: 0
  4580                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 508:             
      +                          --i;
  4581  000C02  07BF               	decf	efgtoa@i& (0+255),f,b
  4582  000C04  A0D8               	btfss	status,0,c
  4583  000C06  07C0               	decf	(efgtoa@i+1)& (0+255),f,b
  4584  000C08                     
  4585                           ; BSR set to: 0
  4586                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 509:             
      +                          dbuf[i] = '0' + (e % 10);
  4587  000C08  0E16               	movlw	low _dbuf
  4588  000C0A  25BF               	addwf	efgtoa@i& (0+255),w,b
  4589  000C0C  6ED9               	movwf	fsr2l,c
  4590  000C0E  0E01               	movlw	high _dbuf
  4591  000C10  21C0               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4592  000C12  6EDA               	movwf	fsr2h,c
  4593  000C14  C0C5  F00F         	movff	efgtoa@e,___awmod@dividend
  4594  000C18  C0C6  F010         	movff	efgtoa@e+1,___awmod@dividend+1
  4595  000C1C  0E00               	movlw	0
  4596  000C1E  6E12               	movwf	(___awmod@divisor+1)^0,c
  4597  000C20  0E0A               	movlw	10
  4598  000C22  6E11               	movwf	___awmod@divisor^0,c
  4599  000C24  EC15  F017         	call	___awmod	;wreg free
  4600  000C28  500F               	movf	?___awmod^0,w,c
  4601  000C2A  0F30               	addlw	48
  4602  000C2C  6EDF               	movwf	indf2,c
  4603  000C2E                     
  4604                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 510:             
      +                          e = e / 10;
  4605  000C2E  C0C5  F00F         	movff	efgtoa@e,___awdiv@dividend
  4606  000C32  C0C6  F010         	movff	efgtoa@e+1,___awdiv@dividend+1
  4607  000C36  0E00               	movlw	0
  4608  000C38  6E12               	movwf	(___awdiv@divisor+1)^0,c
  4609  000C3A  0E0A               	movlw	10
  4610  000C3C  6E11               	movwf	___awdiv@divisor^0,c
  4611  000C3E  EC52  F016         	call	___awdiv	;wreg free
  4612  000C42  C00F  F0C5         	movff	?___awdiv,efgtoa@e
  4613  000C46  C010  F0C6         	movff	?___awdiv+1,efgtoa@e+1
  4614  000C4A                     
  4615                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 511:             
      +                          --p;
  4616  000C4A  0100               	movlb	0	; () banked
  4617  000C4C  07B1               	decf	efgtoa@p& (0+255),f,b
  4618  000C4E  A0D8               	btfss	status,0,c
  4619  000C50  07B2               	decf	(efgtoa@p+1)& (0+255),f,b
  4620  000C52                     
  4621                           ; BSR set to: 0
  4622                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 512:             
      +                          --w;
  4623  000C52  07B3               	decf	efgtoa@w& (0+255),f,b
  4624  000C54  A0D8               	btfss	status,0,c
  4625  000C56  07B4               	decf	(efgtoa@w+1)& (0+255),f,b
  4626  000C58                     l5271:
  4627                           
  4628                           ; BSR set to: 0
  4629                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  4630  000C58  51C5               	movf	efgtoa@e& (0+255),w,b
  4631  000C5A  11C6               	iorwf	(efgtoa@e+1)& (0+255),w,b
  4632  000C5C  A4D8               	btfss	status,2,c
  4633  000C5E  EF33  F006         	goto	u7021
  4634  000C62  EF35  F006         	goto	u7020
  4635  000C66                     u7021:
  4636  000C66  EF01  F006         	goto	l5261
  4637  000C6A                     u7020:
  4638  000C6A                     
  4639                           ; BSR set to: 0
  4640  000C6A  BFB2               	btfsc	(efgtoa@p+1)& (0+255),7,b
  4641  000C6C  EF42  F006         	goto	u7030
  4642  000C70  51B2               	movf	(efgtoa@p+1)& (0+255),w,b
  4643  000C72  E106               	bnz	u7031
  4644  000C74  05B1               	decf	efgtoa@p& (0+255),w,b
  4645  000C76  B0D8               	btfsc	status,0,c
  4646  000C78  EF40  F006         	goto	u7031
  4647  000C7C  EF42  F006         	goto	u7030
  4648  000C80                     u7031:
  4649  000C80  EF01  F006         	goto	l5261
  4650  000C84                     u7030:
  4651  000C84                     
  4652                           ; BSR set to: 0
  4653                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 514:         --i;
  4654  000C84  07BF               	decf	efgtoa@i& (0+255),f,b
  4655  000C86  A0D8               	btfss	status,0,c
  4656  000C88  07C0               	decf	(efgtoa@i+1)& (0+255),f,b
  4657  000C8A                     
  4658                           ; BSR set to: 0
  4659                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 515:         dbuf
      +                          [i] = sign ? '-' : '+';
  4660  000C8A  51AF               	movf	efgtoa@sign& (0+255),w,b
  4661  000C8C  11B0               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4662  000C8E  A4D8               	btfss	status,2,c
  4663  000C90  EF4C  F006         	goto	u7041
  4664  000C94  EF4E  F006         	goto	u7040
  4665  000C98                     u7041:
  4666  000C98  EF54  F006         	goto	l5281
  4667  000C9C                     u7040:
  4668  000C9C                     
  4669                           ; BSR set to: 0
  4670  000C9C  0E00               	movlw	0
  4671  000C9E  6F9C               	movwf	(_efgtoa$890+1)& (0+255),b
  4672  000CA0  0E2B               	movlw	43
  4673  000CA2  6F9B               	movwf	_efgtoa$890& (0+255),b
  4674  000CA4  EF58  F006         	goto	l5283
  4675  000CA8                     l5281:
  4676                           
  4677                           ; BSR set to: 0
  4678  000CA8  0E00               	movlw	0
  4679  000CAA  6F9C               	movwf	(_efgtoa$890+1)& (0+255),b
  4680  000CAC  0E2D               	movlw	45
  4681  000CAE  6F9B               	movwf	_efgtoa$890& (0+255),b
  4682  000CB0                     l5283:
  4683                           
  4684                           ; BSR set to: 0
  4685  000CB0  0E16               	movlw	low _dbuf
  4686  000CB2  25BF               	addwf	efgtoa@i& (0+255),w,b
  4687  000CB4  6ED9               	movwf	fsr2l,c
  4688  000CB6  0E01               	movlw	high _dbuf
  4689  000CB8  21C0               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4690  000CBA  6EDA               	movwf	fsr2h,c
  4691  000CBC  C09B  FFDF         	movff	_efgtoa$890,indf2
  4692  000CC0                     
  4693                           ; BSR set to: 0
  4694                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 516:         --w;
  4695  000CC0  07B3               	decf	efgtoa@w& (0+255),f,b
  4696  000CC2  A0D8               	btfss	status,0,c
  4697  000CC4  07B4               	decf	(efgtoa@w+1)& (0+255),f,b
  4698  000CC6                     
  4699                           ; BSR set to: 0
  4700                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 518:         dbuf
      +                          [i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  4701  000CC6  07BF               	decf	efgtoa@i& (0+255),f,b
  4702  000CC8  A0D8               	btfss	status,0,c
  4703  000CCA  07C0               	decf	(efgtoa@i+1)& (0+255),f,b
  4704  000CCC                     
  4705                           ; BSR set to: 0
  4706  000CCC  0EBF               	movlw	191
  4707  000CCE  6F90               	movwf	??_efgtoa& (0+255),b
  4708  000CD0  0EFF               	movlw	255
  4709  000CD2  6F91               	movwf	(??_efgtoa+1)& (0+255),b
  4710  000CD4  518F               	movf	efgtoa@c& (0+255),w,b
  4711  000CD6  6F92               	movwf	(??_efgtoa+2)& (0+255),b
  4712  000CD8  6B93               	clrf	(??_efgtoa+3)& (0+255),b
  4713  000CDA  5190               	movf	??_efgtoa& (0+255),w,b
  4714  000CDC  2792               	addwf	(??_efgtoa+2)& (0+255),f,b
  4715  000CDE  5191               	movf	(??_efgtoa+1)& (0+255),w,b
  4716  000CE0  2393               	addwfc	(??_efgtoa+3)& (0+255),f,b
  4717  000CE2  5193               	movf	(??_efgtoa+3)& (0+255),w,b
  4718  000CE4  E10A               	bnz	u7050
  4719  000CE6  0E1A               	movlw	26
  4720  000CE8  5D92               	subwf	(??_efgtoa+2)& (0+255),w,b
  4721  000CEA  A0D8               	btfss	status,0,c
  4722  000CEC  EF7A  F006         	goto	u7051
  4723  000CF0  EF7D  F006         	goto	u7050
  4724  000CF4                     u7051:
  4725  000CF4  0E01               	movlw	1
  4726  000CF6  EF7E  F006         	goto	u7060
  4727  000CFA                     u7050:
  4728  000CFA  0E00               	movlw	0
  4729  000CFC                     u7060:
  4730  000CFC  6F9F               	movwf	_efgtoa$892& (0+255),b
  4731  000CFE  6BA0               	clrf	(_efgtoa$892+1)& (0+255),b
  4732  000D00                     
  4733                           ; BSR set to: 0
  4734  000D00  519F               	movf	_efgtoa$892& (0+255),w,b
  4735  000D02  11A0               	iorwf	(_efgtoa$892+1)& (0+255),w,b
  4736  000D04  A4D8               	btfss	status,2,c
  4737  000D06  EF87  F006         	goto	u7071
  4738  000D0A  EF89  F006         	goto	u7070
  4739  000D0E                     u7071:
  4740  000D0E  EF8F  F006         	goto	l5297
  4741  000D12                     u7070:
  4742  000D12                     
  4743                           ; BSR set to: 0
  4744  000D12  0E00               	movlw	0
  4745  000D14  6F9E               	movwf	(_efgtoa$891+1)& (0+255),b
  4746  000D16  0E65               	movlw	101
  4747  000D18  6F9D               	movwf	_efgtoa$891& (0+255),b
  4748  000D1A  EF93  F006         	goto	l5299
  4749  000D1E                     l5297:
  4750                           
  4751                           ; BSR set to: 0
  4752  000D1E  0E00               	movlw	0
  4753  000D20  6F9E               	movwf	(_efgtoa$891+1)& (0+255),b
  4754  000D22  0E45               	movlw	69
  4755  000D24  6F9D               	movwf	_efgtoa$891& (0+255),b
  4756  000D26                     l5299:
  4757                           
  4758                           ; BSR set to: 0
  4759  000D26  0E16               	movlw	low _dbuf
  4760  000D28  25BF               	addwf	efgtoa@i& (0+255),w,b
  4761  000D2A  6ED9               	movwf	fsr2l,c
  4762  000D2C  0E01               	movlw	high _dbuf
  4763  000D2E  21C0               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4764  000D30  6EDA               	movwf	fsr2h,c
  4765  000D32  C09D  FFDF         	movff	_efgtoa$891,indf2
  4766  000D36                     
  4767                           ; BSR set to: 0
  4768                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 519:         --w;
  4769  000D36  07B3               	decf	efgtoa@w& (0+255),f,b
  4770  000D38  A0D8               	btfss	status,0,c
  4771  000D3A  07B4               	decf	(efgtoa@w+1)& (0+255),f,b
  4772  000D3C                     
  4773                           ; BSR set to: 0
  4774                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 520:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  4775  000D3C  0E16               	movlw	low _dbuf
  4776  000D3E  25C7               	addwf	efgtoa@n& (0+255),w,b
  4777  000D40  6E0F               	movwf	strcpy@dest^0,c
  4778  000D42  0E01               	movlw	high _dbuf
  4779  000D44  21C8               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4780  000D46  6E10               	movwf	(strcpy@dest+1)^0,c
  4781  000D48  0E16               	movlw	low _dbuf
  4782  000D4A  25BF               	addwf	efgtoa@i& (0+255),w,b
  4783  000D4C  6E11               	movwf	strcpy@src^0,c
  4784  000D4E  0E01               	movlw	high _dbuf
  4785  000D50  21C0               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4786  000D52  6E12               	movwf	(strcpy@src+1)^0,c
  4787  000D54  EC2D  F019         	call	_strcpy	;wreg free
  4788  000D58  EF34  F001         	goto	l5045
  4789  000D5C                     l885:
  4790  000D5C  0012               	return		;funcret
  4791  000D5E                     __end_of_efgtoa:
  4792                           	callstack 0
  4793                           
  4794 ;; *************** function _tolower *****************
  4795 ;; Defined at:
  4796 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\tolower.c"
  4797 ;; Parameters:    Size  Location     Type
  4798 ;;  c               2   20[COMRAM] int 
  4799 ;; Auto vars:     Size  Location     Type
  4800 ;;		None
  4801 ;; Return value:  Size  Location     Type
  4802 ;;                  2   20[COMRAM] int 
  4803 ;; Registers used:
  4804 ;;		wreg, status,2, status,0
  4805 ;; Tracked objects:
  4806 ;;		On entry : 0/0
  4807 ;;		On exit  : 0/0
  4808 ;;		Unchanged: 0/0
  4809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4810 ;;      Params:         2       0       0       0       0       0       0
  4811 ;;      Locals:         2       0       0       0       0       0       0
  4812 ;;      Temps:          4       0       0       0       0       0       0
  4813 ;;      Totals:         8       0       0       0       0       0       0
  4814 ;;Total ram usage:        8 bytes
  4815 ;; Hardware stack levels used: 1
  4816 ;; Hardware stack levels required when called: 3
  4817 ;; This function calls:
  4818 ;;		_isupper
  4819 ;; This function is called by:
  4820 ;;		_efgtoa
  4821 ;;		_vfpfcnvrt
  4822 ;; This function uses a non-reentrant model
  4823 ;;
  4824                           
  4825                           	psect	text6
  4826  00319A                     __ptext6:
  4827                           	callstack 0
  4828  00319A                     _tolower:
  4829                           	callstack 24
  4830  00319A  0EBF               	movlw	191
  4831  00319C  6E17               	movwf	??_tolower^0,c
  4832  00319E  0EFF               	movlw	255
  4833  0031A0  6E18               	movwf	(??_tolower+1)^0,c
  4834  0031A2  C015  F019         	movff	tolower@c,??_tolower+2
  4835  0031A6  C016  F01A         	movff	tolower@c+1,??_tolower+3
  4836  0031AA  5017               	movf	??_tolower^0,w,c
  4837  0031AC  2619               	addwf	(??_tolower+2)^0,f,c
  4838  0031AE  5018               	movf	(??_tolower+1)^0,w,c
  4839  0031B0  221A               	addwfc	(??_tolower+3)^0,f,c
  4840  0031B2  501A               	movf	(??_tolower+3)^0,w,c
  4841  0031B4  E10A               	bnz	u6370
  4842  0031B6  0E1A               	movlw	26
  4843  0031B8  5C19               	subwf	(??_tolower+2)^0,w,c
  4844  0031BA  A0D8               	btfss	status,0,c
  4845  0031BC  EFE2  F018         	goto	u6371
  4846  0031C0  EFE5  F018         	goto	u6370
  4847  0031C4                     u6371:
  4848  0031C4  0E01               	movlw	1
  4849  0031C6  EFE6  F018         	goto	u6380
  4850  0031CA                     u6370:
  4851  0031CA  0E00               	movlw	0
  4852  0031CC                     u6380:
  4853  0031CC  6E1B               	movwf	_tolower$1040^0,c
  4854  0031CE  6A1C               	clrf	(_tolower$1040+1)^0,c
  4855  0031D0  501B               	movf	_tolower$1040^0,w,c
  4856  0031D2  101C               	iorwf	(_tolower$1040+1)^0,w,c
  4857  0031D4  B4D8               	btfsc	status,2,c
  4858  0031D6  EFEF  F018         	goto	u6391
  4859  0031DA  EFF1  F018         	goto	u6390
  4860  0031DE                     u6391:
  4861  0031DE  EFF8  F018         	goto	l1125
  4862  0031E2                     u6390:
  4863  0031E2  0E20               	movlw	32
  4864  0031E4  1015               	iorwf	tolower@c^0,w,c
  4865  0031E6  6E15               	movwf	?_tolower^0,c
  4866  0031E8  5016               	movf	(tolower@c+1)^0,w,c
  4867  0031EA  6E16               	movwf	(?_tolower+1)^0,c
  4868  0031EC  EFFC  F018         	goto	l1130
  4869  0031F0                     l1125:
  4870  0031F0  C015  F015         	movff	tolower@c,?_tolower
  4871  0031F4  C016  F016         	movff	tolower@c+1,?_tolower+1
  4872  0031F8                     l1130:
  4873  0031F8  0012               	return		;funcret
  4874  0031FA                     __end_of_tolower:
  4875                           	callstack 0
  4876                           
  4877 ;; *************** function _isupper *****************
  4878 ;; Defined at:
  4879 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isupper.c"
  4880 ;; Parameters:    Size  Location     Type
  4881 ;;  c               2   14[COMRAM] int 
  4882 ;; Auto vars:     Size  Location     Type
  4883 ;;		None
  4884 ;; Return value:  Size  Location     Type
  4885 ;;                  2   14[COMRAM] int 
  4886 ;; Registers used:
  4887 ;;		wreg, status,2, status,0
  4888 ;; Tracked objects:
  4889 ;;		On entry : 0/0
  4890 ;;		On exit  : 0/0
  4891 ;;		Unchanged: 0/0
  4892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4893 ;;      Params:         2       0       0       0       0       0       0
  4894 ;;      Locals:         0       0       0       0       0       0       0
  4895 ;;      Temps:          4       0       0       0       0       0       0
  4896 ;;      Totals:         6       0       0       0       0       0       0
  4897 ;;Total ram usage:        6 bytes
  4898 ;; Hardware stack levels used: 1
  4899 ;; Hardware stack levels required when called: 2
  4900 ;; This function calls:
  4901 ;;		Nothing
  4902 ;; This function is called by:
  4903 ;;		_efgtoa
  4904 ;;		_vfpfcnvrt
  4905 ;;		_tolower
  4906 ;; This function uses a non-reentrant model
  4907 ;;
  4908                           
  4909                           	psect	text7
  4910  003422                     __ptext7:
  4911                           	callstack 0
  4912  003422                     _isupper:
  4913                           	callstack 24
  4914  003422  0EBF               	movlw	191
  4915  003424  6E11               	movwf	??_isupper^0,c
  4916  003426  0EFF               	movlw	255
  4917  003428  6E12               	movwf	(??_isupper+1)^0,c
  4918  00342A  C00F  F013         	movff	isupper@c,??_isupper+2
  4919  00342E  C010  F014         	movff	isupper@c+1,??_isupper+3
  4920  003432  5011               	movf	??_isupper^0,w,c
  4921  003434  2613               	addwf	(??_isupper+2)^0,f,c
  4922  003436  5012               	movf	(??_isupper+1)^0,w,c
  4923  003438  2214               	addwfc	(??_isupper+3)^0,f,c
  4924  00343A  5014               	movf	(??_isupper+3)^0,w,c
  4925  00343C  E10A               	bnz	u5520
  4926  00343E  0E1A               	movlw	26
  4927  003440  5C13               	subwf	(??_isupper+2)^0,w,c
  4928  003442  A0D8               	btfss	status,0,c
  4929  003444  EF26  F01A         	goto	u5521
  4930  003448  EF29  F01A         	goto	u5520
  4931  00344C                     u5521:
  4932  00344C  0E01               	movlw	1
  4933  00344E  EF2A  F01A         	goto	u5530
  4934  003452                     u5520:
  4935  003452  0E00               	movlw	0
  4936  003454                     u5530:
  4937  003454  6E0F               	movwf	?_isupper^0,c
  4938  003456  6A10               	clrf	(?_isupper+1)^0,c
  4939  003458  0012               	return		;funcret
  4940  00345A                     __end_of_isupper:
  4941                           	callstack 0
  4942                           
  4943 ;; *************** function _strcpy *****************
  4944 ;; Defined at:
  4945 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strcpy.c"
  4946 ;; Parameters:    Size  Location     Type
  4947 ;;  dest            2   14[COMRAM] PTR unsigned char 
  4948 ;;		 -> dbuf(80), 
  4949 ;;  src             2   16[COMRAM] PTR const unsigned char 
  4950 ;;		 -> STR_10(4), STR_9(4), STR_6(4), STR_5(4), 
  4951 ;;		 -> dbuf(80), 
  4952 ;; Auto vars:     Size  Location     Type
  4953 ;;  d               2   22[COMRAM] PTR unsigned char 
  4954 ;;		 -> dbuf(80), 
  4955 ;;  s               2   20[COMRAM] PTR const unsigned char 
  4956 ;;		 -> STR_10(4), STR_9(4), STR_6(4), STR_5(4), 
  4957 ;;		 -> dbuf(80), 
  4958 ;; Return value:  Size  Location     Type
  4959 ;;                  2   14[COMRAM] PTR unsigned char 
  4960 ;; Registers used:
  4961 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4962 ;; Tracked objects:
  4963 ;;		On entry : 0/0
  4964 ;;		On exit  : 0/0
  4965 ;;		Unchanged: 0/0
  4966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4967 ;;      Params:         4       0       0       0       0       0       0
  4968 ;;      Locals:         4       0       0       0       0       0       0
  4969 ;;      Temps:          2       0       0       0       0       0       0
  4970 ;;      Totals:        10       0       0       0       0       0       0
  4971 ;;Total ram usage:       10 bytes
  4972 ;; Hardware stack levels used: 1
  4973 ;; Hardware stack levels required when called: 2
  4974 ;; This function calls:
  4975 ;;		Nothing
  4976 ;; This function is called by:
  4977 ;;		_efgtoa
  4978 ;; This function uses a non-reentrant model
  4979 ;;
  4980                           
  4981                           	psect	text8
  4982  00325A                     __ptext8:
  4983                           	callstack 0
  4984  00325A                     _strcpy:
  4985                           	callstack 24
  4986  00325A  C011  F015         	movff	strcpy@src,strcpy@s
  4987  00325E  C012  F016         	movff	strcpy@src+1,strcpy@s+1
  4988  003262  C00F  F017         	movff	strcpy@dest,strcpy@d
  4989  003266  C010  F018         	movff	strcpy@dest+1,strcpy@d+1
  4990  00326A                     l4945:
  4991  00326A  5015               	movf	strcpy@s^0,w,c
  4992  00326C  6E13               	movwf	??_strcpy^0,c
  4993  00326E  5016               	movf	(strcpy@s+1)^0,w,c
  4994  003270  6E14               	movwf	(??_strcpy+1)^0,c
  4995  003272  4A15               	infsnz	strcpy@s^0,f,c
  4996  003274  2A16               	incf	(strcpy@s+1)^0,f,c
  4997  003276  C013  FFF6         	movff	??_strcpy,tblptrl
  4998  00327A  C014  FFF7         	movff	??_strcpy+1,tblptrh
  4999  00327E  6AF8               	clrf	tblptru,c
  5000  003280  C017  FFD9         	movff	strcpy@d,fsr2l
  5001  003284  C018  FFDA         	movff	strcpy@d+1,fsr2h
  5002  003288  4A17               	infsnz	strcpy@d^0,f,c
  5003  00328A  2A18               	incf	(strcpy@d+1)^0,f,c
  5004  00328C  0E05               	movlw	(high __ramtop+-1)
  5005  00328E  64F7               	cpfsgt	tblptrh,c
  5006  003290  D003               	bra	u6357
  5007  003292  0008               	tblrd		*
  5008  003294  50F5               	movf	tablat,w,c
  5009  003296  D005               	bra	u6350
  5010  003298                     u6357:
  5011  003298  CFF6 FFE1          	movff	tblptrl,fsr1l
  5012  00329C  CFF7 FFE2          	movff	tblptrh,fsr1h
  5013  0032A0  50E7               	movf	indf1,w,c
  5014  0032A2                     u6350:
  5015  0032A2  6EDF               	movwf	indf2,c
  5016  0032A4  50DF               	movf	indf2,w,c
  5017  0032A6  A4D8               	btfss	status,2,c
  5018  0032A8  EF58  F019         	goto	u6361
  5019  0032AC  EF5A  F019         	goto	u6360
  5020  0032B0                     u6361:
  5021  0032B0  EF35  F019         	goto	l4945
  5022  0032B4                     u6360:
  5023  0032B4  0012               	return		;funcret
  5024  0032B6                     __end_of_strcpy:
  5025                           	callstack 0
  5026                           
  5027 ;; *************** function _pad *****************
  5028 ;; Defined at:
  5029 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  5030 ;; Parameters:    Size  Location     Type
  5031 ;;  fp              2   30[COMRAM] PTR struct _IO_FILE
  5032 ;;		 -> sprintf@f(6), 
  5033 ;;  buf             2   32[COMRAM] PTR unsigned char 
  5034 ;;		 -> dbuf(80), 
  5035 ;;  p               2   34[COMRAM] int 
  5036 ;; Auto vars:     Size  Location     Type
  5037 ;;  w               2   39[COMRAM] int 
  5038 ;;  i               2   37[COMRAM] int 
  5039 ;; Return value:  Size  Location     Type
  5040 ;;                  2   30[COMRAM] int 
  5041 ;; Registers used:
  5042 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5043 ;; Tracked objects:
  5044 ;;		On entry : 0/0
  5045 ;;		On exit  : 0/0
  5046 ;;		Unchanged: 0/0
  5047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5048 ;;      Params:         6       0       0       0       0       0       0
  5049 ;;      Locals:         4       0       0       0       0       0       0
  5050 ;;      Temps:          1       0       0       0       0       0       0
  5051 ;;      Totals:        11       0       0       0       0       0       0
  5052 ;;Total ram usage:       11 bytes
  5053 ;; Hardware stack levels used: 1
  5054 ;; Hardware stack levels required when called: 5
  5055 ;; This function calls:
  5056 ;;		_fputc
  5057 ;;		_fputs
  5058 ;;		_strlen
  5059 ;; This function is called by:
  5060 ;;		_efgtoa
  5061 ;; This function uses a non-reentrant model
  5062 ;;
  5063                           
  5064                           	psect	text9
  5065  002D68                     __ptext9:
  5066                           	callstack 0
  5067  002D68                     _pad:
  5068                           	callstack 21
  5069  002D68                     
  5070                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  5071  002D68  A048               	btfss	_flags^0,0,c
  5072  002D6A  EFB9  F016         	goto	u6241
  5073  002D6E  EFBB  F016         	goto	u6240
  5074  002D72                     u6241:
  5075  002D72  EFC5  F016         	goto	l4903
  5076  002D76                     u6240:
  5077  002D76                     
  5078                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  5079  002D76  C021  F018         	movff	pad@buf,fputs@s
  5080  002D7A  C022  F019         	movff	pad@buf+1,fputs@s+1
  5081  002D7E  C01F  F01A         	movff	pad@fp,fputs@fp
  5082  002D82  C020  F01B         	movff	pad@fp+1,fputs@fp+1
  5083  002D86  ECD2  F019         	call	_fputs	;wreg free
  5084  002D8A                     l4903:
  5085                           
  5086                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  5087  002D8A  BE24               	btfsc	(pad@p+1)^0,7,c
  5088  002D8C  EFCA  F016         	goto	u6251
  5089  002D90  EFCC  F016         	goto	u6250
  5090  002D94                     u6251:
  5091  002D94  EFD2  F016         	goto	l4907
  5092  002D98                     u6250:
  5093  002D98  C023  F028         	movff	pad@p,pad@w
  5094  002D9C  C024  F029         	movff	pad@p+1,pad@w+1
  5095  002DA0  EFD6  F016         	goto	l862
  5096  002DA4                     l4907:
  5097  002DA4  0E00               	movlw	0
  5098  002DA6  6E29               	movwf	(pad@w+1)^0,c
  5099  002DA8  0E00               	movlw	0
  5100  002DAA  6E28               	movwf	pad@w^0,c
  5101  002DAC                     l862:
  5102                           
  5103                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  5104  002DAC  0E00               	movlw	0
  5105  002DAE  6E27               	movwf	(pad@i+1)^0,c
  5106  002DB0  0E00               	movlw	0
  5107  002DB2  6E26               	movwf	pad@i^0,c
  5108                           
  5109                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  5110  002DB4  EFE8  F016         	goto	l4913
  5111  002DB8                     l4909:
  5112                           
  5113                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  5114  002DB8  0E00               	movlw	0
  5115  002DBA  6E10               	movwf	(fputc@c+1)^0,c
  5116  002DBC  0E20               	movlw	32
  5117  002DBE  6E0F               	movwf	fputc@c^0,c
  5118  002DC0  C01F  F011         	movff	pad@fp,fputc@fp
  5119  002DC4  C020  F012         	movff	pad@fp+1,fputc@fp+1
  5120  002DC8  ECED  F015         	call	_fputc	;wreg free
  5121  002DCC                     
  5122                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  5123  002DCC  4A26               	infsnz	pad@i^0,f,c
  5124  002DCE  2A27               	incf	(pad@i+1)^0,f,c
  5125  002DD0                     l4913:
  5126                           
  5127                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  5128  002DD0  5028               	movf	pad@w^0,w,c
  5129  002DD2  5C26               	subwf	pad@i^0,w,c
  5130  002DD4  5027               	movf	(pad@i+1)^0,w,c
  5131  002DD6  0A80               	xorlw	128
  5132  002DD8  6E25               	movwf	??_pad^0,c
  5133  002DDA  5029               	movf	(pad@w+1)^0,w,c
  5134  002DDC  0A80               	xorlw	128
  5135  002DDE  5825               	subwfb	??_pad^0,w,c
  5136  002DE0  A0D8               	btfss	status,0,c
  5137  002DE2  EFF5  F016         	goto	u6261
  5138  002DE6  EFF7  F016         	goto	u6260
  5139  002DEA                     u6261:
  5140  002DEA  EFDC  F016         	goto	l4909
  5141  002DEE                     u6260:
  5142  002DEE                     
  5143                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  5144  002DEE  B048               	btfsc	_flags^0,0,c
  5145  002DF0  EFFC  F016         	goto	u6271
  5146  002DF4  EFFE  F016         	goto	u6270
  5147  002DF8                     u6271:
  5148  002DF8  EF08  F017         	goto	l4917
  5149  002DFC                     u6270:
  5150  002DFC                     
  5151                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  5152  002DFC  C021  F018         	movff	pad@buf,fputs@s
  5153  002E00  C022  F019         	movff	pad@buf+1,fputs@s+1
  5154  002E04  C01F  F01A         	movff	pad@fp,fputs@fp
  5155  002E08  C020  F01B         	movff	pad@fp+1,fputs@fp+1
  5156  002E0C  ECD2  F019         	call	_fputs	;wreg free
  5157  002E10                     l4917:
  5158                           
  5159                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  5160  002E10  C021  F00F         	movff	pad@buf,strlen@s
  5161  002E14  C022  F010         	movff	pad@buf+1,strlen@s+1
  5162  002E18  EC65  F01A         	call	_strlen	;wreg free
  5163  002E1C  5028               	movf	pad@w^0,w,c
  5164  002E1E  240F               	addwf	?_strlen^0,w,c
  5165  002E20  6E1F               	movwf	?_pad^0,c
  5166  002E22  5029               	movf	(pad@w+1)^0,w,c
  5167  002E24  2010               	addwfc	(?_strlen+1)^0,w,c
  5168  002E26  6E20               	movwf	(?_pad+1)^0,c
  5169  002E28  0012               	return		;funcret
  5170  002E2A                     __end_of_pad:
  5171                           	callstack 0
  5172                           
  5173 ;; *************** function _strlen *****************
  5174 ;; Defined at:
  5175 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  5176 ;; Parameters:    Size  Location     Type
  5177 ;;  s               2   14[COMRAM] PTR const unsigned char 
  5178 ;;		 -> dbuf(80), 
  5179 ;; Auto vars:     Size  Location     Type
  5180 ;;  a               2   16[COMRAM] PTR const unsigned char 
  5181 ;;		 -> dbuf(80), 
  5182 ;; Return value:  Size  Location     Type
  5183 ;;                  2   14[COMRAM] unsigned int 
  5184 ;; Registers used:
  5185 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5186 ;; Tracked objects:
  5187 ;;		On entry : 0/0
  5188 ;;		On exit  : 0/0
  5189 ;;		Unchanged: 0/0
  5190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5191 ;;      Params:         2       0       0       0       0       0       0
  5192 ;;      Locals:         2       0       0       0       0       0       0
  5193 ;;      Temps:          0       0       0       0       0       0       0
  5194 ;;      Totals:         4       0       0       0       0       0       0
  5195 ;;Total ram usage:        4 bytes
  5196 ;; Hardware stack levels used: 1
  5197 ;; Hardware stack levels required when called: 2
  5198 ;; This function calls:
  5199 ;;		Nothing
  5200 ;; This function is called by:
  5201 ;;		_pad
  5202 ;; This function uses a non-reentrant model
  5203 ;;
  5204                           
  5205                           	psect	text10
  5206  0034CA                     __ptext10:
  5207                           	callstack 0
  5208  0034CA                     _strlen:
  5209                           	callstack 23
  5210  0034CA  C00F  F011         	movff	strlen@s,strlen@a
  5211  0034CE  C010  F012         	movff	strlen@s+1,strlen@a+1
  5212  0034D2  EF6D  F01A         	goto	l4439
  5213  0034D6                     l4437:
  5214  0034D6  4A0F               	infsnz	strlen@s^0,f,c
  5215  0034D8  2A10               	incf	(strlen@s+1)^0,f,c
  5216  0034DA                     l4439:
  5217  0034DA  C00F  FFD9         	movff	strlen@s,fsr2l
  5218  0034DE  C010  FFDA         	movff	strlen@s+1,fsr2h
  5219  0034E2  50DF               	movf	indf2,w,c
  5220  0034E4  A4D8               	btfss	status,2,c
  5221  0034E6  EF77  F01A         	goto	u5511
  5222  0034EA  EF79  F01A         	goto	u5510
  5223  0034EE                     u5511:
  5224  0034EE  EF6B  F01A         	goto	l4437
  5225  0034F2                     u5510:
  5226  0034F2  5011               	movf	strlen@a^0,w,c
  5227  0034F4  5C0F               	subwf	strlen@s^0,w,c
  5228  0034F6  6E0F               	movwf	?_strlen^0,c
  5229  0034F8  5012               	movf	(strlen@a+1)^0,w,c
  5230  0034FA  5810               	subwfb	(strlen@s+1)^0,w,c
  5231  0034FC  6E10               	movwf	(?_strlen+1)^0,c
  5232  0034FE  0012               	return		;funcret
  5233  003500                     __end_of_strlen:
  5234                           	callstack 0
  5235                           
  5236 ;; *************** function _fputs *****************
  5237 ;; Defined at:
  5238 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  5239 ;; Parameters:    Size  Location     Type
  5240 ;;  s               2   23[COMRAM] PTR const unsigned char 
  5241 ;;		 -> dbuf(80), 
  5242 ;;  fp              2   25[COMRAM] PTR struct _IO_FILE
  5243 ;;		 -> sprintf@f(6), 
  5244 ;; Auto vars:     Size  Location     Type
  5245 ;;  i               2   28[COMRAM] int 
  5246 ;;  c               1   27[COMRAM] unsigned char 
  5247 ;; Return value:  Size  Location     Type
  5248 ;;                  2   23[COMRAM] int 
  5249 ;; Registers used:
  5250 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5251 ;; Tracked objects:
  5252 ;;		On entry : 0/0
  5253 ;;		On exit  : 0/0
  5254 ;;		Unchanged: 0/0
  5255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5256 ;;      Params:         4       0       0       0       0       0       0
  5257 ;;      Locals:         3       0       0       0       0       0       0
  5258 ;;      Temps:          0       0       0       0       0       0       0
  5259 ;;      Totals:         7       0       0       0       0       0       0
  5260 ;;Total ram usage:        7 bytes
  5261 ;; Hardware stack levels used: 1
  5262 ;; Hardware stack levels required when called: 4
  5263 ;; This function calls:
  5264 ;;		_fputc
  5265 ;; This function is called by:
  5266 ;;		_pad
  5267 ;; This function uses a non-reentrant model
  5268 ;;
  5269                           
  5270                           	psect	text11
  5271  0033A4                     __ptext11:
  5272                           	callstack 0
  5273  0033A4                     _fputs:
  5274                           	callstack 21
  5275  0033A4  0E00               	movlw	0
  5276  0033A6  6E1E               	movwf	(fputs@i+1)^0,c
  5277  0033A8  0E00               	movlw	0
  5278  0033AA  6E1D               	movwf	fputs@i^0,c
  5279  0033AC  EFE3  F019         	goto	l4433
  5280  0033B0                     l4429:
  5281  0033B0  C01C  F00F         	movff	fputs@c,fputc@c
  5282  0033B4  6A10               	clrf	(fputc@c+1)^0,c
  5283  0033B6  C01A  F011         	movff	fputs@fp,fputc@fp
  5284  0033BA  C01B  F012         	movff	fputs@fp+1,fputc@fp+1
  5285  0033BE  ECED  F015         	call	_fputc	;wreg free
  5286  0033C2  4A1D               	infsnz	fputs@i^0,f,c
  5287  0033C4  2A1E               	incf	(fputs@i+1)^0,f,c
  5288  0033C6                     l4433:
  5289  0033C6  501D               	movf	fputs@i^0,w,c
  5290  0033C8  2418               	addwf	fputs@s^0,w,c
  5291  0033CA  6ED9               	movwf	fsr2l,c
  5292  0033CC  501E               	movf	(fputs@i+1)^0,w,c
  5293  0033CE  2019               	addwfc	(fputs@s+1)^0,w,c
  5294  0033D0  6EDA               	movwf	fsr2h,c
  5295  0033D2  50DF               	movf	indf2,w,c
  5296  0033D4  6E1C               	movwf	fputs@c^0,c
  5297  0033D6  501C               	movf	fputs@c^0,w,c
  5298  0033D8  A4D8               	btfss	status,2,c
  5299  0033DA  EFF1  F019         	goto	u5501
  5300  0033DE  EFF3  F019         	goto	u5500
  5301  0033E2                     u5501:
  5302  0033E2  EFD8  F019         	goto	l4429
  5303  0033E6                     u5500:
  5304  0033E6  0012               	return		;funcret
  5305  0033E8                     __end_of_fputs:
  5306                           	callstack 0
  5307                           
  5308 ;; *************** function _fputc *****************
  5309 ;; Defined at:
  5310 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  5311 ;; Parameters:    Size  Location     Type
  5312 ;;  c               2   14[COMRAM] int 
  5313 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  5314 ;;		 -> sprintf@f(6), 
  5315 ;; Auto vars:     Size  Location     Type
  5316 ;;		None
  5317 ;; Return value:  Size  Location     Type
  5318 ;;                  2   14[COMRAM] int 
  5319 ;; Registers used:
  5320 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5321 ;; Tracked objects:
  5322 ;;		On entry : 0/0
  5323 ;;		On exit  : 0/0
  5324 ;;		Unchanged: 0/0
  5325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5326 ;;      Params:         4       0       0       0       0       0       0
  5327 ;;      Locals:         0       0       0       0       0       0       0
  5328 ;;      Temps:          5       0       0       0       0       0       0
  5329 ;;      Totals:         9       0       0       0       0       0       0
  5330 ;;Total ram usage:        9 bytes
  5331 ;; Hardware stack levels used: 1
  5332 ;; Hardware stack levels required when called: 3
  5333 ;; This function calls:
  5334 ;;		_putch
  5335 ;; This function is called by:
  5336 ;;		_pad
  5337 ;;		_vfpfcnvrt
  5338 ;;		_fputs
  5339 ;; This function uses a non-reentrant model
  5340 ;;
  5341                           
  5342                           	psect	text12
  5343  002BDA                     __ptext12:
  5344                           	callstack 0
  5345  002BDA                     _fputc:
  5346                           	callstack 24
  5347  002BDA  5011               	movf	fputc@fp^0,w,c
  5348  002BDC  1012               	iorwf	(fputc@fp+1)^0,w,c
  5349  002BDE  B4D8               	btfsc	status,2,c
  5350  002BE0  EFF4  F015         	goto	u5071
  5351  002BE4  EFF6  F015         	goto	u5070
  5352  002BE8                     u5071:
  5353  002BE8  EFFF  F015         	goto	l4215
  5354  002BEC                     u5070:
  5355  002BEC  5011               	movf	fputc@fp^0,w,c
  5356  002BEE  1012               	iorwf	(fputc@fp+1)^0,w,c
  5357  002BF0  A4D8               	btfss	status,2,c
  5358  002BF2  EFFD  F015         	goto	u5081
  5359  002BF6  EFFF  F015         	goto	u5080
  5360  002BFA                     u5081:
  5361  002BFA  EF04  F016         	goto	l4217
  5362  002BFE                     u5080:
  5363  002BFE                     l4215:
  5364  002BFE  500F               	movf	fputc@c^0,w,c
  5365  002C00  ECC8  F01A         	call	_putch
  5366  002C04  EF51  F016         	goto	l1088
  5367  002C08                     l4217:
  5368  002C08  EE20 F004          	lfsr	2,4
  5369  002C0C  5011               	movf	fputc@fp^0,w,c
  5370  002C0E  26D9               	addwf	fsr2l,f,c
  5371  002C10  5012               	movf	(fputc@fp+1)^0,w,c
  5372  002C12  22DA               	addwfc	fsr2h,f,c
  5373  002C14  50DE               	movf	postinc2,w,c
  5374  002C16  10DE               	iorwf	postinc2,w,c
  5375  002C18  B4D8               	btfsc	status,2,c
  5376  002C1A  EF11  F016         	goto	u5091
  5377  002C1E  EF13  F016         	goto	u5090
  5378  002C22                     u5091:
  5379  002C22  EF2E  F016         	goto	l4221
  5380  002C26                     u5090:
  5381  002C26  EE20 F004          	lfsr	2,4
  5382  002C2A  5011               	movf	fputc@fp^0,w,c
  5383  002C2C  26D9               	addwf	fsr2l,f,c
  5384  002C2E  5012               	movf	(fputc@fp+1)^0,w,c
  5385  002C30  22DA               	addwfc	fsr2h,f,c
  5386  002C32  EE10 F002          	lfsr	1,2
  5387  002C36  5011               	movf	fputc@fp^0,w,c
  5388  002C38  26E1               	addwf	fsr1l,f,c
  5389  002C3A  5012               	movf	(fputc@fp+1)^0,w,c
  5390  002C3C  22E2               	addwfc	fsr1h,f,c
  5391  002C3E  50DE               	movf	postinc2,w,c
  5392  002C40  5CE6               	subwf	postinc1,w,c
  5393  002C42  50E6               	movf	postinc1,w,c
  5394  002C44  0A80               	xorlw	128
  5395  002C46  6E17               	movwf	(??_fputc+4)^0,c
  5396  002C48  50DE               	movf	postinc2,w,c
  5397  002C4A  0A80               	xorlw	128
  5398  002C4C  5817               	subwfb	(??_fputc+4)^0,w,c
  5399  002C4E  B0D8               	btfsc	status,0,c
  5400  002C50  EF2C  F016         	goto	u5101
  5401  002C54  EF2E  F016         	goto	u5100
  5402  002C58                     u5101:
  5403  002C58  EF51  F016         	goto	l1088
  5404  002C5C                     u5100:
  5405  002C5C                     l4221:
  5406  002C5C  EE20 F002          	lfsr	2,2
  5407  002C60  5011               	movf	fputc@fp^0,w,c
  5408  002C62  26D9               	addwf	fsr2l,f,c
  5409  002C64  5012               	movf	(fputc@fp+1)^0,w,c
  5410  002C66  22DA               	addwfc	fsr2h,f,c
  5411  002C68  CFDE F013          	movff	postinc2,??_fputc
  5412  002C6C  CFDD F014          	movff	postdec2,??_fputc+1
  5413  002C70  C011  FFD9         	movff	fputc@fp,fsr2l
  5414  002C74  C012  FFDA         	movff	fputc@fp+1,fsr2h
  5415  002C78  CFDE F015          	movff	postinc2,??_fputc+2
  5416  002C7C  CFDD F016          	movff	postdec2,??_fputc+3
  5417  002C80  5013               	movf	??_fputc^0,w,c
  5418  002C82  2415               	addwf	(??_fputc+2)^0,w,c
  5419  002C84  6ED9               	movwf	fsr2l,c
  5420  002C86  5014               	movf	(??_fputc+1)^0,w,c
  5421  002C88  2016               	addwfc	(??_fputc+3)^0,w,c
  5422  002C8A  6EDA               	movwf	fsr2h,c
  5423  002C8C  C00F  FFDF         	movff	fputc@c,indf2
  5424  002C90  EE20 F002          	lfsr	2,2
  5425  002C94  5011               	movf	fputc@fp^0,w,c
  5426  002C96  26D9               	addwf	fsr2l,f,c
  5427  002C98  5012               	movf	(fputc@fp+1)^0,w,c
  5428  002C9A  22DA               	addwfc	fsr2h,f,c
  5429  002C9C  2ADE               	incf	postinc2,f,c
  5430  002C9E  0E00               	movlw	0
  5431  002CA0  22DD               	addwfc	postdec2,f,c
  5432  002CA2                     l1088:
  5433  002CA2  0012               	return		;funcret
  5434  002CA4                     __end_of_fputc:
  5435                           	callstack 0
  5436                           
  5437 ;; *************** function _putch *****************
  5438 ;; Defined at:
  5439 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\putch.c"
  5440 ;; Parameters:    Size  Location     Type
  5441 ;;  c               1    wreg     unsigned char 
  5442 ;; Auto vars:     Size  Location     Type
  5443 ;;  c               1    0[COMRAM] unsigned char 
  5444 ;; Return value:  Size  Location     Type
  5445 ;;                  1    wreg      void 
  5446 ;; Registers used:
  5447 ;;		wreg
  5448 ;; Tracked objects:
  5449 ;;		On entry : 0/0
  5450 ;;		On exit  : 0/0
  5451 ;;		Unchanged: 0/0
  5452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5453 ;;      Params:         0       0       0       0       0       0       0
  5454 ;;      Locals:         0       0       0       0       0       0       0
  5455 ;;      Temps:          0       0       0       0       0       0       0
  5456 ;;      Totals:         0       0       0       0       0       0       0
  5457 ;;Total ram usage:        0 bytes
  5458 ;; Hardware stack levels used: 1
  5459 ;; Hardware stack levels required when called: 2
  5460 ;; This function calls:
  5461 ;;		Nothing
  5462 ;; This function is called by:
  5463 ;;		_fputc
  5464 ;; This function uses a non-reentrant model
  5465 ;;
  5466                           
  5467                           	psect	text13
  5468  003590                     __ptext13:
  5469                           	callstack 0
  5470  003590                     _putch:
  5471                           	callstack 24
  5472  003590  0012               	return		;funcret
  5473  003592                     __end_of_putch:
  5474                           	callstack 0
  5475                           
  5476 ;; *************** function _floorf *****************
  5477 ;; Defined at:
  5478 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\floorf.c"
  5479 ;; Parameters:    Size  Location     Type
  5480 ;;  x               4   59[COMRAM] float 
  5481 ;; Auto vars:     Size  Location     Type
  5482 ;;  u               4   12[BANK0 ] struct .
  5483 ;;  m               4    6[BANK0 ] unsigned long 
  5484 ;;  e               2   10[BANK0 ] int 
  5485 ;; Return value:  Size  Location     Type
  5486 ;;                  4   59[COMRAM] float 
  5487 ;; Registers used:
  5488 ;;		wreg, status,2, status,0
  5489 ;; Tracked objects:
  5490 ;;		On entry : 0/0
  5491 ;;		On exit  : 0/0
  5492 ;;		Unchanged: 0/0
  5493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5494 ;;      Params:         4       0       0       0       0       0       0
  5495 ;;      Locals:         0      10       0       0       0       0       0
  5496 ;;      Temps:          0       6       0       0       0       0       0
  5497 ;;      Totals:         4      16       0       0       0       0       0
  5498 ;;Total ram usage:       20 bytes
  5499 ;; Hardware stack levels used: 1
  5500 ;; Hardware stack levels required when called: 2
  5501 ;; This function calls:
  5502 ;;		Nothing
  5503 ;; This function is called by:
  5504 ;;		_efgtoa
  5505 ;; This function uses a non-reentrant model
  5506 ;;
  5507                           
  5508                           	psect	text14
  5509  00229E                     __ptext14:
  5510                           	callstack 0
  5511  00229E                     _floorf:
  5512                           	callstack 24
  5513  00229E  C106  F06C         	movff	floorf@F527,floorf@u
  5514  0022A2  C107  F06D         	movff	floorf@F527+1,floorf@u+1
  5515  0022A6  C108  F06E         	movff	floorf@F527+2,floorf@u+2
  5516  0022AA  C109  F06F         	movff	floorf@F527+3,floorf@u+3
  5517  0022AE  C03C  F06C         	movff	floorf@x,floorf@u
  5518  0022B2  C03D  F06D         	movff	floorf@x+1,floorf@u+1
  5519  0022B6  C03E  F06E         	movff	floorf@x+2,floorf@u+2
  5520  0022BA  C03F  F06F         	movff	floorf@x+3,floorf@u+3
  5521  0022BE  0E81               	movlw	129
  5522  0022C0  0100               	movlb	0	; () banked
  5523  0022C2  6F60               	movwf	??_floorf& (0+255),b
  5524  0022C4  0EFF               	movlw	255
  5525  0022C6  6F61               	movwf	(??_floorf+1)& (0+255),b
  5526  0022C8  C06C  F062         	movff	floorf@u,??_floorf+2
  5527  0022CC  C06D  F063         	movff	floorf@u+1,??_floorf+3
  5528  0022D0  C06E  F064         	movff	floorf@u+2,??_floorf+4
  5529  0022D4  C06F  F065         	movff	floorf@u+3,??_floorf+5
  5530  0022D8  0E18               	movlw	24
  5531  0022DA  EF74  F011         	goto	u6400
  5532  0022DE                     u6405:
  5533  0022DE  90D8               	bcf	status,0,c
  5534  0022E0  3365               	rrcf	(??_floorf+5)& (0+255),f,b
  5535  0022E2  3364               	rrcf	(??_floorf+4)& (0+255),f,b
  5536  0022E4  3363               	rrcf	(??_floorf+3)& (0+255),f,b
  5537  0022E6  3362               	rrcf	(??_floorf+2)& (0+255),f,b
  5538  0022E8                     u6400:
  5539  0022E8  2EE8               	decfsz	wreg,f,c
  5540  0022EA  EF6F  F011         	goto	u6405
  5541  0022EE  5162               	movf	(??_floorf+2)& (0+255),w,b
  5542  0022F0  2560               	addwf	??_floorf& (0+255),w,b
  5543  0022F2  6F6A               	movwf	floorf@e& (0+255),b
  5544  0022F4  0E00               	movlw	0
  5545  0022F6  2161               	addwfc	(??_floorf+1)& (0+255),w,b
  5546  0022F8  6F6B               	movwf	(floorf@e+1)& (0+255),b
  5547  0022FA  BF6B               	btfsc	(floorf@e+1)& (0+255),7,b
  5548  0022FC  EF89  F011         	goto	u6411
  5549  002300  516B               	movf	(floorf@e+1)& (0+255),w,b
  5550  002302  E109               	bnz	u6410
  5551  002304  0E17               	movlw	23
  5552  002306  5D6A               	subwf	floorf@e& (0+255),w,b
  5553  002308  A0D8               	btfss	status,0,c
  5554  00230A  EF89  F011         	goto	u6411
  5555  00230E  EF8B  F011         	goto	u6410
  5556  002312                     u6411:
  5557  002312  EF95  F011         	goto	l4963
  5558  002316                     u6410:
  5559  002316                     l4961:
  5560                           
  5561                           ; BSR set to: 0
  5562  002316  C03C  F03C         	movff	floorf@x,?_floorf
  5563  00231A  C03D  F03D         	movff	floorf@x+1,?_floorf+1
  5564  00231E  C03E  F03E         	movff	floorf@x+2,?_floorf+2
  5565  002322  C03F  F03F         	movff	floorf@x+3,?_floorf+3
  5566  002326  EF59  F012         	goto	l1049
  5567  00232A                     l4963:
  5568                           
  5569                           ; BSR set to: 0
  5570  00232A  BF6B               	btfsc	(floorf@e+1)& (0+255),7,b
  5571  00232C  EF9A  F011         	goto	u6421
  5572  002330  EF9C  F011         	goto	u6420
  5573  002334                     u6421:
  5574  002334  EF0D  F012         	goto	l4973
  5575  002338                     u6420:
  5576  002338                     
  5577                           ; BSR set to: 0
  5578  002338  C06A  F060         	movff	floorf@e,??_floorf
  5579  00233C  0EFF               	movlw	255
  5580  00233E  6F61               	movwf	(??_floorf+1)& (0+255),b
  5581  002340  0EFF               	movlw	255
  5582  002342  6F62               	movwf	(??_floorf+2)& (0+255),b
  5583  002344  0E7F               	movlw	127
  5584  002346  6F63               	movwf	(??_floorf+3)& (0+255),b
  5585  002348  0E00               	movlw	0
  5586  00234A  6F64               	movwf	(??_floorf+4)& (0+255),b
  5587  00234C                     u6435:
  5588  00234C  6760               	tstfsz	??_floorf& (0+255),b
  5589  00234E  EFAB  F011         	goto	u6436
  5590  002352  EFB3  F011         	goto	u6437
  5591  002356                     u6436:
  5592  002356  3564               	rlcf	(??_floorf+4)& (0+255),w,b
  5593  002358  3364               	rrcf	(??_floorf+4)& (0+255),f,b
  5594  00235A  3363               	rrcf	(??_floorf+3)& (0+255),f,b
  5595  00235C  3362               	rrcf	(??_floorf+2)& (0+255),f,b
  5596  00235E  3361               	rrcf	(??_floorf+1)& (0+255),f,b
  5597  002360  2F60               	decfsz	??_floorf& (0+255),f,b
  5598  002362  EFA6  F011         	goto	u6435
  5599  002366                     u6437:
  5600  002366  C061  F066         	movff	??_floorf+1,floorf@m
  5601  00236A  C062  F067         	movff	??_floorf+2,floorf@m+1
  5602  00236E  C063  F068         	movff	??_floorf+3,floorf@m+2
  5603  002372  C064  F069         	movff	??_floorf+4,floorf@m+3
  5604  002376  0100               	movlb	0	; () banked
  5605  002378  5166               	movf	floorf@m& (0+255),w,b
  5606  00237A  156C               	andwf	floorf@u& (0+255),w,b
  5607  00237C  6F60               	movwf	??_floorf& (0+255),b
  5608  00237E  5167               	movf	(floorf@m+1)& (0+255),w,b
  5609  002380  156D               	andwf	(floorf@u+1)& (0+255),w,b
  5610  002382  6F61               	movwf	(??_floorf+1)& (0+255),b
  5611  002384  5168               	movf	(floorf@m+2)& (0+255),w,b
  5612  002386  156E               	andwf	(floorf@u+2)& (0+255),w,b
  5613  002388  6F62               	movwf	(??_floorf+2)& (0+255),b
  5614  00238A  5169               	movf	(floorf@m+3)& (0+255),w,b
  5615  00238C  156F               	andwf	(floorf@u+3)& (0+255),w,b
  5616  00238E  6F63               	movwf	(??_floorf+3)& (0+255),b
  5617  002390  5160               	movf	??_floorf& (0+255),w,b
  5618  002392  1161               	iorwf	(??_floorf+1)& (0+255),w,b
  5619  002394  1162               	iorwf	(??_floorf+2)& (0+255),w,b
  5620  002396  1163               	iorwf	(??_floorf+3)& (0+255),w,b
  5621  002398  A4D8               	btfss	status,2,c
  5622  00239A  EFD1  F011         	goto	u6441
  5623  00239E  EFD3  F011         	goto	u6440
  5624  0023A2                     u6441:
  5625  0023A2  EFD5  F011         	goto	l4969
  5626  0023A6                     u6440:
  5627  0023A6  EF8B  F011         	goto	l4961
  5628  0023AA                     l4969:
  5629                           
  5630                           ; BSR set to: 0
  5631  0023AA  C06C  F060         	movff	floorf@u,??_floorf
  5632  0023AE  C06D  F061         	movff	floorf@u+1,??_floorf+1
  5633  0023B2  C06E  F062         	movff	floorf@u+2,??_floorf+2
  5634  0023B6  C06F  F063         	movff	floorf@u+3,??_floorf+3
  5635  0023BA  0E20               	movlw	32
  5636  0023BC  EFE5  F011         	goto	u6450
  5637  0023C0                     u6455:
  5638  0023C0  90D8               	bcf	status,0,c
  5639  0023C2  3363               	rrcf	(??_floorf+3)& (0+255),f,b
  5640  0023C4  3362               	rrcf	(??_floorf+2)& (0+255),f,b
  5641  0023C6  3361               	rrcf	(??_floorf+1)& (0+255),f,b
  5642  0023C8  3360               	rrcf	??_floorf& (0+255),f,b
  5643  0023CA                     u6450:
  5644  0023CA  2EE8               	decfsz	wreg,f,c
  5645  0023CC  EFE0  F011         	goto	u6455
  5646  0023D0  5160               	movf	??_floorf& (0+255),w,b
  5647  0023D2  1161               	iorwf	(??_floorf+1)& (0+255),w,b
  5648  0023D4  1162               	iorwf	(??_floorf+2)& (0+255),w,b
  5649  0023D6  1163               	iorwf	(??_floorf+3)& (0+255),w,b
  5650  0023D8  B4D8               	btfsc	status,2,c
  5651  0023DA  EFF1  F011         	goto	u6461
  5652  0023DE  EFF3  F011         	goto	u6460
  5653  0023E2                     u6461:
  5654  0023E2  EFFB  F011         	goto	l1052
  5655  0023E6                     u6460:
  5656  0023E6                     
  5657                           ; BSR set to: 0
  5658  0023E6  5166               	movf	floorf@m& (0+255),w,b
  5659  0023E8  276C               	addwf	floorf@u& (0+255),f,b
  5660  0023EA  5167               	movf	(floorf@m+1)& (0+255),w,b
  5661  0023EC  236D               	addwfc	(floorf@u+1)& (0+255),f,b
  5662  0023EE  5168               	movf	(floorf@m+2)& (0+255),w,b
  5663  0023F0  236E               	addwfc	(floorf@u+2)& (0+255),f,b
  5664  0023F2  5169               	movf	(floorf@m+3)& (0+255),w,b
  5665  0023F4  236F               	addwfc	(floorf@u+3)& (0+255),f,b
  5666  0023F6                     l1052:
  5667                           
  5668                           ; BSR set to: 0
  5669  0023F6  1D66               	comf	floorf@m& (0+255),w,b
  5670  0023F8  6F60               	movwf	??_floorf& (0+255),b
  5671  0023FA  1D67               	comf	(floorf@m+1)& (0+255),w,b
  5672  0023FC  6F61               	movwf	(??_floorf+1)& (0+255),b
  5673  0023FE  1D68               	comf	(floorf@m+2)& (0+255),w,b
  5674  002400  6F62               	movwf	(??_floorf+2)& (0+255),b
  5675  002402  1D69               	comf	(floorf@m+3)& (0+255),w,b
  5676  002404  6F63               	movwf	(??_floorf+3)& (0+255),b
  5677  002406  5160               	movf	??_floorf& (0+255),w,b
  5678  002408  176C               	andwf	floorf@u& (0+255),f,b
  5679  00240A  5161               	movf	(??_floorf+1)& (0+255),w,b
  5680  00240C  176D               	andwf	(floorf@u+1)& (0+255),f,b
  5681  00240E  5162               	movf	(??_floorf+2)& (0+255),w,b
  5682  002410  176E               	andwf	(floorf@u+2)& (0+255),f,b
  5683  002412  5163               	movf	(??_floorf+3)& (0+255),w,b
  5684  002414  176F               	andwf	(floorf@u+3)& (0+255),f,b
  5685  002416  EF51  F012         	goto	l4981
  5686  00241A                     l4973:
  5687                           
  5688                           ; BSR set to: 0
  5689  00241A  C06C  F060         	movff	floorf@u,??_floorf
  5690  00241E  C06D  F061         	movff	floorf@u+1,??_floorf+1
  5691  002422  C06E  F062         	movff	floorf@u+2,??_floorf+2
  5692  002426  C06F  F063         	movff	floorf@u+3,??_floorf+3
  5693  00242A  0E20               	movlw	32
  5694  00242C  EF1D  F012         	goto	u6470
  5695  002430                     u6475:
  5696  002430  90D8               	bcf	status,0,c
  5697  002432  3363               	rrcf	(??_floorf+3)& (0+255),f,b
  5698  002434  3362               	rrcf	(??_floorf+2)& (0+255),f,b
  5699  002436  3361               	rrcf	(??_floorf+1)& (0+255),f,b
  5700  002438  3360               	rrcf	??_floorf& (0+255),f,b
  5701  00243A                     u6470:
  5702  00243A  2EE8               	decfsz	wreg,f,c
  5703  00243C  EF18  F012         	goto	u6475
  5704  002440  5160               	movf	??_floorf& (0+255),w,b
  5705  002442  1161               	iorwf	(??_floorf+1)& (0+255),w,b
  5706  002444  1162               	iorwf	(??_floorf+2)& (0+255),w,b
  5707  002446  1163               	iorwf	(??_floorf+3)& (0+255),w,b
  5708  002448  A4D8               	btfss	status,2,c
  5709  00244A  EF29  F012         	goto	u6481
  5710  00244E  EF2B  F012         	goto	u6480
  5711  002452                     u6481:
  5712  002452  EF35  F012         	goto	l4977
  5713  002456                     u6480:
  5714  002456                     
  5715                           ; BSR set to: 0
  5716  002456  0E00               	movlw	0
  5717  002458  6F6C               	movwf	floorf@u& (0+255),b
  5718  00245A  0E00               	movlw	0
  5719  00245C  6F6D               	movwf	(floorf@u+1)& (0+255),b
  5720  00245E  0E00               	movlw	0
  5721  002460  6F6E               	movwf	(floorf@u+2)& (0+255),b
  5722  002462  0E00               	movlw	0
  5723  002464  6F6F               	movwf	(floorf@u+3)& (0+255),b
  5724  002466  EF51  F012         	goto	l4981
  5725  00246A                     l4977:
  5726                           
  5727                           ; BSR set to: 0
  5728  00246A  90D8               	bcf	status,0,c
  5729  00246C  356C               	rlcf	floorf@u& (0+255),w,b
  5730  00246E  6F60               	movwf	??_floorf& (0+255),b
  5731  002470  356D               	rlcf	(floorf@u+1)& (0+255),w,b
  5732  002472  6F61               	movwf	(??_floorf+1)& (0+255),b
  5733  002474  356E               	rlcf	(floorf@u+2)& (0+255),w,b
  5734  002476  6F62               	movwf	(??_floorf+2)& (0+255),b
  5735  002478  356F               	rlcf	(floorf@u+3)& (0+255),w,b
  5736  00247A  6F63               	movwf	(??_floorf+3)& (0+255),b
  5737  00247C  5160               	movf	??_floorf& (0+255),w,b
  5738  00247E  1161               	iorwf	(??_floorf+1)& (0+255),w,b
  5739  002480  1162               	iorwf	(??_floorf+2)& (0+255),w,b
  5740  002482  1163               	iorwf	(??_floorf+3)& (0+255),w,b
  5741  002484  B4D8               	btfsc	status,2,c
  5742  002486  EF47  F012         	goto	u6491
  5743  00248A  EF49  F012         	goto	u6490
  5744  00248E                     u6491:
  5745  00248E  EF51  F012         	goto	l4981
  5746  002492                     u6490:
  5747  002492                     
  5748                           ; BSR set to: 0
  5749  002492  0E00               	movlw	0
  5750  002494  6F6C               	movwf	floorf@u& (0+255),b
  5751  002496  0E00               	movlw	0
  5752  002498  6F6D               	movwf	(floorf@u+1)& (0+255),b
  5753  00249A  0E80               	movlw	128
  5754  00249C  6F6E               	movwf	(floorf@u+2)& (0+255),b
  5755  00249E  0EBF               	movlw	191
  5756  0024A0  6F6F               	movwf	(floorf@u+3)& (0+255),b
  5757  0024A2                     l4981:
  5758                           
  5759                           ; BSR set to: 0
  5760  0024A2  C06C  F03C         	movff	floorf@u,?_floorf
  5761  0024A6  C06D  F03D         	movff	floorf@u+1,?_floorf+1
  5762  0024AA  C06E  F03E         	movff	floorf@u+2,?_floorf+2
  5763  0024AE  C06F  F03F         	movff	floorf@u+3,?_floorf+3
  5764  0024B2                     l1049:
  5765                           
  5766                           ; BSR set to: 0
  5767  0024B2  0012               	return		;funcret
  5768  0024B4                     __end_of_floorf:
  5769                           	callstack 0
  5770                           
  5771 ;; *************** function ___fpclassifyf *****************
  5772 ;; Defined at:
  5773 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\__fpclassifyf.c"
  5774 ;; Parameters:    Size  Location     Type
  5775 ;;  x               4   14[COMRAM] float 
  5776 ;; Auto vars:     Size  Location     Type
  5777 ;;  u               4   24[COMRAM] struct .
  5778 ;;  e               2   22[COMRAM] int 
  5779 ;; Return value:  Size  Location     Type
  5780 ;;                  2   14[COMRAM] int 
  5781 ;; Registers used:
  5782 ;;		wreg, status,2, status,0
  5783 ;; Tracked objects:
  5784 ;;		On entry : 0/0
  5785 ;;		On exit  : 0/0
  5786 ;;		Unchanged: 0/0
  5787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5788 ;;      Params:         4       0       0       0       0       0       0
  5789 ;;      Locals:         6       0       0       0       0       0       0
  5790 ;;      Temps:          4       0       0       0       0       0       0
  5791 ;;      Totals:        14       0       0       0       0       0       0
  5792 ;;Total ram usage:       14 bytes
  5793 ;; Hardware stack levels used: 1
  5794 ;; Hardware stack levels required when called: 2
  5795 ;; This function calls:
  5796 ;;		Nothing
  5797 ;; This function is called by:
  5798 ;;		_efgtoa
  5799 ;; This function uses a non-reentrant model
  5800 ;;
  5801                           
  5802                           	psect	text15
  5803  002A06                     __ptext15:
  5804                           	callstack 0
  5805  002A06                     ___fpclassifyf:
  5806                           	callstack 24
  5807  002A06  C10A  F019         	movff	___fpclassifyf@F465,___fpclassifyf@u
  5808  002A0A  C10B  F01A         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  5809  002A0E  C10C  F01B         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  5810  002A12  C10D  F01C         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  5811  002A16  C00F  F019         	movff	___fpclassifyf@x,___fpclassifyf@u
  5812  002A1A  C010  F01A         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  5813  002A1E  C011  F01B         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  5814  002A22  C012  F01C         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  5815  002A26  C019  F013         	movff	___fpclassifyf@u,??___fpclassifyf
  5816  002A2A  C01A  F014         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5817  002A2E  C01B  F015         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5818  002A32  C01C  F016         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5819  002A36  0E18               	movlw	24
  5820  002A38  EF23  F015         	goto	u6280
  5821  002A3C                     u6285:
  5822  002A3C  90D8               	bcf	status,0,c
  5823  002A3E  3216               	rrcf	(??___fpclassifyf+3)^0,f,c
  5824  002A40  3215               	rrcf	(??___fpclassifyf+2)^0,f,c
  5825  002A42  3214               	rrcf	(??___fpclassifyf+1)^0,f,c
  5826  002A44  3213               	rrcf	??___fpclassifyf^0,f,c
  5827  002A46                     u6280:
  5828  002A46  2EE8               	decfsz	wreg,f,c
  5829  002A48  EF1E  F015         	goto	u6285
  5830  002A4C  5013               	movf	??___fpclassifyf^0,w,c
  5831  002A4E  6E17               	movwf	___fpclassifyf@e^0,c
  5832  002A50  6A18               	clrf	(___fpclassifyf@e+1)^0,c
  5833  002A52  5017               	movf	___fpclassifyf@e^0,w,c
  5834  002A54  1018               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5835  002A56  A4D8               	btfss	status,2,c
  5836  002A58  EF30  F015         	goto	u6291
  5837  002A5C  EF32  F015         	goto	u6290
  5838  002A60                     u6291:
  5839  002A60  EF52  F015         	goto	l4933
  5840  002A64                     u6290:
  5841  002A64  90D8               	bcf	status,0,c
  5842  002A66  3419               	rlcf	___fpclassifyf@u^0,w,c
  5843  002A68  6E13               	movwf	??___fpclassifyf^0,c
  5844  002A6A  341A               	rlcf	(___fpclassifyf@u+1)^0,w,c
  5845  002A6C  6E14               	movwf	(??___fpclassifyf+1)^0,c
  5846  002A6E  341B               	rlcf	(___fpclassifyf@u+2)^0,w,c
  5847  002A70  6E15               	movwf	(??___fpclassifyf+2)^0,c
  5848  002A72  341C               	rlcf	(___fpclassifyf@u+3)^0,w,c
  5849  002A74  6E16               	movwf	(??___fpclassifyf+3)^0,c
  5850  002A76  5013               	movf	??___fpclassifyf^0,w,c
  5851  002A78  1014               	iorwf	(??___fpclassifyf+1)^0,w,c
  5852  002A7A  1015               	iorwf	(??___fpclassifyf+2)^0,w,c
  5853  002A7C  1016               	iorwf	(??___fpclassifyf+3)^0,w,c
  5854  002A7E  A4D8               	btfss	status,2,c
  5855  002A80  EF44  F015         	goto	u6301
  5856  002A84  EF46  F015         	goto	u6300
  5857  002A88                     u6301:
  5858  002A88  EF4C  F015         	goto	l4929
  5859  002A8C                     u6300:
  5860  002A8C  0E00               	movlw	0
  5861  002A8E  6E10               	movwf	(?___fpclassifyf+1)^0,c
  5862  002A90  0E02               	movlw	2
  5863  002A92  6E0F               	movwf	?___fpclassifyf^0,c
  5864  002A94  EF81  F015         	goto	l1011
  5865  002A98                     l4929:
  5866  002A98  0E00               	movlw	0
  5867  002A9A  6E10               	movwf	(?___fpclassifyf+1)^0,c
  5868  002A9C  0E03               	movlw	3
  5869  002A9E  6E0F               	movwf	?___fpclassifyf^0,c
  5870  002AA0  EF81  F015         	goto	l1011
  5871  002AA4                     l4933:
  5872  002AA4  2817               	incf	___fpclassifyf@e^0,w,c
  5873  002AA6  1018               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5874  002AA8  A4D8               	btfss	status,2,c
  5875  002AAA  EF59  F015         	goto	u6311
  5876  002AAE  EF5B  F015         	goto	u6310
  5877  002AB2                     u6311:
  5878  002AB2  EF7D  F015         	goto	l4939
  5879  002AB6                     u6310:
  5880  002AB6  C019  F013         	movff	___fpclassifyf@u,??___fpclassifyf
  5881  002ABA  C01A  F014         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5882  002ABE  C01B  F015         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5883  002AC2  C01C  F016         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5884  002AC6  0E09               	movlw	9
  5885  002AC8                     u6325:
  5886  002AC8  90D8               	bcf	status,0,c
  5887  002ACA  3613               	rlcf	??___fpclassifyf^0,f,c
  5888  002ACC  3614               	rlcf	(??___fpclassifyf+1)^0,f,c
  5889  002ACE  3615               	rlcf	(??___fpclassifyf+2)^0,f,c
  5890  002AD0  3616               	rlcf	(??___fpclassifyf+3)^0,f,c
  5891  002AD2  2EE8               	decfsz	wreg,f,c
  5892  002AD4  EF64  F015         	goto	u6325
  5893  002AD8  5013               	movf	??___fpclassifyf^0,w,c
  5894  002ADA  1014               	iorwf	(??___fpclassifyf+1)^0,w,c
  5895  002ADC  1015               	iorwf	(??___fpclassifyf+2)^0,w,c
  5896  002ADE  1016               	iorwf	(??___fpclassifyf+3)^0,w,c
  5897  002AE0  B4D8               	btfsc	status,2,c
  5898  002AE2  EF75  F015         	goto	u6331
  5899  002AE6  EF78  F015         	goto	u6330
  5900  002AEA                     u6331:
  5901  002AEA  0E01               	movlw	1
  5902  002AEC  EF79  F015         	goto	u6340
  5903  002AF0                     u6330:
  5904  002AF0  0E00               	movlw	0
  5905  002AF2                     u6340:
  5906  002AF2  6E0F               	movwf	?___fpclassifyf^0,c
  5907  002AF4  6A10               	clrf	(?___fpclassifyf+1)^0,c
  5908  002AF6  EF81  F015         	goto	l1011
  5909  002AFA                     l4939:
  5910  002AFA  0E00               	movlw	0
  5911  002AFC  6E10               	movwf	(?___fpclassifyf+1)^0,c
  5912  002AFE  0E04               	movlw	4
  5913  002B00  6E0F               	movwf	?___fpclassifyf^0,c
  5914  002B02                     l1011:
  5915  002B02  0012               	return		;funcret
  5916  002B04                     __end_of___fpclassifyf:
  5917                           	callstack 0
  5918                           
  5919 ;; *************** function ___flsub *****************
  5920 ;; Defined at:
  5921 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  5922 ;; Parameters:    Size  Location     Type
  5923 ;;  b               4   33[BANK0 ] int 
  5924 ;;  a               4   37[BANK0 ] int 
  5925 ;; Auto vars:     Size  Location     Type
  5926 ;;		None
  5927 ;; Return value:  Size  Location     Type
  5928 ;;                  4   33[BANK0 ] int 
  5929 ;; Registers used:
  5930 ;;		wreg, status,2, status,0, cstack
  5931 ;; Tracked objects:
  5932 ;;		On entry : 0/0
  5933 ;;		On exit  : 0/0
  5934 ;;		Unchanged: 0/0
  5935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5936 ;;      Params:         0       8       0       0       0       0       0
  5937 ;;      Locals:         0       0       0       0       0       0       0
  5938 ;;      Temps:          0       0       0       0       0       0       0
  5939 ;;      Totals:         0       8       0       0       0       0       0
  5940 ;;Total ram usage:        8 bytes
  5941 ;; Hardware stack levels used: 1
  5942 ;; Hardware stack levels required when called: 3
  5943 ;; This function calls:
  5944 ;;		___fladd
  5945 ;; This function is called by:
  5946 ;;		_efgtoa
  5947 ;; This function uses a non-reentrant model
  5948 ;;
  5949                           
  5950                           	psect	text16
  5951  00335C                     __ptext16:
  5952                           	callstack 0
  5953  00335C                     ___flsub:
  5954                           	callstack 23
  5955  00335C  0E00               	movlw	0
  5956  00335E  0100               	movlb	0	; () banked
  5957  003360  1B85               	xorwf	___flsub@a& (0+255),f,b
  5958  003362  0E00               	movlw	0
  5959  003364  1B86               	xorwf	(___flsub@a+1)& (0+255),f,b
  5960  003366  0E00               	movlw	0
  5961  003368  1B87               	xorwf	(___flsub@a+2)& (0+255),f,b
  5962  00336A  0E80               	movlw	128
  5963  00336C  1B88               	xorwf	(___flsub@a+3)& (0+255),f,b
  5964  00336E                     
  5965                           ; BSR set to: 0
  5966  00336E  C081  F071         	movff	___flsub@b,___fladd@b
  5967  003372  C082  F072         	movff	___flsub@b+1,___fladd@b+1
  5968  003376  C083  F073         	movff	___flsub@b+2,___fladd@b+2
  5969  00337A  C084  F074         	movff	___flsub@b+3,___fladd@b+3
  5970  00337E  C085  F075         	movff	___flsub@a,___fladd@a
  5971  003382  C086  F076         	movff	___flsub@a+1,___fladd@a+1
  5972  003386  C087  F077         	movff	___flsub@a+2,___fladd@a+2
  5973  00338A  C088  F078         	movff	___flsub@a+3,___fladd@a+3
  5974  00338E  EC65  F009         	call	___fladd	;wreg free
  5975  003392  C071  F081         	movff	?___fladd,?___flsub
  5976  003396  C072  F082         	movff	?___fladd+1,?___flsub+1
  5977  00339A  C073  F083         	movff	?___fladd+2,?___flsub+2
  5978  00339E  C074  F084         	movff	?___fladd+3,?___flsub+3
  5979  0033A2  0012               	return		;funcret
  5980  0033A4                     __end_of___flsub:
  5981                           	callstack 0
  5982                           
  5983 ;; *************** function ___fladd *****************
  5984 ;; Defined at:
  5985 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  5986 ;; Parameters:    Size  Location     Type
  5987 ;;  b               4   17[BANK0 ] int 
  5988 ;;  a               4   21[BANK0 ] int 
  5989 ;; Auto vars:     Size  Location     Type
  5990 ;;  grs             1   32[BANK0 ] unsigned char 
  5991 ;;  bexp            1   31[BANK0 ] unsigned char 
  5992 ;;  aexp            1   30[BANK0 ] unsigned char 
  5993 ;;  signs           1   29[BANK0 ] unsigned char 
  5994 ;; Return value:  Size  Location     Type
  5995 ;;                  4   17[BANK0 ] unsigned char 
  5996 ;; Registers used:
  5997 ;;		wreg, status,2, status,0
  5998 ;; Tracked objects:
  5999 ;;		On entry : 0/0
  6000 ;;		On exit  : 0/0
  6001 ;;		Unchanged: 0/0
  6002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6003 ;;      Params:         0       8       0       0       0       0       0
  6004 ;;      Locals:         0       4       0       0       0       0       0
  6005 ;;      Temps:          0       4       0       0       0       0       0
  6006 ;;      Totals:         0      16       0       0       0       0       0
  6007 ;;Total ram usage:       16 bytes
  6008 ;; Hardware stack levels used: 1
  6009 ;; Hardware stack levels required when called: 2
  6010 ;; This function calls:
  6011 ;;		Nothing
  6012 ;; This function is called by:
  6013 ;;		_main
  6014 ;;		___flsub
  6015 ;;		_efgtoa
  6016 ;; This function uses a non-reentrant model
  6017 ;;
  6018                           
  6019                           	psect	text17
  6020  0012CA                     __ptext17:
  6021                           	callstack 0
  6022  0012CA                     ___fladd:
  6023                           	callstack 23
  6024  0012CA  0100               	movlb	0	; () banked
  6025  0012CC  5174               	movf	(___fladd@b+3)& (0+255),w,b
  6026  0012CE  0B80               	andlw	128
  6027  0012D0  6F7D               	movwf	___fladd@signs& (0+255),b
  6028  0012D2  5174               	movf	(___fladd@b+3)& (0+255),w,b
  6029  0012D4  2574               	addwf	(___fladd@b+3)& (0+255),w,b
  6030  0012D6  6F7F               	movwf	___fladd@bexp& (0+255),b
  6031  0012D8                     
  6032                           ; BSR set to: 0
  6033  0012D8  AF73               	btfss	(___fladd@b+2)& (0+255),7,b
  6034  0012DA  EF71  F009         	goto	u5111
  6035  0012DE  EF73  F009         	goto	u5110
  6036  0012E2                     u5111:
  6037  0012E2  EF74  F009         	goto	l4231
  6038  0012E6                     u5110:
  6039  0012E6                     
  6040                           ; BSR set to: 0
  6041  0012E6  817F               	bsf	___fladd@bexp& (0+255),0,b
  6042  0012E8                     l4231:
  6043                           
  6044                           ; BSR set to: 0
  6045  0012E8  517F               	movf	___fladd@bexp& (0+255),w,b
  6046  0012EA  B4D8               	btfsc	status,2,c
  6047  0012EC  EF7A  F009         	goto	u5121
  6048  0012F0  EF7C  F009         	goto	u5120
  6049  0012F4                     u5121:
  6050  0012F4  EF91  F009         	goto	l4241
  6051  0012F8                     u5120:
  6052  0012F8                     
  6053                           ; BSR set to: 0
  6054  0012F8  297F               	incf	___fladd@bexp& (0+255),w,b
  6055  0012FA  A4D8               	btfss	status,2,c
  6056  0012FC  EF82  F009         	goto	u5131
  6057  001300  EF84  F009         	goto	u5130
  6058  001304                     u5131:
  6059  001304  EF8C  F009         	goto	l4237
  6060  001308                     u5130:
  6061  001308                     
  6062                           ; BSR set to: 0
  6063  001308  0E00               	movlw	0
  6064  00130A  6F71               	movwf	___fladd@b& (0+255),b
  6065  00130C  0E00               	movlw	0
  6066  00130E  6F72               	movwf	(___fladd@b+1)& (0+255),b
  6067  001310  0E00               	movlw	0
  6068  001312  6F73               	movwf	(___fladd@b+2)& (0+255),b
  6069  001314  0E00               	movlw	0
  6070  001316  6F74               	movwf	(___fladd@b+3)& (0+255),b
  6071  001318                     l4237:
  6072                           
  6073                           ; BSR set to: 0
  6074  001318  8F73               	bsf	(___fladd@b+2)& (0+255),7,b
  6075  00131A                     
  6076                           ; BSR set to: 0
  6077  00131A  0E00               	movlw	0
  6078  00131C  6F74               	movwf	(___fladd@b+3)& (0+255),b
  6079  00131E  EF99  F009         	goto	l4243
  6080  001322                     l4241:
  6081                           
  6082                           ; BSR set to: 0
  6083  001322  0E00               	movlw	0
  6084  001324  6F71               	movwf	___fladd@b& (0+255),b
  6085  001326  0E00               	movlw	0
  6086  001328  6F72               	movwf	(___fladd@b+1)& (0+255),b
  6087  00132A  0E00               	movlw	0
  6088  00132C  6F73               	movwf	(___fladd@b+2)& (0+255),b
  6089  00132E  0E00               	movlw	0
  6090  001330  6F74               	movwf	(___fladd@b+3)& (0+255),b
  6091  001332                     l4243:
  6092                           
  6093                           ; BSR set to: 0
  6094  001332  5178               	movf	(___fladd@a+3)& (0+255),w,b
  6095  001334  0B80               	andlw	128
  6096  001336  6F7E               	movwf	___fladd@aexp& (0+255),b
  6097  001338                     
  6098                           ; BSR set to: 0
  6099  001338  517D               	movf	___fladd@signs& (0+255),w,b
  6100  00133A  197E               	xorwf	___fladd@aexp& (0+255),w,b
  6101  00133C  B4D8               	btfsc	status,2,c
  6102  00133E  EFA3  F009         	goto	u5141
  6103  001342  EFA5  F009         	goto	u5140
  6104  001346                     u5141:
  6105  001346  EFA6  F009         	goto	l4249
  6106  00134A                     u5140:
  6107  00134A                     
  6108                           ; BSR set to: 0
  6109  00134A  8D7D               	bsf	___fladd@signs& (0+255),6,b
  6110  00134C                     l4249:
  6111                           
  6112                           ; BSR set to: 0
  6113  00134C  5178               	movf	(___fladd@a+3)& (0+255),w,b
  6114  00134E  2578               	addwf	(___fladd@a+3)& (0+255),w,b
  6115  001350  6F7E               	movwf	___fladd@aexp& (0+255),b
  6116  001352                     
  6117                           ; BSR set to: 0
  6118  001352  AF77               	btfss	(___fladd@a+2)& (0+255),7,b
  6119  001354  EFAE  F009         	goto	u5151
  6120  001358  EFB0  F009         	goto	u5150
  6121  00135C                     u5151:
  6122  00135C  EFB1  F009         	goto	l4255
  6123  001360                     u5150:
  6124  001360                     
  6125                           ; BSR set to: 0
  6126  001360  817E               	bsf	___fladd@aexp& (0+255),0,b
  6127  001362                     l4255:
  6128                           
  6129                           ; BSR set to: 0
  6130  001362  517E               	movf	___fladd@aexp& (0+255),w,b
  6131  001364  B4D8               	btfsc	status,2,c
  6132  001366  EFB7  F009         	goto	u5161
  6133  00136A  EFB9  F009         	goto	u5160
  6134  00136E                     u5161:
  6135  00136E  EFCE  F009         	goto	l4265
  6136  001372                     u5160:
  6137  001372                     
  6138                           ; BSR set to: 0
  6139  001372  297E               	incf	___fladd@aexp& (0+255),w,b
  6140  001374  A4D8               	btfss	status,2,c
  6141  001376  EFBF  F009         	goto	u5171
  6142  00137A  EFC1  F009         	goto	u5170
  6143  00137E                     u5171:
  6144  00137E  EFC9  F009         	goto	l4261
  6145  001382                     u5170:
  6146  001382                     
  6147                           ; BSR set to: 0
  6148  001382  0E00               	movlw	0
  6149  001384  6F75               	movwf	___fladd@a& (0+255),b
  6150  001386  0E00               	movlw	0
  6151  001388  6F76               	movwf	(___fladd@a+1)& (0+255),b
  6152  00138A  0E00               	movlw	0
  6153  00138C  6F77               	movwf	(___fladd@a+2)& (0+255),b
  6154  00138E  0E00               	movlw	0
  6155  001390  6F78               	movwf	(___fladd@a+3)& (0+255),b
  6156  001392                     l4261:
  6157                           
  6158                           ; BSR set to: 0
  6159  001392  8F77               	bsf	(___fladd@a+2)& (0+255),7,b
  6160  001394                     
  6161                           ; BSR set to: 0
  6162  001394  0E00               	movlw	0
  6163  001396  6F78               	movwf	(___fladd@a+3)& (0+255),b
  6164  001398  EFD6  F009         	goto	l4267
  6165  00139C                     l4265:
  6166                           
  6167                           ; BSR set to: 0
  6168  00139C  0E00               	movlw	0
  6169  00139E  6F75               	movwf	___fladd@a& (0+255),b
  6170  0013A0  0E00               	movlw	0
  6171  0013A2  6F76               	movwf	(___fladd@a+1)& (0+255),b
  6172  0013A4  0E00               	movlw	0
  6173  0013A6  6F77               	movwf	(___fladd@a+2)& (0+255),b
  6174  0013A8  0E00               	movlw	0
  6175  0013AA  6F78               	movwf	(___fladd@a+3)& (0+255),b
  6176  0013AC                     l4267:
  6177                           
  6178                           ; BSR set to: 0
  6179  0013AC  517F               	movf	___fladd@bexp& (0+255),w,b
  6180  0013AE  5D7E               	subwf	___fladd@aexp& (0+255),w,b
  6181  0013B0  B0D8               	btfsc	status,0,c
  6182  0013B2  EFDD  F009         	goto	u5181
  6183  0013B6  EFDF  F009         	goto	u5180
  6184  0013BA                     u5181:
  6185  0013BA  EF06  F00A         	goto	l4303
  6186  0013BE                     u5180:
  6187  0013BE                     
  6188                           ; BSR set to: 0
  6189  0013BE  AD7D               	btfss	___fladd@signs& (0+255),6,b
  6190  0013C0  EFE4  F009         	goto	u5191
  6191  0013C4  EFE6  F009         	goto	u5190
  6192  0013C8                     u5191:
  6193  0013C8  EFE8  F009         	goto	l4273
  6194  0013CC                     u5190:
  6195  0013CC                     
  6196                           ; BSR set to: 0
  6197  0013CC  0E80               	movlw	128
  6198  0013CE  1B7D               	xorwf	___fladd@signs& (0+255),f,b
  6199  0013D0                     l4273:
  6200                           
  6201                           ; BSR set to: 0
  6202  0013D0  C07F  F080         	movff	___fladd@bexp,___fladd@grs
  6203  0013D4                     
  6204                           ; BSR set to: 0
  6205  0013D4  C07E  F07F         	movff	___fladd@aexp,___fladd@bexp
  6206  0013D8                     
  6207                           ; BSR set to: 0
  6208  0013D8  C080  F07E         	movff	___fladd@grs,___fladd@aexp
  6209  0013DC                     
  6210                           ; BSR set to: 0
  6211  0013DC  C071  F080         	movff	___fladd@b,___fladd@grs
  6212  0013E0                     
  6213                           ; BSR set to: 0
  6214  0013E0  C075  F071         	movff	___fladd@a,___fladd@b
  6215  0013E4                     
  6216                           ; BSR set to: 0
  6217  0013E4  C080  F075         	movff	___fladd@grs,___fladd@a
  6218  0013E8                     
  6219                           ; BSR set to: 0
  6220  0013E8  C072  F080         	movff	___fladd@b+1,___fladd@grs
  6221  0013EC                     
  6222                           ; BSR set to: 0
  6223  0013EC  C076  F072         	movff	___fladd@a+1,___fladd@b+1
  6224  0013F0                     
  6225                           ; BSR set to: 0
  6226  0013F0  C080  F076         	movff	___fladd@grs,___fladd@a+1
  6227  0013F4                     
  6228                           ; BSR set to: 0
  6229  0013F4  C073  F080         	movff	___fladd@b+2,___fladd@grs
  6230  0013F8                     
  6231                           ; BSR set to: 0
  6232  0013F8  C077  F073         	movff	___fladd@a+2,___fladd@b+2
  6233  0013FC                     
  6234                           ; BSR set to: 0
  6235  0013FC  C080  F077         	movff	___fladd@grs,___fladd@a+2
  6236  001400                     
  6237                           ; BSR set to: 0
  6238  001400  C074  F080         	movff	___fladd@b+3,___fladd@grs
  6239  001404                     
  6240                           ; BSR set to: 0
  6241  001404  C078  F074         	movff	___fladd@a+3,___fladd@b+3
  6242  001408                     
  6243                           ; BSR set to: 0
  6244  001408  C080  F078         	movff	___fladd@grs,___fladd@a+3
  6245  00140C                     l4303:
  6246                           
  6247                           ; BSR set to: 0
  6248  00140C  0E00               	movlw	0
  6249  00140E  6F80               	movwf	___fladd@grs& (0+255),b
  6250  001410                     
  6251                           ; BSR set to: 0
  6252  001410  517F               	movf	___fladd@bexp& (0+255),w,b
  6253  001412  C07E  F079         	movff	___fladd@aexp,??___fladd
  6254  001416  6B7A               	clrf	(??___fladd+1)& (0+255),b
  6255  001418  5F79               	subwf	??___fladd& (0+255),f,b
  6256  00141A  0E00               	movlw	0
  6257  00141C  5B7A               	subwfb	(??___fladd+1)& (0+255),f,b
  6258  00141E  BF7A               	btfsc	(??___fladd+1)& (0+255),7,b
  6259  001420  EF1B  F00A         	goto	u5201
  6260  001424  517A               	movf	(??___fladd+1)& (0+255),w,b
  6261  001426  E109               	bnz	u5200
  6262  001428  0E1A               	movlw	26
  6263  00142A  5D79               	subwf	??___fladd& (0+255),w,b
  6264  00142C  A0D8               	btfss	status,0,c
  6265  00142E  EF1B  F00A         	goto	u5201
  6266  001432  EF1D  F00A         	goto	u5200
  6267  001436                     u5201:
  6268  001436  EF54  F00A         	goto	l672
  6269  00143A                     u5200:
  6270  00143A                     
  6271                           ; BSR set to: 0
  6272  00143A  5171               	movf	___fladd@b& (0+255),w,b
  6273  00143C  1172               	iorwf	(___fladd@b+1)& (0+255),w,b
  6274  00143E  1173               	iorwf	(___fladd@b+2)& (0+255),w,b
  6275  001440  1174               	iorwf	(___fladd@b+3)& (0+255),w,b
  6276  001442  A4D8               	btfss	status,2,c
  6277  001444  EF26  F00A         	goto	u5211
  6278  001448  EF29  F00A         	goto	u5210
  6279  00144C                     u5211:
  6280  00144C  0E01               	movlw	1
  6281  00144E  EF2A  F00A         	goto	u5220
  6282  001452                     u5210:
  6283  001452  0E00               	movlw	0
  6284  001454                     u5220:
  6285  001454  6F80               	movwf	___fladd@grs& (0+255),b
  6286  001456                     
  6287                           ; BSR set to: 0
  6288  001456  0E00               	movlw	0
  6289  001458  6F71               	movwf	___fladd@b& (0+255),b
  6290  00145A  0E00               	movlw	0
  6291  00145C  6F72               	movwf	(___fladd@b+1)& (0+255),b
  6292  00145E  0E00               	movlw	0
  6293  001460  6F73               	movwf	(___fladd@b+2)& (0+255),b
  6294  001462  0E00               	movlw	0
  6295  001464  6F74               	movwf	(___fladd@b+3)& (0+255),b
  6296  001466                     
  6297                           ; BSR set to: 0
  6298  001466  C07E  F07F         	movff	___fladd@aexp,___fladd@bexp
  6299  00146A  EF5D  F00A         	goto	l671
  6300  00146E                     l673:
  6301                           
  6302                           ; BSR set to: 0
  6303  00146E  A180               	btfss	___fladd@grs& (0+255),0,b
  6304  001470  EF3C  F00A         	goto	u5231
  6305  001474  EF3E  F00A         	goto	u5230
  6306  001478                     u5231:
  6307  001478  EF44  F00A         	goto	l4315
  6308  00147C                     u5230:
  6309  00147C                     
  6310                           ; BSR set to: 0
  6311  00147C  90D8               	bcf	status,0,c
  6312  00147E  3180               	rrcf	___fladd@grs& (0+255),w,b
  6313  001480  0901               	iorlw	1
  6314  001482  6F80               	movwf	___fladd@grs& (0+255),b
  6315  001484  EF46  F00A         	goto	l4317
  6316  001488                     l4315:
  6317                           
  6318                           ; BSR set to: 0
  6319  001488  90D8               	bcf	status,0,c
  6320  00148A  3380               	rrcf	___fladd@grs& (0+255),f,b
  6321  00148C                     l4317:
  6322                           
  6323                           ; BSR set to: 0
  6324  00148C  A171               	btfss	___fladd@b& (0+255),0,b
  6325  00148E  EF4B  F00A         	goto	u5241
  6326  001492  EF4D  F00A         	goto	u5240
  6327  001496                     u5241:
  6328  001496  EF4E  F00A         	goto	l4321
  6329  00149A                     u5240:
  6330  00149A                     
  6331                           ; BSR set to: 0
  6332  00149A  8F80               	bsf	___fladd@grs& (0+255),7,b
  6333  00149C                     l4321:
  6334                           
  6335                           ; BSR set to: 0
  6336  00149C  3574               	rlcf	(___fladd@b+3)& (0+255),w,b
  6337  00149E  3374               	rrcf	(___fladd@b+3)& (0+255),f,b
  6338  0014A0  3373               	rrcf	(___fladd@b+2)& (0+255),f,b
  6339  0014A2  3372               	rrcf	(___fladd@b+1)& (0+255),f,b
  6340  0014A4  3371               	rrcf	___fladd@b& (0+255),f,b
  6341  0014A6                     
  6342                           ; BSR set to: 0
  6343  0014A6  2B7F               	incf	___fladd@bexp& (0+255),f,b
  6344  0014A8                     l672:
  6345                           
  6346                           ; BSR set to: 0
  6347  0014A8  517E               	movf	___fladd@aexp& (0+255),w,b
  6348  0014AA  5D7F               	subwf	___fladd@bexp& (0+255),w,b
  6349  0014AC  A0D8               	btfss	status,0,c
  6350  0014AE  EF5B  F00A         	goto	u5251
  6351  0014B2  EF5D  F00A         	goto	u5250
  6352  0014B6                     u5251:
  6353  0014B6  EF37  F00A         	goto	l673
  6354  0014BA                     u5250:
  6355  0014BA                     l671:
  6356                           
  6357                           ; BSR set to: 0
  6358  0014BA  BD7D               	btfsc	___fladd@signs& (0+255),6,b
  6359  0014BC  EF62  F00A         	goto	u5261
  6360  0014C0  EF64  F00A         	goto	u5260
  6361  0014C4                     u5261:
  6362  0014C4  EFA4  F00A         	goto	l4349
  6363  0014C8                     u5260:
  6364  0014C8                     
  6365                           ; BSR set to: 0
  6366  0014C8  517F               	movf	___fladd@bexp& (0+255),w,b
  6367  0014CA  A4D8               	btfss	status,2,c
  6368  0014CC  EF6A  F00A         	goto	u5271
  6369  0014D0  EF6C  F00A         	goto	u5270
  6370  0014D4                     u5271:
  6371  0014D4  EF76  F00A         	goto	l4331
  6372  0014D8                     u5270:
  6373  0014D8                     
  6374                           ; BSR set to: 0
  6375  0014D8  0E00               	movlw	0
  6376  0014DA  6F71               	movwf	?___fladd& (0+255),b
  6377  0014DC  0E00               	movlw	0
  6378  0014DE  6F72               	movwf	(?___fladd+1)& (0+255),b
  6379  0014E0  0E00               	movlw	0
  6380  0014E2  6F73               	movwf	(?___fladd+2)& (0+255),b
  6381  0014E4  0E00               	movlw	0
  6382  0014E6  6F74               	movwf	(?___fladd+3)& (0+255),b
  6383  0014E8  EFC5  F00B         	goto	l680
  6384  0014EC                     l4331:
  6385                           
  6386                           ; BSR set to: 0
  6387  0014EC  5175               	movf	___fladd@a& (0+255),w,b
  6388  0014EE  2771               	addwf	___fladd@b& (0+255),f,b
  6389  0014F0  5176               	movf	(___fladd@a+1)& (0+255),w,b
  6390  0014F2  2372               	addwfc	(___fladd@b+1)& (0+255),f,b
  6391  0014F4  5177               	movf	(___fladd@a+2)& (0+255),w,b
  6392  0014F6  2373               	addwfc	(___fladd@b+2)& (0+255),f,b
  6393  0014F8  5178               	movf	(___fladd@a+3)& (0+255),w,b
  6394  0014FA  2374               	addwfc	(___fladd@b+3)& (0+255),f,b
  6395  0014FC                     
  6396                           ; BSR set to: 0
  6397  0014FC  A174               	btfss	(___fladd@b+3)& (0+255),0,b
  6398  0014FE  EF83  F00A         	goto	u5281
  6399  001502  EF85  F00A         	goto	u5280
  6400  001506                     u5281:
  6401  001506  EF31  F00B         	goto	l4385
  6402  00150A                     u5280:
  6403  00150A                     
  6404                           ; BSR set to: 0
  6405  00150A  A180               	btfss	___fladd@grs& (0+255),0,b
  6406  00150C  EF8A  F00A         	goto	u5291
  6407  001510  EF8C  F00A         	goto	u5290
  6408  001514                     u5291:
  6409  001514  EF92  F00A         	goto	l4339
  6410  001518                     u5290:
  6411  001518                     
  6412                           ; BSR set to: 0
  6413  001518  90D8               	bcf	status,0,c
  6414  00151A  3180               	rrcf	___fladd@grs& (0+255),w,b
  6415  00151C  0901               	iorlw	1
  6416  00151E  6F80               	movwf	___fladd@grs& (0+255),b
  6417  001520  EF94  F00A         	goto	l4341
  6418  001524                     l4339:
  6419                           
  6420                           ; BSR set to: 0
  6421  001524  90D8               	bcf	status,0,c
  6422  001526  3380               	rrcf	___fladd@grs& (0+255),f,b
  6423  001528                     l4341:
  6424                           
  6425                           ; BSR set to: 0
  6426  001528  A171               	btfss	___fladd@b& (0+255),0,b
  6427  00152A  EF99  F00A         	goto	u5301
  6428  00152E  EF9B  F00A         	goto	u5300
  6429  001532                     u5301:
  6430  001532  EF9C  F00A         	goto	l4345
  6431  001536                     u5300:
  6432  001536                     
  6433                           ; BSR set to: 0
  6434  001536  8F80               	bsf	___fladd@grs& (0+255),7,b
  6435  001538                     l4345:
  6436                           
  6437                           ; BSR set to: 0
  6438  001538  3574               	rlcf	(___fladd@b+3)& (0+255),w,b
  6439  00153A  3374               	rrcf	(___fladd@b+3)& (0+255),f,b
  6440  00153C  3373               	rrcf	(___fladd@b+2)& (0+255),f,b
  6441  00153E  3372               	rrcf	(___fladd@b+1)& (0+255),f,b
  6442  001540  3371               	rrcf	___fladd@b& (0+255),f,b
  6443  001542                     
  6444                           ; BSR set to: 0
  6445  001542  2B7F               	incf	___fladd@bexp& (0+255),f,b
  6446  001544  EF31  F00B         	goto	l4385
  6447  001548                     l4349:
  6448                           
  6449                           ; BSR set to: 0
  6450  001548  5175               	movf	___fladd@a& (0+255),w,b
  6451  00154A  5D71               	subwf	___fladd@b& (0+255),w,b
  6452  00154C  5176               	movf	(___fladd@a+1)& (0+255),w,b
  6453  00154E  5972               	subwfb	(___fladd@b+1)& (0+255),w,b
  6454  001550  5177               	movf	(___fladd@a+2)& (0+255),w,b
  6455  001552  5973               	subwfb	(___fladd@b+2)& (0+255),w,b
  6456  001554  5174               	movf	(___fladd@b+3)& (0+255),w,b
  6457  001556  0A80               	xorlw	128
  6458  001558  6F79               	movwf	??___fladd& (0+255),b
  6459  00155A  5178               	movf	(___fladd@a+3)& (0+255),w,b
  6460  00155C  0A80               	xorlw	128
  6461  00155E  5979               	subwfb	??___fladd& (0+255),w,b
  6462  001560  B0D8               	btfsc	status,0,c
  6463  001562  EFB5  F00A         	goto	u5311
  6464  001566  EFB7  F00A         	goto	u5310
  6465  00156A                     u5311:
  6466  00156A  EFE2  F00A         	goto	l4359
  6467  00156E                     u5310:
  6468  00156E                     
  6469                           ; BSR set to: 0
  6470  00156E  5171               	movf	___fladd@b& (0+255),w,b
  6471  001570  5D75               	subwf	___fladd@a& (0+255),w,b
  6472  001572  6F79               	movwf	??___fladd& (0+255),b
  6473  001574  5172               	movf	(___fladd@b+1)& (0+255),w,b
  6474  001576  5976               	subwfb	(___fladd@a+1)& (0+255),w,b
  6475  001578  6F7A               	movwf	(??___fladd+1)& (0+255),b
  6476  00157A  5173               	movf	(___fladd@b+2)& (0+255),w,b
  6477  00157C  5977               	subwfb	(___fladd@a+2)& (0+255),w,b
  6478  00157E  6F7B               	movwf	(??___fladd+2)& (0+255),b
  6479  001580  5174               	movf	(___fladd@b+3)& (0+255),w,b
  6480  001582  5978               	subwfb	(___fladd@a+3)& (0+255),w,b
  6481  001584  6F7C               	movwf	(??___fladd+3)& (0+255),b
  6482  001586  0EFF               	movlw	255
  6483  001588  2579               	addwf	??___fladd& (0+255),w,b
  6484  00158A  6F71               	movwf	___fladd@b& (0+255),b
  6485  00158C  0EFF               	movlw	255
  6486  00158E  217A               	addwfc	(??___fladd+1)& (0+255),w,b
  6487  001590  6F72               	movwf	(___fladd@b+1)& (0+255),b
  6488  001592  0EFF               	movlw	255
  6489  001594  217B               	addwfc	(??___fladd+2)& (0+255),w,b
  6490  001596  6F73               	movwf	(___fladd@b+2)& (0+255),b
  6491  001598  0EFF               	movlw	255
  6492  00159A  217C               	addwfc	(??___fladd+3)& (0+255),w,b
  6493  00159C  6F74               	movwf	(___fladd@b+3)& (0+255),b
  6494  00159E  0E80               	movlw	128
  6495  0015A0  1B7D               	xorwf	___fladd@signs& (0+255),f,b
  6496  0015A2                     
  6497                           ; BSR set to: 0
  6498  0015A2  6D80               	negf	___fladd@grs& (0+255),b
  6499  0015A4                     
  6500                           ; BSR set to: 0
  6501  0015A4  5180               	movf	___fladd@grs& (0+255),w,b
  6502  0015A6  A4D8               	btfss	status,2,c
  6503  0015A8  EFD8  F00A         	goto	u5321
  6504  0015AC  EFDA  F00A         	goto	u5320
  6505  0015B0                     u5321:
  6506  0015B0  EFEA  F00A         	goto	l688
  6507  0015B4                     u5320:
  6508  0015B4                     
  6509                           ; BSR set to: 0
  6510  0015B4  0E01               	movlw	1
  6511  0015B6  2771               	addwf	___fladd@b& (0+255),f,b
  6512  0015B8  0E00               	movlw	0
  6513  0015BA  2372               	addwfc	(___fladd@b+1)& (0+255),f,b
  6514  0015BC  2373               	addwfc	(___fladd@b+2)& (0+255),f,b
  6515  0015BE  2374               	addwfc	(___fladd@b+3)& (0+255),f,b
  6516  0015C0  EFEA  F00A         	goto	l688
  6517  0015C4                     l4359:
  6518                           
  6519                           ; BSR set to: 0
  6520  0015C4  5175               	movf	___fladd@a& (0+255),w,b
  6521  0015C6  5F71               	subwf	___fladd@b& (0+255),f,b
  6522  0015C8  5176               	movf	(___fladd@a+1)& (0+255),w,b
  6523  0015CA  5B72               	subwfb	(___fladd@b+1)& (0+255),f,b
  6524  0015CC  5177               	movf	(___fladd@a+2)& (0+255),w,b
  6525  0015CE  5B73               	subwfb	(___fladd@b+2)& (0+255),f,b
  6526  0015D0  5178               	movf	(___fladd@a+3)& (0+255),w,b
  6527  0015D2  5B74               	subwfb	(___fladd@b+3)& (0+255),f,b
  6528  0015D4                     l688:
  6529                           
  6530                           ; BSR set to: 0
  6531  0015D4  5171               	movf	___fladd@b& (0+255),w,b
  6532  0015D6  1172               	iorwf	(___fladd@b+1)& (0+255),w,b
  6533  0015D8  1173               	iorwf	(___fladd@b+2)& (0+255),w,b
  6534  0015DA  1174               	iorwf	(___fladd@b+3)& (0+255),w,b
  6535  0015DC  A4D8               	btfss	status,2,c
  6536  0015DE  EFF3  F00A         	goto	u5331
  6537  0015E2  EFF5  F00A         	goto	u5330
  6538  0015E6                     u5331:
  6539  0015E6  EF2A  F00B         	goto	l4383
  6540  0015EA                     u5330:
  6541  0015EA                     
  6542                           ; BSR set to: 0
  6543  0015EA  5180               	movf	___fladd@grs& (0+255),w,b
  6544  0015EC  A4D8               	btfss	status,2,c
  6545  0015EE  EFFB  F00A         	goto	u5341
  6546  0015F2  EFFD  F00A         	goto	u5340
  6547  0015F6                     u5341:
  6548  0015F6  EF2A  F00B         	goto	l4383
  6549  0015FA                     u5340:
  6550  0015FA                     
  6551                           ; BSR set to: 0
  6552  0015FA  0E00               	movlw	0
  6553  0015FC  6F71               	movwf	?___fladd& (0+255),b
  6554  0015FE  0E00               	movlw	0
  6555  001600  6F72               	movwf	(?___fladd+1)& (0+255),b
  6556  001602  0E00               	movlw	0
  6557  001604  6F73               	movwf	(?___fladd+2)& (0+255),b
  6558  001606  0E00               	movlw	0
  6559  001608  6F74               	movwf	(?___fladd+3)& (0+255),b
  6560  00160A  EFC5  F00B         	goto	l680
  6561  00160E                     l4367:
  6562                           
  6563                           ; BSR set to: 0
  6564  00160E  90D8               	bcf	status,0,c
  6565  001610  3771               	rlcf	___fladd@b& (0+255),f,b
  6566  001612  3772               	rlcf	(___fladd@b+1)& (0+255),f,b
  6567  001614  3773               	rlcf	(___fladd@b+2)& (0+255),f,b
  6568  001616  3774               	rlcf	(___fladd@b+3)& (0+255),f,b
  6569  001618                     
  6570                           ; BSR set to: 0
  6571  001618  AF80               	btfss	___fladd@grs& (0+255),7,b
  6572  00161A  EF11  F00B         	goto	u5351
  6573  00161E  EF13  F00B         	goto	u5350
  6574  001622                     u5351:
  6575  001622  EF14  F00B         	goto	l4373
  6576  001626                     u5350:
  6577  001626                     
  6578                           ; BSR set to: 0
  6579  001626  8171               	bsf	___fladd@b& (0+255),0,b
  6580  001628                     l4373:
  6581                           
  6582                           ; BSR set to: 0
  6583  001628  A180               	btfss	___fladd@grs& (0+255),0,b
  6584  00162A  EF19  F00B         	goto	u5361
  6585  00162E  EF1B  F00B         	goto	u5360
  6586  001632                     u5361:
  6587  001632  EF1F  F00B         	goto	l4377
  6588  001636                     u5360:
  6589  001636                     
  6590                           ; BSR set to: 0
  6591  001636  80D8               	bsf	status,0,c
  6592  001638  3780               	rlcf	___fladd@grs& (0+255),f,b
  6593  00163A  EF21  F00B         	goto	l4379
  6594  00163E                     l4377:
  6595                           
  6596                           ; BSR set to: 0
  6597  00163E  90D8               	bcf	status,0,c
  6598  001640  3780               	rlcf	___fladd@grs& (0+255),f,b
  6599  001642                     l4379:
  6600                           
  6601                           ; BSR set to: 0
  6602  001642  517F               	movf	___fladd@bexp& (0+255),w,b
  6603  001644  B4D8               	btfsc	status,2,c
  6604  001646  EF27  F00B         	goto	u5371
  6605  00164A  EF29  F00B         	goto	u5370
  6606  00164E                     u5371:
  6607  00164E  EF2A  F00B         	goto	l4383
  6608  001652                     u5370:
  6609  001652                     
  6610                           ; BSR set to: 0
  6611  001652  077F               	decf	___fladd@bexp& (0+255),f,b
  6612  001654                     l4383:
  6613                           
  6614                           ; BSR set to: 0
  6615  001654  AF73               	btfss	(___fladd@b+2)& (0+255),7,b
  6616  001656  EF2F  F00B         	goto	u5381
  6617  00165A  EF31  F00B         	goto	u5380
  6618  00165E                     u5381:
  6619  00165E  EF07  F00B         	goto	l4367
  6620  001662                     u5380:
  6621  001662                     l4385:
  6622                           
  6623                           ; BSR set to: 0
  6624  001662  0E00               	movlw	0
  6625  001664  6F7E               	movwf	___fladd@aexp& (0+255),b
  6626  001666                     
  6627                           ; BSR set to: 0
  6628  001666  AF80               	btfss	___fladd@grs& (0+255),7,b
  6629  001668  EF38  F00B         	goto	u5391
  6630  00166C  EF3A  F00B         	goto	u5390
  6631  001670                     u5391:
  6632  001670  EF52  F00B         	goto	l697
  6633  001674                     u5390:
  6634  001674                     
  6635                           ; BSR set to: 0
  6636  001674  C080  F079         	movff	___fladd@grs,??___fladd
  6637  001678  0E7F               	movlw	127
  6638  00167A  1779               	andwf	??___fladd& (0+255),f,b
  6639  00167C  B4D8               	btfsc	status,2,c
  6640  00167E  EF43  F00B         	goto	u5401
  6641  001682  EF45  F00B         	goto	u5400
  6642  001686                     u5401:
  6643  001686  EF49  F00B         	goto	l698
  6644  00168A                     u5400:
  6645  00168A                     l4391:
  6646                           
  6647                           ; BSR set to: 0
  6648  00168A  0E01               	movlw	1
  6649  00168C  6F7E               	movwf	___fladd@aexp& (0+255),b
  6650  00168E  EF52  F00B         	goto	l697
  6651  001692                     l698:
  6652                           
  6653                           ; BSR set to: 0
  6654  001692  A171               	btfss	___fladd@b& (0+255),0,b
  6655  001694  EF4E  F00B         	goto	u5411
  6656  001698  EF50  F00B         	goto	u5410
  6657  00169C                     u5411:
  6658  00169C  EF52  F00B         	goto	l697
  6659  0016A0                     u5410:
  6660  0016A0  EF45  F00B         	goto	l4391
  6661  0016A4                     l697:
  6662                           
  6663                           ; BSR set to: 0
  6664  0016A4  517E               	movf	___fladd@aexp& (0+255),w,b
  6665  0016A6  B4D8               	btfsc	status,2,c
  6666  0016A8  EF58  F00B         	goto	u5421
  6667  0016AC  EF5A  F00B         	goto	u5420
  6668  0016B0                     u5421:
  6669  0016B0  EF85  F00B         	goto	l4403
  6670  0016B4                     u5420:
  6671  0016B4                     
  6672                           ; BSR set to: 0
  6673  0016B4  0E01               	movlw	1
  6674  0016B6  2771               	addwf	___fladd@b& (0+255),f,b
  6675  0016B8  0E00               	movlw	0
  6676  0016BA  2372               	addwfc	(___fladd@b+1)& (0+255),f,b
  6677  0016BC  2373               	addwfc	(___fladd@b+2)& (0+255),f,b
  6678  0016BE  2374               	addwfc	(___fladd@b+3)& (0+255),f,b
  6679  0016C0                     
  6680                           ; BSR set to: 0
  6681  0016C0  A174               	btfss	(___fladd@b+3)& (0+255),0,b
  6682  0016C2  EF65  F00B         	goto	u5431
  6683  0016C6  EF67  F00B         	goto	u5430
  6684  0016CA                     u5431:
  6685  0016CA  EF85  F00B         	goto	l4403
  6686  0016CE                     u5430:
  6687  0016CE                     
  6688                           ; BSR set to: 0
  6689  0016CE  C071  F079         	movff	___fladd@b,??___fladd
  6690  0016D2  C072  F07A         	movff	___fladd@b+1,??___fladd+1
  6691  0016D6  C073  F07B         	movff	___fladd@b+2,??___fladd+2
  6692  0016DA  C074  F07C         	movff	___fladd@b+3,??___fladd+3
  6693  0016DE  357C               	rlcf	(??___fladd+3)& (0+255),w,b
  6694  0016E0  337C               	rrcf	(??___fladd+3)& (0+255),f,b
  6695  0016E2  337B               	rrcf	(??___fladd+2)& (0+255),f,b
  6696  0016E4  337A               	rrcf	(??___fladd+1)& (0+255),f,b
  6697  0016E6  3379               	rrcf	??___fladd& (0+255),f,b
  6698  0016E8  C079  F071         	movff	??___fladd,___fladd@b
  6699  0016EC  C07A  F072         	movff	??___fladd+1,___fladd@b+1
  6700  0016F0  C07B  F073         	movff	??___fladd+2,___fladd@b+2
  6701  0016F4  C07C  F074         	movff	??___fladd+3,___fladd@b+3
  6702  0016F8  297F               	incf	___fladd@bexp& (0+255),w,b
  6703  0016FA  B4D8               	btfsc	status,2,c
  6704  0016FC  EF82  F00B         	goto	u5441
  6705  001700  EF84  F00B         	goto	u5440
  6706  001704                     u5441:
  6707  001704  EF85  F00B         	goto	l4403
  6708  001708                     u5440:
  6709  001708                     
  6710                           ; BSR set to: 0
  6711  001708  2B7F               	incf	___fladd@bexp& (0+255),f,b
  6712  00170A                     l4403:
  6713                           
  6714                           ; BSR set to: 0
  6715  00170A  297F               	incf	___fladd@bexp& (0+255),w,b
  6716  00170C  B4D8               	btfsc	status,2,c
  6717  00170E  EF8B  F00B         	goto	u5451
  6718  001712  EF8D  F00B         	goto	u5450
  6719  001716                     u5451:
  6720  001716  EF95  F00B         	goto	l4407
  6721  00171A                     u5450:
  6722  00171A                     
  6723                           ; BSR set to: 0
  6724  00171A  517F               	movf	___fladd@bexp& (0+255),w,b
  6725  00171C  A4D8               	btfss	status,2,c
  6726  00171E  EF93  F00B         	goto	u5461
  6727  001722  EF95  F00B         	goto	u5460
  6728  001726                     u5461:
  6729  001726  EFA7  F00B         	goto	l4411
  6730  00172A                     u5460:
  6731  00172A                     l4407:
  6732                           
  6733                           ; BSR set to: 0
  6734  00172A  0E00               	movlw	0
  6735  00172C  6F71               	movwf	___fladd@b& (0+255),b
  6736  00172E  0E00               	movlw	0
  6737  001730  6F72               	movwf	(___fladd@b+1)& (0+255),b
  6738  001732  0E00               	movlw	0
  6739  001734  6F73               	movwf	(___fladd@b+2)& (0+255),b
  6740  001736  0E00               	movlw	0
  6741  001738  6F74               	movwf	(___fladd@b+3)& (0+255),b
  6742  00173A  517F               	movf	___fladd@bexp& (0+255),w,b
  6743  00173C  A4D8               	btfss	status,2,c
  6744  00173E  EFA3  F00B         	goto	u5471
  6745  001742  EFA5  F00B         	goto	u5470
  6746  001746                     u5471:
  6747  001746  EFA7  F00B         	goto	l4411
  6748  00174A                     u5470:
  6749  00174A                     
  6750                           ; BSR set to: 0
  6751  00174A  0E00               	movlw	0
  6752  00174C  6F7D               	movwf	___fladd@signs& (0+255),b
  6753  00174E                     l4411:
  6754                           
  6755                           ; BSR set to: 0
  6756  00174E  A17F               	btfss	___fladd@bexp& (0+255),0,b
  6757  001750  EFAC  F00B         	goto	u5481
  6758  001754  EFAE  F00B         	goto	u5480
  6759  001758                     u5481:
  6760  001758  EFB1  F00B         	goto	l4415
  6761  00175C                     u5480:
  6762  00175C                     
  6763                           ; BSR set to: 0
  6764  00175C  8F73               	bsf	(___fladd@b+2)& (0+255),7,b
  6765  00175E  EFB2  F00B         	goto	l4417
  6766  001762                     l4415:
  6767                           
  6768                           ; BSR set to: 0
  6769  001762  9F73               	bcf	(___fladd@b+2)& (0+255),7,b
  6770  001764                     l4417:
  6771                           
  6772                           ; BSR set to: 0
  6773  001764  90D8               	bcf	status,0,c
  6774  001766  317F               	rrcf	___fladd@bexp& (0+255),w,b
  6775  001768  6F74               	movwf	(___fladd@b+3)& (0+255),b
  6776  00176A                     
  6777                           ; BSR set to: 0
  6778  00176A  AF7D               	btfss	___fladd@signs& (0+255),7,b
  6779  00176C  EFBA  F00B         	goto	u5491
  6780  001770  EFBC  F00B         	goto	u5490
  6781  001774                     u5491:
  6782  001774  EFBD  F00B         	goto	l4423
  6783  001778                     u5490:
  6784  001778                     
  6785                           ; BSR set to: 0
  6786  001778  8F74               	bsf	(___fladd@b+3)& (0+255),7,b
  6787  00177A                     l4423:
  6788                           
  6789                           ; BSR set to: 0
  6790  00177A  C071  F071         	movff	___fladd@b,?___fladd
  6791  00177E  C072  F072         	movff	___fladd@b+1,?___fladd+1
  6792  001782  C073  F073         	movff	___fladd@b+2,?___fladd+2
  6793  001786  C074  F074         	movff	___fladd@b+3,?___fladd+3
  6794  00178A                     l680:
  6795                           
  6796                           ; BSR set to: 0
  6797  00178A  0012               	return		;funcret
  6798  00178C                     __end_of___fladd:
  6799                           	callstack 0
  6800                           
  6801 ;; *************** function ___flneg *****************
  6802 ;; Defined at:
  6803 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flneg.c"
  6804 ;; Parameters:    Size  Location     Type
  6805 ;;  f1              4   14[COMRAM] unsigned char 
  6806 ;; Auto vars:     Size  Location     Type
  6807 ;;		None
  6808 ;; Return value:  Size  Location     Type
  6809 ;;                  4   14[COMRAM] unsigned char 
  6810 ;; Registers used:
  6811 ;;		wreg, status,2, status,0
  6812 ;; Tracked objects:
  6813 ;;		On entry : 0/0
  6814 ;;		On exit  : 0/0
  6815 ;;		Unchanged: 0/0
  6816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6817 ;;      Params:         4       0       0       0       0       0       0
  6818 ;;      Locals:         0       0       0       0       0       0       0
  6819 ;;      Temps:          0       0       0       0       0       0       0
  6820 ;;      Totals:         4       0       0       0       0       0       0
  6821 ;;Total ram usage:        4 bytes
  6822 ;; Hardware stack levels used: 1
  6823 ;; Hardware stack levels required when called: 2
  6824 ;; This function calls:
  6825 ;;		Nothing
  6826 ;; This function is called by:
  6827 ;;		_efgtoa
  6828 ;; This function uses a non-reentrant model
  6829 ;;
  6830                           
  6831                           	psect	text18
  6832  00345A                     __ptext18:
  6833                           	callstack 0
  6834  00345A                     ___flneg:
  6835                           	callstack 24
  6836  00345A  500F               	movf	___flneg@f1^0,w,c
  6837  00345C  1010               	iorwf	(___flneg@f1+1)^0,w,c
  6838  00345E  1011               	iorwf	(___flneg@f1+2)^0,w,c
  6839  003460  1012               	iorwf	(___flneg@f1+3)^0,w,c
  6840  003462  B4D8               	btfsc	status,2,c
  6841  003464  EF36  F01A         	goto	u6161
  6842  003468  EF38  F01A         	goto	u6160
  6843  00346C                     u6161:
  6844  00346C  EF40  F01A         	goto	l4851
  6845  003470                     u6160:
  6846  003470  0E00               	movlw	0
  6847  003472  1A0F               	xorwf	___flneg@f1^0,f,c
  6848  003474  0E00               	movlw	0
  6849  003476  1A10               	xorwf	(___flneg@f1+1)^0,f,c
  6850  003478  0E00               	movlw	0
  6851  00347A  1A11               	xorwf	(___flneg@f1+2)^0,f,c
  6852  00347C  0E80               	movlw	128
  6853  00347E  1A12               	xorwf	(___flneg@f1+3)^0,f,c
  6854  003480                     l4851:
  6855  003480  C00F  F00F         	movff	___flneg@f1,?___flneg
  6856  003484  C010  F010         	movff	___flneg@f1+1,?___flneg+1
  6857  003488  C011  F011         	movff	___flneg@f1+2,?___flneg+2
  6858  00348C  C012  F012         	movff	___flneg@f1+3,?___flneg+3
  6859  003490  0012               	return		;funcret
  6860  003492                     __end_of___flneg:
  6861                           	callstack 0
  6862                           
  6863 ;; *************** function ___flge *****************
  6864 ;; Defined at:
  6865 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flge.c"
  6866 ;; Parameters:    Size  Location     Type
  6867 ;;  ff1             4   17[BANK0 ] unsigned char 
  6868 ;;  ff2             4   21[BANK0 ] unsigned char 
  6869 ;; Auto vars:     Size  Location     Type
  6870 ;;		None
  6871 ;; Return value:  Size  Location     Type
  6872 ;;		None               void
  6873 ;; Registers used:
  6874 ;;		wreg, status,2, status,0
  6875 ;; Tracked objects:
  6876 ;;		On entry : 0/0
  6877 ;;		On exit  : 0/0
  6878 ;;		Unchanged: 0/0
  6879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6880 ;;      Params:         0       8       0       0       0       0       0
  6881 ;;      Locals:         0       0       0       0       0       0       0
  6882 ;;      Temps:          0       4       0       0       0       0       0
  6883 ;;      Totals:         0      12       0       0       0       0       0
  6884 ;;Total ram usage:       12 bytes
  6885 ;; Hardware stack levels used: 1
  6886 ;; Hardware stack levels required when called: 2
  6887 ;; This function calls:
  6888 ;;		Nothing
  6889 ;; This function is called by:
  6890 ;;		_efgtoa
  6891 ;; This function uses a non-reentrant model
  6892 ;;
  6893                           
  6894                           	psect	text19
  6895  002900                     __ptext19:
  6896                           	callstack 0
  6897  002900                     ___flge:
  6898                           	callstack 24
  6899  002900  0E00               	movlw	0
  6900  002902  0100               	movlb	0	; () banked
  6901  002904  1571               	andwf	___flge@ff1& (0+255),w,b
  6902  002906  6F79               	movwf	??___flge& (0+255),b
  6903  002908  0E00               	movlw	0
  6904  00290A  1572               	andwf	(___flge@ff1+1)& (0+255),w,b
  6905  00290C  6F7A               	movwf	(??___flge+1)& (0+255),b
  6906  00290E  0E80               	movlw	128
  6907  002910  1573               	andwf	(___flge@ff1+2)& (0+255),w,b
  6908  002912  6F7B               	movwf	(??___flge+2)& (0+255),b
  6909  002914  0E7F               	movlw	127
  6910  002916  1574               	andwf	(___flge@ff1+3)& (0+255),w,b
  6911  002918  6F7C               	movwf	(??___flge+3)& (0+255),b
  6912  00291A  5179               	movf	??___flge& (0+255),w,b
  6913  00291C  117A               	iorwf	(??___flge+1)& (0+255),w,b
  6914  00291E  117B               	iorwf	(??___flge+2)& (0+255),w,b
  6915  002920  117C               	iorwf	(??___flge+3)& (0+255),w,b
  6916  002922  A4D8               	btfss	status,2,c
  6917  002924  EF96  F014         	goto	u6111
  6918  002928  EF98  F014         	goto	u6110
  6919  00292C                     u6111:
  6920  00292C  EFA0  F014         	goto	l4829
  6921  002930                     u6110:
  6922  002930                     
  6923                           ; BSR set to: 0
  6924  002930  0E00               	movlw	0
  6925  002932  6F71               	movwf	___flge@ff1& (0+255),b
  6926  002934  0E00               	movlw	0
  6927  002936  6F72               	movwf	(___flge@ff1+1)& (0+255),b
  6928  002938  0E00               	movlw	0
  6929  00293A  6F73               	movwf	(___flge@ff1+2)& (0+255),b
  6930  00293C  0E00               	movlw	0
  6931  00293E  6F74               	movwf	(___flge@ff1+3)& (0+255),b
  6932  002940                     l4829:
  6933                           
  6934                           ; BSR set to: 0
  6935  002940  0E00               	movlw	0
  6936  002942  1575               	andwf	___flge@ff2& (0+255),w,b
  6937  002944  6F79               	movwf	??___flge& (0+255),b
  6938  002946  0E00               	movlw	0
  6939  002948  1576               	andwf	(___flge@ff2+1)& (0+255),w,b
  6940  00294A  6F7A               	movwf	(??___flge+1)& (0+255),b
  6941  00294C  0E80               	movlw	128
  6942  00294E  1577               	andwf	(___flge@ff2+2)& (0+255),w,b
  6943  002950  6F7B               	movwf	(??___flge+2)& (0+255),b
  6944  002952  0E7F               	movlw	127
  6945  002954  1578               	andwf	(___flge@ff2+3)& (0+255),w,b
  6946  002956  6F7C               	movwf	(??___flge+3)& (0+255),b
  6947  002958  5179               	movf	??___flge& (0+255),w,b
  6948  00295A  117A               	iorwf	(??___flge+1)& (0+255),w,b
  6949  00295C  117B               	iorwf	(??___flge+2)& (0+255),w,b
  6950  00295E  117C               	iorwf	(??___flge+3)& (0+255),w,b
  6951  002960  A4D8               	btfss	status,2,c
  6952  002962  EFB5  F014         	goto	u6121
  6953  002966  EFB7  F014         	goto	u6120
  6954  00296A                     u6121:
  6955  00296A  EFBF  F014         	goto	l4833
  6956  00296E                     u6120:
  6957  00296E                     
  6958                           ; BSR set to: 0
  6959  00296E  0E00               	movlw	0
  6960  002970  6F75               	movwf	___flge@ff2& (0+255),b
  6961  002972  0E00               	movlw	0
  6962  002974  6F76               	movwf	(___flge@ff2+1)& (0+255),b
  6963  002976  0E00               	movlw	0
  6964  002978  6F77               	movwf	(___flge@ff2+2)& (0+255),b
  6965  00297A  0E00               	movlw	0
  6966  00297C  6F78               	movwf	(___flge@ff2+3)& (0+255),b
  6967  00297E                     l4833:
  6968                           
  6969                           ; BSR set to: 0
  6970  00297E  AF74               	btfss	(___flge@ff1+3)& (0+255),7,b
  6971  002980  EFC4  F014         	goto	u6131
  6972  002984  EFC6  F014         	goto	u6130
  6973  002988                     u6131:
  6974  002988  EFCF  F014         	goto	l4837
  6975  00298C                     u6130:
  6976  00298C                     
  6977                           ; BSR set to: 0
  6978  00298C  6D71               	negf	___flge@ff1& (0+255),b
  6979  00298E  1F72               	comf	(___flge@ff1+1)& (0+255),f,b
  6980  002990  B0D8               	btfsc	status,0,c
  6981  002992  2B72               	incf	(___flge@ff1+1)& (0+255),f,b
  6982  002994  1F73               	comf	(___flge@ff1+2)& (0+255),f,b
  6983  002996  B0D8               	btfsc	status,0,c
  6984  002998  2B73               	incf	(___flge@ff1+2)& (0+255),f,b
  6985  00299A  0E80               	movlw	128
  6986  00299C  5774               	subfwb	(___flge@ff1+3)& (0+255),f,b
  6987  00299E                     l4837:
  6988                           
  6989                           ; BSR set to: 0
  6990  00299E  AF78               	btfss	(___flge@ff2+3)& (0+255),7,b
  6991  0029A0  EFD4  F014         	goto	u6141
  6992  0029A4  EFD6  F014         	goto	u6140
  6993  0029A8                     u6141:
  6994  0029A8  EFDF  F014         	goto	l408
  6995  0029AC                     u6140:
  6996  0029AC                     
  6997                           ; BSR set to: 0
  6998  0029AC  6D75               	negf	___flge@ff2& (0+255),b
  6999  0029AE  1F76               	comf	(___flge@ff2+1)& (0+255),f,b
  7000  0029B0  B0D8               	btfsc	status,0,c
  7001  0029B2  2B76               	incf	(___flge@ff2+1)& (0+255),f,b
  7002  0029B4  1F77               	comf	(___flge@ff2+2)& (0+255),f,b
  7003  0029B6  B0D8               	btfsc	status,0,c
  7004  0029B8  2B77               	incf	(___flge@ff2+2)& (0+255),f,b
  7005  0029BA  0E80               	movlw	128
  7006  0029BC  5778               	subfwb	(___flge@ff2+3)& (0+255),f,b
  7007  0029BE                     l408:
  7008                           
  7009                           ; BSR set to: 0
  7010  0029BE  0E00               	movlw	0
  7011  0029C0  1B71               	xorwf	___flge@ff1& (0+255),f,b
  7012  0029C2  0E00               	movlw	0
  7013  0029C4  1B72               	xorwf	(___flge@ff1+1)& (0+255),f,b
  7014  0029C6  0E00               	movlw	0
  7015  0029C8  1B73               	xorwf	(___flge@ff1+2)& (0+255),f,b
  7016  0029CA  0E80               	movlw	128
  7017  0029CC  1B74               	xorwf	(___flge@ff1+3)& (0+255),f,b
  7018  0029CE  0E00               	movlw	0
  7019  0029D0  1B75               	xorwf	___flge@ff2& (0+255),f,b
  7020  0029D2  0E00               	movlw	0
  7021  0029D4  1B76               	xorwf	(___flge@ff2+1)& (0+255),f,b
  7022  0029D6  0E00               	movlw	0
  7023  0029D8  1B77               	xorwf	(___flge@ff2+2)& (0+255),f,b
  7024  0029DA  0E80               	movlw	128
  7025  0029DC  1B78               	xorwf	(___flge@ff2+3)& (0+255),f,b
  7026  0029DE  5175               	movf	___flge@ff2& (0+255),w,b
  7027  0029E0  5D71               	subwf	___flge@ff1& (0+255),w,b
  7028  0029E2  5176               	movf	(___flge@ff2+1)& (0+255),w,b
  7029  0029E4  5972               	subwfb	(___flge@ff1+1)& (0+255),w,b
  7030  0029E6  5177               	movf	(___flge@ff2+2)& (0+255),w,b
  7031  0029E8  5973               	subwfb	(___flge@ff1+2)& (0+255),w,b
  7032  0029EA  5178               	movf	(___flge@ff2+3)& (0+255),w,b
  7033  0029EC  5974               	subwfb	(___flge@ff1+3)& (0+255),w,b
  7034  0029EE  B0D8               	btfsc	status,0,c
  7035  0029F0  EFFC  F014         	goto	u6151
  7036  0029F4  EFFE  F014         	goto	u6150
  7037  0029F8                     u6151:
  7038  0029F8  EF01  F015         	goto	l4843
  7039  0029FC                     u6150:
  7040  0029FC                     
  7041                           ; BSR set to: 0
  7042  0029FC  90D8               	bcf	status,0,c
  7043  0029FE  EF02  F015         	goto	l413
  7044  002A02                     l4843:
  7045                           
  7046                           ; BSR set to: 0
  7047  002A02  80D8               	bsf	status,0,c
  7048  002A04                     l413:
  7049                           
  7050                           ; BSR set to: 0
  7051  002A04  0012               	return		;funcret
  7052  002A06                     __end_of___flge:
  7053                           	callstack 0
  7054                           
  7055 ;; *************** function ___fleq *****************
  7056 ;; Defined at:
  7057 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fleq.c"
  7058 ;; Parameters:    Size  Location     Type
  7059 ;;  ff1             4   14[COMRAM] unsigned char 
  7060 ;;  ff2             4   18[COMRAM] unsigned char 
  7061 ;; Auto vars:     Size  Location     Type
  7062 ;;		None
  7063 ;; Return value:  Size  Location     Type
  7064 ;;		None               void
  7065 ;; Registers used:
  7066 ;;		wreg, status,2, status,0
  7067 ;; Tracked objects:
  7068 ;;		On entry : 0/0
  7069 ;;		On exit  : 0/0
  7070 ;;		Unchanged: 0/0
  7071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7072 ;;      Params:         8       0       0       0       0       0       0
  7073 ;;      Locals:         0       0       0       0       0       0       0
  7074 ;;      Temps:          4       0       0       0       0       0       0
  7075 ;;      Totals:        12       0       0       0       0       0       0
  7076 ;;Total ram usage:       12 bytes
  7077 ;; Hardware stack levels used: 1
  7078 ;; Hardware stack levels required when called: 2
  7079 ;; This function calls:
  7080 ;;		Nothing
  7081 ;; This function is called by:
  7082 ;;		_efgtoa
  7083 ;; This function uses a non-reentrant model
  7084 ;;
  7085                           
  7086                           	psect	text20
  7087  002F8A                     __ptext20:
  7088                           	callstack 0
  7089  002F8A                     ___fleq:
  7090                           	callstack 24
  7091  002F8A  0E00               	movlw	0
  7092  002F8C  140F               	andwf	___fleq@ff1^0,w,c
  7093  002F8E  6E17               	movwf	??___fleq^0,c
  7094  002F90  0E00               	movlw	0
  7095  002F92  1410               	andwf	(___fleq@ff1+1)^0,w,c
  7096  002F94  6E18               	movwf	(??___fleq+1)^0,c
  7097  002F96  0E80               	movlw	128
  7098  002F98  1411               	andwf	(___fleq@ff1+2)^0,w,c
  7099  002F9A  6E19               	movwf	(??___fleq+2)^0,c
  7100  002F9C  0E7F               	movlw	127
  7101  002F9E  1412               	andwf	(___fleq@ff1+3)^0,w,c
  7102  002FA0  6E1A               	movwf	(??___fleq+3)^0,c
  7103  002FA2  5017               	movf	??___fleq^0,w,c
  7104  002FA4  1018               	iorwf	(??___fleq+1)^0,w,c
  7105  002FA6  1019               	iorwf	(??___fleq+2)^0,w,c
  7106  002FA8  101A               	iorwf	(??___fleq+3)^0,w,c
  7107  002FAA  A4D8               	btfss	status,2,c
  7108  002FAC  EFDA  F017         	goto	u6081
  7109  002FB0  EFDC  F017         	goto	u6080
  7110  002FB4                     u6081:
  7111  002FB4  EFE4  F017         	goto	l4813
  7112  002FB8                     u6080:
  7113  002FB8  0E00               	movlw	0
  7114  002FBA  6E0F               	movwf	___fleq@ff1^0,c
  7115  002FBC  0E00               	movlw	0
  7116  002FBE  6E10               	movwf	(___fleq@ff1+1)^0,c
  7117  002FC0  0E00               	movlw	0
  7118  002FC2  6E11               	movwf	(___fleq@ff1+2)^0,c
  7119  002FC4  0E00               	movlw	0
  7120  002FC6  6E12               	movwf	(___fleq@ff1+3)^0,c
  7121  002FC8                     l4813:
  7122  002FC8  0E00               	movlw	0
  7123  002FCA  1413               	andwf	___fleq@ff2^0,w,c
  7124  002FCC  6E17               	movwf	??___fleq^0,c
  7125  002FCE  0E00               	movlw	0
  7126  002FD0  1414               	andwf	(___fleq@ff2+1)^0,w,c
  7127  002FD2  6E18               	movwf	(??___fleq+1)^0,c
  7128  002FD4  0E80               	movlw	128
  7129  002FD6  1415               	andwf	(___fleq@ff2+2)^0,w,c
  7130  002FD8  6E19               	movwf	(??___fleq+2)^0,c
  7131  002FDA  0E7F               	movlw	127
  7132  002FDC  1416               	andwf	(___fleq@ff2+3)^0,w,c
  7133  002FDE  6E1A               	movwf	(??___fleq+3)^0,c
  7134  002FE0  5017               	movf	??___fleq^0,w,c
  7135  002FE2  1018               	iorwf	(??___fleq+1)^0,w,c
  7136  002FE4  1019               	iorwf	(??___fleq+2)^0,w,c
  7137  002FE6  101A               	iorwf	(??___fleq+3)^0,w,c
  7138  002FE8  A4D8               	btfss	status,2,c
  7139  002FEA  EFF9  F017         	goto	u6091
  7140  002FEE  EFFB  F017         	goto	u6090
  7141  002FF2                     u6091:
  7142  002FF2  EF03  F018         	goto	l4817
  7143  002FF6                     u6090:
  7144  002FF6  0E00               	movlw	0
  7145  002FF8  6E13               	movwf	___fleq@ff2^0,c
  7146  002FFA  0E00               	movlw	0
  7147  002FFC  6E14               	movwf	(___fleq@ff2+1)^0,c
  7148  002FFE  0E00               	movlw	0
  7149  003000  6E15               	movwf	(___fleq@ff2+2)^0,c
  7150  003002  0E00               	movlw	0
  7151  003004  6E16               	movwf	(___fleq@ff2+3)^0,c
  7152  003006                     l4817:
  7153  003006  5013               	movf	___fleq@ff2^0,w,c
  7154  003008  180F               	xorwf	___fleq@ff1^0,w,c
  7155  00300A  E10F               	bnz	u6100
  7156  00300C  5014               	movf	(___fleq@ff2+1)^0,w,c
  7157  00300E  1810               	xorwf	(___fleq@ff1+1)^0,w,c
  7158  003010  E10C               	bnz	u6100
  7159  003012  5015               	movf	(___fleq@ff2+2)^0,w,c
  7160  003014  1811               	xorwf	(___fleq@ff1+2)^0,w,c
  7161  003016  E109               	bnz	u6100
  7162  003018  5016               	movf	(___fleq@ff2+3)^0,w,c
  7163  00301A  1812               	xorwf	(___fleq@ff1+3)^0,w,c
  7164  00301C  B4D8               	btfsc	status,2,c
  7165  00301E  EF13  F018         	goto	u6101
  7166  003022  EF15  F018         	goto	u6100
  7167  003026                     u6101:
  7168  003026  EF18  F018         	goto	l4821
  7169  00302A                     u6100:
  7170  00302A  90D8               	bcf	status,0,c
  7171  00302C  EF19  F018         	goto	l402
  7172  003030                     l4821:
  7173  003030  80D8               	bsf	status,0,c
  7174  003032                     l402:
  7175  003032  0012               	return		;funcret
  7176  003034                     __end_of___fleq:
  7177                           	callstack 0
  7178                           
  7179 ;; *************** function ___awmod *****************
  7180 ;; Defined at:
  7181 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
  7182 ;; Parameters:    Size  Location     Type
  7183 ;;  dividend        2   14[COMRAM] int 
  7184 ;;  divisor         2   16[COMRAM] int 
  7185 ;; Auto vars:     Size  Location     Type
  7186 ;;  sign            1   19[COMRAM] unsigned char 
  7187 ;;  counter         1   18[COMRAM] unsigned char 
  7188 ;; Return value:  Size  Location     Type
  7189 ;;                  2   14[COMRAM] int 
  7190 ;; Registers used:
  7191 ;;		wreg, status,2, status,0
  7192 ;; Tracked objects:
  7193 ;;		On entry : 0/0
  7194 ;;		On exit  : 0/0
  7195 ;;		Unchanged: 0/0
  7196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7197 ;;      Params:         4       0       0       0       0       0       0
  7198 ;;      Locals:         2       0       0       0       0       0       0
  7199 ;;      Temps:          0       0       0       0       0       0       0
  7200 ;;      Totals:         6       0       0       0       0       0       0
  7201 ;;Total ram usage:        6 bytes
  7202 ;; Hardware stack levels used: 1
  7203 ;; Hardware stack levels required when called: 2
  7204 ;; This function calls:
  7205 ;;		Nothing
  7206 ;; This function is called by:
  7207 ;;		_efgtoa
  7208 ;; This function uses a non-reentrant model
  7209 ;;
  7210                           
  7211                           	psect	text21
  7212  002E2A                     __ptext21:
  7213                           	callstack 0
  7214  002E2A                     ___awmod:
  7215                           	callstack 24
  7216  002E2A  0E00               	movlw	0
  7217  002E2C  6E14               	movwf	___awmod@sign^0,c
  7218  002E2E  BE10               	btfsc	(___awmod@dividend+1)^0,7,c
  7219  002E30  EF1E  F017         	goto	u6020
  7220  002E34  EF1C  F017         	goto	u6021
  7221  002E38                     u6021:
  7222  002E38  EF24  F017         	goto	l4781
  7223  002E3C                     u6020:
  7224  002E3C  6C0F               	negf	___awmod@dividend^0,c
  7225  002E3E  1E10               	comf	(___awmod@dividend+1)^0,f,c
  7226  002E40  B0D8               	btfsc	status,0,c
  7227  002E42  2A10               	incf	(___awmod@dividend+1)^0,f,c
  7228  002E44  0E01               	movlw	1
  7229  002E46  6E14               	movwf	___awmod@sign^0,c
  7230  002E48                     l4781:
  7231  002E48  BE12               	btfsc	(___awmod@divisor+1)^0,7,c
  7232  002E4A  EF2B  F017         	goto	u6030
  7233  002E4E  EF29  F017         	goto	u6031
  7234  002E52                     u6031:
  7235  002E52  EF2F  F017         	goto	l4785
  7236  002E56                     u6030:
  7237  002E56  6C11               	negf	___awmod@divisor^0,c
  7238  002E58  1E12               	comf	(___awmod@divisor+1)^0,f,c
  7239  002E5A  B0D8               	btfsc	status,0,c
  7240  002E5C  2A12               	incf	(___awmod@divisor+1)^0,f,c
  7241  002E5E                     l4785:
  7242  002E5E  5011               	movf	___awmod@divisor^0,w,c
  7243  002E60  1012               	iorwf	(___awmod@divisor+1)^0,w,c
  7244  002E62  B4D8               	btfsc	status,2,c
  7245  002E64  EF36  F017         	goto	u6041
  7246  002E68  EF38  F017         	goto	u6040
  7247  002E6C                     u6041:
  7248  002E6C  EF5C  F017         	goto	l4801
  7249  002E70                     u6040:
  7250  002E70  0E01               	movlw	1
  7251  002E72  6E13               	movwf	___awmod@counter^0,c
  7252  002E74  EF40  F017         	goto	l4791
  7253  002E78                     l4789:
  7254  002E78  90D8               	bcf	status,0,c
  7255  002E7A  3611               	rlcf	___awmod@divisor^0,f,c
  7256  002E7C  3612               	rlcf	(___awmod@divisor+1)^0,f,c
  7257  002E7E  2A13               	incf	___awmod@counter^0,f,c
  7258  002E80                     l4791:
  7259  002E80  AE12               	btfss	(___awmod@divisor+1)^0,7,c
  7260  002E82  EF45  F017         	goto	u6051
  7261  002E86  EF47  F017         	goto	u6050
  7262  002E8A                     u6051:
  7263  002E8A  EF3C  F017         	goto	l4789
  7264  002E8E                     u6050:
  7265  002E8E                     l4793:
  7266  002E8E  5011               	movf	___awmod@divisor^0,w,c
  7267  002E90  5C0F               	subwf	___awmod@dividend^0,w,c
  7268  002E92  5012               	movf	(___awmod@divisor+1)^0,w,c
  7269  002E94  5810               	subwfb	(___awmod@dividend+1)^0,w,c
  7270  002E96  A0D8               	btfss	status,0,c
  7271  002E98  EF50  F017         	goto	u6061
  7272  002E9C  EF52  F017         	goto	u6060
  7273  002EA0                     u6061:
  7274  002EA0  EF56  F017         	goto	l4797
  7275  002EA4                     u6060:
  7276  002EA4  5011               	movf	___awmod@divisor^0,w,c
  7277  002EA6  5E0F               	subwf	___awmod@dividend^0,f,c
  7278  002EA8  5012               	movf	(___awmod@divisor+1)^0,w,c
  7279  002EAA  5A10               	subwfb	(___awmod@dividend+1)^0,f,c
  7280  002EAC                     l4797:
  7281  002EAC  90D8               	bcf	status,0,c
  7282  002EAE  3212               	rrcf	(___awmod@divisor+1)^0,f,c
  7283  002EB0  3211               	rrcf	___awmod@divisor^0,f,c
  7284  002EB2  2E13               	decfsz	___awmod@counter^0,f,c
  7285  002EB4  EF47  F017         	goto	l4793
  7286  002EB8                     l4801:
  7287  002EB8  5014               	movf	___awmod@sign^0,w,c
  7288  002EBA  B4D8               	btfsc	status,2,c
  7289  002EBC  EF62  F017         	goto	u6071
  7290  002EC0  EF64  F017         	goto	u6070
  7291  002EC4                     u6071:
  7292  002EC4  EF68  F017         	goto	l4805
  7293  002EC8                     u6070:
  7294  002EC8  6C0F               	negf	___awmod@dividend^0,c
  7295  002ECA  1E10               	comf	(___awmod@dividend+1)^0,f,c
  7296  002ECC  B0D8               	btfsc	status,0,c
  7297  002ECE  2A10               	incf	(___awmod@dividend+1)^0,f,c
  7298  002ED0                     l4805:
  7299  002ED0  C00F  F00F         	movff	___awmod@dividend,?___awmod
  7300  002ED4  C010  F010         	movff	___awmod@dividend+1,?___awmod+1
  7301  002ED8  0012               	return		;funcret
  7302  002EDA                     __end_of___awmod:
  7303                           	callstack 0
  7304                           
  7305 ;; *************** function ___awdiv *****************
  7306 ;; Defined at:
  7307 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
  7308 ;; Parameters:    Size  Location     Type
  7309 ;;  dividend        2   14[COMRAM] int 
  7310 ;;  divisor         2   16[COMRAM] int 
  7311 ;; Auto vars:     Size  Location     Type
  7312 ;;  quotient        2   20[COMRAM] int 
  7313 ;;  sign            1   19[COMRAM] unsigned char 
  7314 ;;  counter         1   18[COMRAM] unsigned char 
  7315 ;; Return value:  Size  Location     Type
  7316 ;;                  2   14[COMRAM] int 
  7317 ;; Registers used:
  7318 ;;		wreg, status,2, status,0
  7319 ;; Tracked objects:
  7320 ;;		On entry : 0/0
  7321 ;;		On exit  : 0/0
  7322 ;;		Unchanged: 0/0
  7323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7324 ;;      Params:         4       0       0       0       0       0       0
  7325 ;;      Locals:         4       0       0       0       0       0       0
  7326 ;;      Temps:          0       0       0       0       0       0       0
  7327 ;;      Totals:         8       0       0       0       0       0       0
  7328 ;;Total ram usage:        8 bytes
  7329 ;; Hardware stack levels used: 1
  7330 ;; Hardware stack levels required when called: 2
  7331 ;; This function calls:
  7332 ;;		Nothing
  7333 ;; This function is called by:
  7334 ;;		_efgtoa
  7335 ;; This function uses a non-reentrant model
  7336 ;;
  7337                           
  7338                           	psect	text22
  7339  002CA4                     __ptext22:
  7340                           	callstack 0
  7341  002CA4                     ___awdiv:
  7342                           	callstack 24
  7343  002CA4  0E00               	movlw	0
  7344  002CA6  6E14               	movwf	___awdiv@sign^0,c
  7345  002CA8  BE12               	btfsc	(___awdiv@divisor+1)^0,7,c
  7346  002CAA  EF5B  F016         	goto	u5960
  7347  002CAE  EF59  F016         	goto	u5961
  7348  002CB2                     u5961:
  7349  002CB2  EF61  F016         	goto	l4737
  7350  002CB6                     u5960:
  7351  002CB6  6C11               	negf	___awdiv@divisor^0,c
  7352  002CB8  1E12               	comf	(___awdiv@divisor+1)^0,f,c
  7353  002CBA  B0D8               	btfsc	status,0,c
  7354  002CBC  2A12               	incf	(___awdiv@divisor+1)^0,f,c
  7355  002CBE  0E01               	movlw	1
  7356  002CC0  6E14               	movwf	___awdiv@sign^0,c
  7357  002CC2                     l4737:
  7358  002CC2  BE10               	btfsc	(___awdiv@dividend+1)^0,7,c
  7359  002CC4  EF68  F016         	goto	u5970
  7360  002CC8  EF66  F016         	goto	u5971
  7361  002CCC                     u5971:
  7362  002CCC  EF6E  F016         	goto	l4743
  7363  002CD0                     u5970:
  7364  002CD0  6C0F               	negf	___awdiv@dividend^0,c
  7365  002CD2  1E10               	comf	(___awdiv@dividend+1)^0,f,c
  7366  002CD4  B0D8               	btfsc	status,0,c
  7367  002CD6  2A10               	incf	(___awdiv@dividend+1)^0,f,c
  7368  002CD8  0E01               	movlw	1
  7369  002CDA  1A14               	xorwf	___awdiv@sign^0,f,c
  7370  002CDC                     l4743:
  7371  002CDC  0E00               	movlw	0
  7372  002CDE  6E16               	movwf	(___awdiv@quotient+1)^0,c
  7373  002CE0  0E00               	movlw	0
  7374  002CE2  6E15               	movwf	___awdiv@quotient^0,c
  7375  002CE4  5011               	movf	___awdiv@divisor^0,w,c
  7376  002CE6  1012               	iorwf	(___awdiv@divisor+1)^0,w,c
  7377  002CE8  B4D8               	btfsc	status,2,c
  7378  002CEA  EF79  F016         	goto	u5981
  7379  002CEE  EF7B  F016         	goto	u5980
  7380  002CF2                     u5981:
  7381  002CF2  EFA3  F016         	goto	l4765
  7382  002CF6                     u5980:
  7383  002CF6  0E01               	movlw	1
  7384  002CF8  6E13               	movwf	___awdiv@counter^0,c
  7385  002CFA  EF83  F016         	goto	l4751
  7386  002CFE                     l4749:
  7387  002CFE  90D8               	bcf	status,0,c
  7388  002D00  3611               	rlcf	___awdiv@divisor^0,f,c
  7389  002D02  3612               	rlcf	(___awdiv@divisor+1)^0,f,c
  7390  002D04  2A13               	incf	___awdiv@counter^0,f,c
  7391  002D06                     l4751:
  7392  002D06  AE12               	btfss	(___awdiv@divisor+1)^0,7,c
  7393  002D08  EF88  F016         	goto	u5991
  7394  002D0C  EF8A  F016         	goto	u5990
  7395  002D10                     u5991:
  7396  002D10  EF7F  F016         	goto	l4749
  7397  002D14                     u5990:
  7398  002D14                     l4753:
  7399  002D14  90D8               	bcf	status,0,c
  7400  002D16  3615               	rlcf	___awdiv@quotient^0,f,c
  7401  002D18  3616               	rlcf	(___awdiv@quotient+1)^0,f,c
  7402  002D1A  5011               	movf	___awdiv@divisor^0,w,c
  7403  002D1C  5C0F               	subwf	___awdiv@dividend^0,w,c
  7404  002D1E  5012               	movf	(___awdiv@divisor+1)^0,w,c
  7405  002D20  5810               	subwfb	(___awdiv@dividend+1)^0,w,c
  7406  002D22  A0D8               	btfss	status,0,c
  7407  002D24  EF96  F016         	goto	u6001
  7408  002D28  EF98  F016         	goto	u6000
  7409  002D2C                     u6001:
  7410  002D2C  EF9D  F016         	goto	l4761
  7411  002D30                     u6000:
  7412  002D30  5011               	movf	___awdiv@divisor^0,w,c
  7413  002D32  5E0F               	subwf	___awdiv@dividend^0,f,c
  7414  002D34  5012               	movf	(___awdiv@divisor+1)^0,w,c
  7415  002D36  5A10               	subwfb	(___awdiv@dividend+1)^0,f,c
  7416  002D38  8015               	bsf	___awdiv@quotient^0,0,c
  7417  002D3A                     l4761:
  7418  002D3A  90D8               	bcf	status,0,c
  7419  002D3C  3212               	rrcf	(___awdiv@divisor+1)^0,f,c
  7420  002D3E  3211               	rrcf	___awdiv@divisor^0,f,c
  7421  002D40  2E13               	decfsz	___awdiv@counter^0,f,c
  7422  002D42  EF8A  F016         	goto	l4753
  7423  002D46                     l4765:
  7424  002D46  5014               	movf	___awdiv@sign^0,w,c
  7425  002D48  B4D8               	btfsc	status,2,c
  7426  002D4A  EFA9  F016         	goto	u6011
  7427  002D4E  EFAB  F016         	goto	u6010
  7428  002D52                     u6011:
  7429  002D52  EFAF  F016         	goto	l4769
  7430  002D56                     u6010:
  7431  002D56  6C15               	negf	___awdiv@quotient^0,c
  7432  002D58  1E16               	comf	(___awdiv@quotient+1)^0,f,c
  7433  002D5A  B0D8               	btfsc	status,0,c
  7434  002D5C  2A16               	incf	(___awdiv@quotient+1)^0,f,c
  7435  002D5E                     l4769:
  7436  002D5E  C015  F00F         	movff	___awdiv@quotient,?___awdiv
  7437  002D62  C016  F010         	movff	___awdiv@quotient+1,?___awdiv+1
  7438  002D66  0012               	return		;funcret
  7439  002D68                     __end_of___awdiv:
  7440                           	callstack 0
  7441                           
  7442 ;; *************** function _atoi *****************
  7443 ;; Defined at:
  7444 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\atoi.c"
  7445 ;; Parameters:    Size  Location     Type
  7446 ;;  s               2   21[COMRAM] PTR const unsigned char 
  7447 ;;		 -> STR_4(14), STR_3(15), STR_2(18), 
  7448 ;; Auto vars:     Size  Location     Type
  7449 ;;  n               2   34[COMRAM] int 
  7450 ;;  neg             2   27[COMRAM] int 
  7451 ;; Return value:  Size  Location     Type
  7452 ;;                  2   21[COMRAM] int 
  7453 ;; Registers used:
  7454 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7455 ;; Tracked objects:
  7456 ;;		On entry : 0/0
  7457 ;;		On exit  : 0/0
  7458 ;;		Unchanged: 0/0
  7459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7460 ;;      Params:         2       0       0       0       0       0       0
  7461 ;;      Locals:         9       0       0       0       0       0       0
  7462 ;;      Temps:          4       0       0       0       0       0       0
  7463 ;;      Totals:        15       0       0       0       0       0       0
  7464 ;;Total ram usage:       15 bytes
  7465 ;; Hardware stack levels used: 1
  7466 ;; Hardware stack levels required when called: 3
  7467 ;; This function calls:
  7468 ;;		___wmul
  7469 ;;		_isdigit
  7470 ;;		_isspace
  7471 ;; This function is called by:
  7472 ;;		_vfpfcnvrt
  7473 ;; This function uses a non-reentrant model
  7474 ;;
  7475                           
  7476                           	psect	text23
  7477  002668                     __ptext23:
  7478                           	callstack 0
  7479  002668                     _atoi:
  7480                           	callstack 24
  7481  002668  0E00               	movlw	0
  7482  00266A  6E24               	movwf	(atoi@n+1)^0,c
  7483  00266C  0E00               	movlw	0
  7484  00266E  6E23               	movwf	atoi@n^0,c
  7485  002670  0E00               	movlw	0
  7486  002672  6E1D               	movwf	(atoi@neg+1)^0,c
  7487  002674  0E00               	movlw	0
  7488  002676  6E1C               	movwf	atoi@neg^0,c
  7489  002678  EF40  F013         	goto	l5313
  7490  00267C                     l5311:
  7491  00267C  4A16               	infsnz	atoi@s^0,f,c
  7492  00267E  2A17               	incf	(atoi@s+1)^0,f,c
  7493  002680                     l5313:
  7494  002680  0E01               	movlw	1
  7495  002682  6E22               	movwf	_atoi$946^0,c
  7496  002684  C016  FFF6         	movff	atoi@s,tblptrl
  7497  002688  C017  FFF7         	movff	atoi@s+1,tblptrh
  7498  00268C                     	if	0	;tblptru may be non-zero
  7499  00268C                     	endif
  7500  00268C                     	if	0	;tblptru may be non-zero
  7501  00268C                     	endif
  7502  00268C  0008               	tblrd		*
  7503  00268E  50F5               	movf	tablat,w,c
  7504  002690  0A20               	xorlw	32
  7505  002692  B4D8               	btfsc	status,2,c
  7506  002694  EF4E  F013         	goto	u7081
  7507  002698  EF50  F013         	goto	u7080
  7508  00269C                     u7081:
  7509  00269C  EF6D  F013         	goto	l5321
  7510  0026A0                     u7080:
  7511  0026A0  0EF7               	movlw	247
  7512  0026A2  6E18               	movwf	??_atoi^0,c
  7513  0026A4  0EFF               	movlw	255
  7514  0026A6  6E19               	movwf	(??_atoi+1)^0,c
  7515  0026A8  C016  FFF6         	movff	atoi@s,tblptrl
  7516  0026AC  C017  FFF7         	movff	atoi@s+1,tblptrh
  7517  0026B0                     	if	0	;tblptru may be non-zero
  7518  0026B0                     	endif
  7519  0026B0                     	if	0	;tblptru may be non-zero
  7520  0026B0                     	endif
  7521  0026B0  0008               	tblrd		*
  7522  0026B2  50F5               	movf	tablat,w,c
  7523  0026B4  6E1A               	movwf	(??_atoi+2)^0,c
  7524  0026B6  6A1B               	clrf	(??_atoi+3)^0,c
  7525  0026B8  5018               	movf	??_atoi^0,w,c
  7526  0026BA  261A               	addwf	(??_atoi+2)^0,f,c
  7527  0026BC  5019               	movf	(??_atoi+1)^0,w,c
  7528  0026BE  221B               	addwfc	(??_atoi+3)^0,f,c
  7529  0026C0  501B               	movf	(??_atoi+3)^0,w,c
  7530  0026C2  E109               	bnz	u7090
  7531  0026C4  0E05               	movlw	5
  7532  0026C6  5C1A               	subwf	(??_atoi+2)^0,w,c
  7533  0026C8  A0D8               	btfss	status,0,c
  7534  0026CA  EF69  F013         	goto	u7091
  7535  0026CE  EF6B  F013         	goto	u7090
  7536  0026D2                     u7091:
  7537  0026D2  EF6D  F013         	goto	l5321
  7538  0026D6                     u7090:
  7539  0026D6  0E00               	movlw	0
  7540  0026D8  6E22               	movwf	_atoi$946^0,c
  7541  0026DA                     l5321:
  7542  0026DA  C022  F01E         	movff	_atoi$946,_atoi$945
  7543  0026DE  6A1F               	clrf	(_atoi$945+1)^0,c
  7544  0026E0  501E               	movf	_atoi$945^0,w,c
  7545  0026E2  101F               	iorwf	(_atoi$945+1)^0,w,c
  7546  0026E4  A4D8               	btfss	status,2,c
  7547  0026E6  EF77  F013         	goto	u7101
  7548  0026EA  EF79  F013         	goto	u7100
  7549  0026EE                     u7101:
  7550  0026EE  EF3E  F013         	goto	l5311
  7551  0026F2                     u7100:
  7552  0026F2  EF83  F013         	goto	l5331
  7553  0026F6                     l5327:
  7554  0026F6  0E00               	movlw	0
  7555  0026F8  6E1D               	movwf	(atoi@neg+1)^0,c
  7556  0026FA  0E01               	movlw	1
  7557  0026FC  6E1C               	movwf	atoi@neg^0,c
  7558  0026FE                     l5329:
  7559  0026FE  4A16               	infsnz	atoi@s^0,f,c
  7560  002700  2A17               	incf	(atoi@s+1)^0,f,c
  7561  002702  EFB8  F013         	goto	l5337
  7562  002706                     l5331:
  7563  002706  C016  FFF6         	movff	atoi@s,tblptrl
  7564  00270A  C017  FFF7         	movff	atoi@s+1,tblptrh
  7565  00270E                     	if	0	;tblptru may be non-zero
  7566  00270E                     	endif
  7567  00270E                     	if	0	;tblptru may be non-zero
  7568  00270E                     	endif
  7569  00270E  0008               	tblrd		*
  7570  002710  50F5               	movf	tablat,w,c
  7571  002712  6E18               	movwf	??_atoi^0,c
  7572  002714  6A19               	clrf	(??_atoi+1)^0,c
  7573                           
  7574                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7575                           ; Switch size 1, requested type "simple"
  7576                           ; Number of cases is 1, Range of values is 0 to 0
  7577                           ; switch strategies available:
  7578                           ; Name         Instructions Cycles
  7579                           ; simple_byte            4     3 (average)
  7580                           ;	Chosen strategy is simple_byte
  7581  002716  5019               	movf	(??_atoi+1)^0,w,c
  7582  002718  0A00               	xorlw	0	; case 0
  7583  00271A  B4D8               	btfsc	status,2,c
  7584  00271C  EF92  F013         	goto	l5591
  7585  002720  EFB8  F013         	goto	l5337
  7586  002724                     l5591:
  7587                           
  7588                           ; Switch size 1, requested type "simple"
  7589                           ; Number of cases is 2, Range of values is 43 to 45
  7590                           ; switch strategies available:
  7591                           ; Name         Instructions Cycles
  7592                           ; simple_byte            7     4 (average)
  7593                           ;	Chosen strategy is simple_byte
  7594  002724  5018               	movf	??_atoi^0,w,c
  7595  002726  0A2B               	xorlw	43	; case 43
  7596  002728  B4D8               	btfsc	status,2,c
  7597  00272A  EF7F  F013         	goto	l5329
  7598  00272E  0A06               	xorlw	6	; case 45
  7599  002730  B4D8               	btfsc	status,2,c
  7600  002732  EF7B  F013         	goto	l5327
  7601  002736  EFB8  F013         	goto	l5337
  7602  00273A                     l5333:
  7603  00273A  C023  F00F         	movff	atoi@n,___wmul@multiplier
  7604  00273E  C024  F010         	movff	atoi@n+1,___wmul@multiplier+1
  7605  002742  0E00               	movlw	0
  7606  002744  6E12               	movwf	(___wmul@multiplicand+1)^0,c
  7607  002746  0E0A               	movlw	10
  7608  002748  6E11               	movwf	___wmul@multiplicand^0,c
  7609  00274A  EC80  F01A         	call	___wmul	;wreg free
  7610  00274E  C016  FFF6         	movff	atoi@s,tblptrl
  7611  002752  C017  FFF7         	movff	atoi@s+1,tblptrh
  7612  002756                     	if	0	;tblptru may be non-zero
  7613  002756                     	endif
  7614  002756                     	if	0	;tblptru may be non-zero
  7615  002756                     	endif
  7616  002756  0008               	tblrd		*
  7617  002758  50F5               	movf	tablat,w,c
  7618  00275A  5E0F               	subwf	?___wmul^0,f,c
  7619  00275C  0E00               	movlw	0
  7620  00275E  5A10               	subwfb	(?___wmul+1)^0,f,c
  7621  002760  0E30               	movlw	48
  7622  002762  240F               	addwf	?___wmul^0,w,c
  7623  002764  6E23               	movwf	atoi@n^0,c
  7624  002766  0E00               	movlw	0
  7625  002768  2010               	addwfc	(?___wmul+1)^0,w,c
  7626  00276A  6E24               	movwf	(atoi@n+1)^0,c
  7627  00276C  EF7F  F013         	goto	l5329
  7628  002770                     l5337:
  7629  002770  0ED0               	movlw	208
  7630  002772  6E18               	movwf	??_atoi^0,c
  7631  002774  0EFF               	movlw	255
  7632  002776  6E19               	movwf	(??_atoi+1)^0,c
  7633  002778  C016  FFF6         	movff	atoi@s,tblptrl
  7634  00277C  C017  FFF7         	movff	atoi@s+1,tblptrh
  7635  002780                     	if	0	;tblptru may be non-zero
  7636  002780                     	endif
  7637  002780                     	if	0	;tblptru may be non-zero
  7638  002780                     	endif
  7639  002780  0008               	tblrd		*
  7640  002782  50F5               	movf	tablat,w,c
  7641  002784  6E1A               	movwf	(??_atoi+2)^0,c
  7642  002786  6A1B               	clrf	(??_atoi+3)^0,c
  7643  002788  5018               	movf	??_atoi^0,w,c
  7644  00278A  261A               	addwf	(??_atoi+2)^0,f,c
  7645  00278C  5019               	movf	(??_atoi+1)^0,w,c
  7646  00278E  221B               	addwfc	(??_atoi+3)^0,f,c
  7647  002790  501B               	movf	(??_atoi+3)^0,w,c
  7648  002792  E10A               	bnz	u7110
  7649  002794  0E0A               	movlw	10
  7650  002796  5C1A               	subwf	(??_atoi+2)^0,w,c
  7651  002798  A0D8               	btfss	status,0,c
  7652  00279A  EFD1  F013         	goto	u7111
  7653  00279E  EFD4  F013         	goto	u7110
  7654  0027A2                     u7111:
  7655  0027A2  0E01               	movlw	1
  7656  0027A4  EFD5  F013         	goto	u7120
  7657  0027A8                     u7110:
  7658  0027A8  0E00               	movlw	0
  7659  0027AA                     u7120:
  7660  0027AA  6E20               	movwf	_atoi$947^0,c
  7661  0027AC  6A21               	clrf	(_atoi$947+1)^0,c
  7662  0027AE  5020               	movf	_atoi$947^0,w,c
  7663  0027B0  1021               	iorwf	(_atoi$947+1)^0,w,c
  7664  0027B2  A4D8               	btfss	status,2,c
  7665  0027B4  EFDE  F013         	goto	u7131
  7666  0027B8  EFE0  F013         	goto	u7130
  7667  0027BC                     u7131:
  7668  0027BC  EF9D  F013         	goto	l5333
  7669  0027C0                     u7130:
  7670  0027C0  501C               	movf	atoi@neg^0,w,c
  7671  0027C2  101D               	iorwf	(atoi@neg+1)^0,w,c
  7672  0027C4  A4D8               	btfss	status,2,c
  7673  0027C6  EFE7  F013         	goto	u7141
  7674  0027CA  EFE9  F013         	goto	u7140
  7675  0027CE                     u7141:
  7676  0027CE  EFF7  F013         	goto	l1040
  7677  0027D2                     u7140:
  7678  0027D2  C023  F018         	movff	atoi@n,??_atoi
  7679  0027D6  C024  F019         	movff	atoi@n+1,??_atoi+1
  7680  0027DA  1E18               	comf	??_atoi^0,f,c
  7681  0027DC  1E19               	comf	(??_atoi+1)^0,f,c
  7682  0027DE  4A18               	infsnz	??_atoi^0,f,c
  7683  0027E0  2A19               	incf	(??_atoi+1)^0,f,c
  7684  0027E2  C018  F016         	movff	??_atoi,?_atoi
  7685  0027E6  C019  F017         	movff	??_atoi+1,?_atoi+1
  7686  0027EA  EFFB  F013         	goto	l1043
  7687  0027EE                     l1040:
  7688  0027EE  C023  F016         	movff	atoi@n,?_atoi
  7689  0027F2  C024  F017         	movff	atoi@n+1,?_atoi+1
  7690  0027F6                     l1043:
  7691  0027F6  0012               	return		;funcret
  7692  0027F8                     __end_of_atoi:
  7693                           	callstack 0
  7694                           
  7695 ;; *************** function _isspace *****************
  7696 ;; Defined at:
  7697 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isspace.c"
  7698 ;; Parameters:    Size  Location     Type
  7699 ;;  c               2   14[COMRAM] int 
  7700 ;; Auto vars:     Size  Location     Type
  7701 ;;		None
  7702 ;; Return value:  Size  Location     Type
  7703 ;;                  2   14[COMRAM] int 
  7704 ;; Registers used:
  7705 ;;		wreg, status,2, status,0
  7706 ;; Tracked objects:
  7707 ;;		On entry : 0/0
  7708 ;;		On exit  : 0/0
  7709 ;;		Unchanged: 0/0
  7710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7711 ;;      Params:         2       0       0       0       0       0       0
  7712 ;;      Locals:         1       0       0       0       0       0       0
  7713 ;;      Temps:          4       0       0       0       0       0       0
  7714 ;;      Totals:         7       0       0       0       0       0       0
  7715 ;;Total ram usage:        7 bytes
  7716 ;; Hardware stack levels used: 1
  7717 ;; Hardware stack levels required when called: 2
  7718 ;; This function calls:
  7719 ;;		Nothing
  7720 ;; This function is called by:
  7721 ;;		_atoi
  7722 ;; This function uses a non-reentrant model
  7723 ;;
  7724                           
  7725                           	psect	text24
  7726  00330A                     __ptext24:
  7727                           	callstack 0
  7728  00330A                     _isspace:
  7729                           	callstack 24
  7730  00330A  0E01               	movlw	1
  7731  00330C  6E15               	movwf	_isspace$976^0,c
  7732  00330E  0E20               	movlw	32
  7733  003310  180F               	xorwf	isspace@c^0,w,c
  7734  003312  1010               	iorwf	(isspace@c+1)^0,w,c
  7735  003314  B4D8               	btfsc	status,2,c
  7736  003316  EF8F  F019         	goto	u6521
  7737  00331A  EF91  F019         	goto	u6520
  7738  00331E                     u6521:
  7739  00331E  EFAA  F019         	goto	l4997
  7740  003322                     u6520:
  7741  003322  0EF7               	movlw	247
  7742  003324  6E11               	movwf	??_isspace^0,c
  7743  003326  0EFF               	movlw	255
  7744  003328  6E12               	movwf	(??_isspace+1)^0,c
  7745  00332A  C00F  F013         	movff	isspace@c,??_isspace+2
  7746  00332E  C010  F014         	movff	isspace@c+1,??_isspace+3
  7747  003332  5011               	movf	??_isspace^0,w,c
  7748  003334  2613               	addwf	(??_isspace+2)^0,f,c
  7749  003336  5012               	movf	(??_isspace+1)^0,w,c
  7750  003338  2214               	addwfc	(??_isspace+3)^0,f,c
  7751  00333A  5014               	movf	(??_isspace+3)^0,w,c
  7752  00333C  E109               	bnz	u6530
  7753  00333E  0E05               	movlw	5
  7754  003340  5C13               	subwf	(??_isspace+2)^0,w,c
  7755  003342  A0D8               	btfss	status,0,c
  7756  003344  EFA6  F019         	goto	u6531
  7757  003348  EFA8  F019         	goto	u6530
  7758  00334C                     u6531:
  7759  00334C  EFAA  F019         	goto	l4997
  7760  003350                     u6530:
  7761  003350  0E00               	movlw	0
  7762  003352  6E15               	movwf	_isspace$976^0,c
  7763  003354                     l4997:
  7764  003354  C015  F00F         	movff	_isspace$976,?_isspace
  7765  003358  6A10               	clrf	(?_isspace+1)^0,c
  7766  00335A  0012               	return		;funcret
  7767  00335C                     __end_of_isspace:
  7768                           	callstack 0
  7769                           
  7770 ;; *************** function _isdigit *****************
  7771 ;; Defined at:
  7772 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isdigit.c"
  7773 ;; Parameters:    Size  Location     Type
  7774 ;;  c               2   14[COMRAM] int 
  7775 ;; Auto vars:     Size  Location     Type
  7776 ;;		None
  7777 ;; Return value:  Size  Location     Type
  7778 ;;                  2   14[COMRAM] int 
  7779 ;; Registers used:
  7780 ;;		wreg, status,2, status,0
  7781 ;; Tracked objects:
  7782 ;;		On entry : 0/0
  7783 ;;		On exit  : 0/0
  7784 ;;		Unchanged: 0/0
  7785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7786 ;;      Params:         2       0       0       0       0       0       0
  7787 ;;      Locals:         0       0       0       0       0       0       0
  7788 ;;      Temps:          4       0       0       0       0       0       0
  7789 ;;      Totals:         6       0       0       0       0       0       0
  7790 ;;Total ram usage:        6 bytes
  7791 ;; Hardware stack levels used: 1
  7792 ;; Hardware stack levels required when called: 2
  7793 ;; This function calls:
  7794 ;;		Nothing
  7795 ;; This function is called by:
  7796 ;;		_vfpfcnvrt
  7797 ;;		_atoi
  7798 ;; This function uses a non-reentrant model
  7799 ;;
  7800                           
  7801                           	psect	text25
  7802  003492                     __ptext25:
  7803                           	callstack 0
  7804  003492                     _isdigit:
  7805                           	callstack 25
  7806  003492  0ED0               	movlw	208
  7807  003494  6E11               	movwf	??_isdigit^0,c
  7808  003496  0EFF               	movlw	255
  7809  003498  6E12               	movwf	(??_isdigit+1)^0,c
  7810  00349A  C00F  F013         	movff	isdigit@c,??_isdigit+2
  7811  00349E  C010  F014         	movff	isdigit@c+1,??_isdigit+3
  7812  0034A2  5011               	movf	??_isdigit^0,w,c
  7813  0034A4  2613               	addwf	(??_isdigit+2)^0,f,c
  7814  0034A6  5012               	movf	(??_isdigit+1)^0,w,c
  7815  0034A8  2214               	addwfc	(??_isdigit+3)^0,f,c
  7816  0034AA  5014               	movf	(??_isdigit+3)^0,w,c
  7817  0034AC  E10A               	bnz	u6500
  7818  0034AE  0E0A               	movlw	10
  7819  0034B0  5C13               	subwf	(??_isdigit+2)^0,w,c
  7820  0034B2  A0D8               	btfss	status,0,c
  7821  0034B4  EF5E  F01A         	goto	u6501
  7822  0034B8  EF61  F01A         	goto	u6500
  7823  0034BC                     u6501:
  7824  0034BC  0E01               	movlw	1
  7825  0034BE  EF62  F01A         	goto	u6510
  7826  0034C2                     u6500:
  7827  0034C2  0E00               	movlw	0
  7828  0034C4                     u6510:
  7829  0034C4  6E0F               	movwf	?_isdigit^0,c
  7830  0034C6  6A10               	clrf	(?_isdigit+1)^0,c
  7831  0034C8  0012               	return		;funcret
  7832  0034CA                     __end_of_isdigit:
  7833                           	callstack 0
  7834                           
  7835 ;; *************** function ___wmul *****************
  7836 ;; Defined at:
  7837 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
  7838 ;; Parameters:    Size  Location     Type
  7839 ;;  multiplier      2   14[COMRAM] unsigned int 
  7840 ;;  multiplicand    2   16[COMRAM] unsigned int 
  7841 ;; Auto vars:     Size  Location     Type
  7842 ;;  product         2   18[COMRAM] unsigned int 
  7843 ;; Return value:  Size  Location     Type
  7844 ;;                  2   14[COMRAM] unsigned int 
  7845 ;; Registers used:
  7846 ;;		wreg, status,2, status,0, prodl, prodh
  7847 ;; Tracked objects:
  7848 ;;		On entry : 0/0
  7849 ;;		On exit  : 0/0
  7850 ;;		Unchanged: 0/0
  7851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7852 ;;      Params:         4       0       0       0       0       0       0
  7853 ;;      Locals:         2       0       0       0       0       0       0
  7854 ;;      Temps:          0       0       0       0       0       0       0
  7855 ;;      Totals:         6       0       0       0       0       0       0
  7856 ;;Total ram usage:        6 bytes
  7857 ;; Hardware stack levels used: 1
  7858 ;; Hardware stack levels required when called: 2
  7859 ;; This function calls:
  7860 ;;		Nothing
  7861 ;; This function is called by:
  7862 ;;		_main
  7863 ;;		_atoi
  7864 ;; This function uses a non-reentrant model
  7865 ;;
  7866                           
  7867                           	psect	text26
  7868  003500                     __ptext26:
  7869                           	callstack 0
  7870  003500                     ___wmul:
  7871                           	callstack 24
  7872  003500  500F               	movf	___wmul@multiplier^0,w,c
  7873  003502  0211               	mulwf	___wmul@multiplicand^0,c
  7874  003504  CFF3 F013          	movff	prodl,___wmul@product
  7875  003508  CFF4 F014          	movff	prodh,___wmul@product+1
  7876  00350C  500F               	movf	___wmul@multiplier^0,w,c
  7877  00350E  0212               	mulwf	(___wmul@multiplicand+1)^0,c
  7878  003510  50F3               	movf	243,w,c
  7879  003512  2614               	addwf	(___wmul@product+1)^0,f,c
  7880  003514  5010               	movf	(___wmul@multiplier+1)^0,w,c
  7881  003516  0211               	mulwf	___wmul@multiplicand^0,c
  7882  003518  50F3               	movf	243,w,c
  7883  00351A  2614               	addwf	(___wmul@product+1)^0,f,c
  7884  00351C  C013  F00F         	movff	___wmul@product,?___wmul
  7885  003520  C014  F010         	movff	___wmul@product+1,?___wmul+1
  7886  003524  0012               	return		;funcret
  7887  003526                     __end_of___wmul:
  7888                           	callstack 0
  7889                           
  7890 ;; *************** function _lcd_puts *****************
  7891 ;; Defined at:
  7892 ;;		line 57 in file "LCD.c"
  7893 ;; Parameters:    Size  Location     Type
  7894 ;;  s               2   16[COMRAM] PTR const unsigned char 
  7895 ;;		 -> line(17), STR_1(14), 
  7896 ;; Auto vars:     Size  Location     Type
  7897 ;;		None
  7898 ;; Return value:  Size  Location     Type
  7899 ;;                  1    wreg      void 
  7900 ;; Registers used:
  7901 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7902 ;; Tracked objects:
  7903 ;;		On entry : 0/0
  7904 ;;		On exit  : 0/0
  7905 ;;		Unchanged: 0/0
  7906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7907 ;;      Params:         2       0       0       0       0       0       0
  7908 ;;      Locals:         0       0       0       0       0       0       0
  7909 ;;      Temps:          0       0       0       0       0       0       0
  7910 ;;      Totals:         2       0       0       0       0       0       0
  7911 ;;Total ram usage:        2 bytes
  7912 ;; Hardware stack levels used: 1
  7913 ;; Hardware stack levels required when called: 3
  7914 ;; This function calls:
  7915 ;;		_lcd_write
  7916 ;; This function is called by:
  7917 ;;		_main
  7918 ;; This function uses a non-reentrant model
  7919 ;;
  7920                           
  7921                           	psect	text27
  7922  0031FA                     __ptext27:
  7923                           	callstack 0
  7924  0031FA                     _lcd_puts:
  7925                           	callstack 27
  7926  0031FA                     
  7927                           ;LCD.c: 57: lcd_puts(const char * s);LCD.c: 58: {;LCD.c: 59:  PORTBbits.RB4 = 1;
  7928  0031FA  8881               	bsf	129,4,c	;volatile
  7929                           
  7930                           ;LCD.c: 60:  while(*s)
  7931  0031FC  EF14  F019         	goto	l4027
  7932  003200                     l4023:
  7933                           
  7934                           ;LCD.c: 61:   lcd_write(*s++);
  7935  003200  C011  FFF6         	movff	lcd_puts@s,tblptrl
  7936  003204  C012  FFF7         	movff	lcd_puts@s+1,tblptrh
  7937  003208  6AF8               	clrf	tblptru,c
  7938  00320A  0E05               	movlw	(high __ramtop+-1)
  7939  00320C  64F7               	cpfsgt	tblptrh,c
  7940  00320E  D003               	bra	u4877
  7941  003210  0008               	tblrd		*
  7942  003212  50F5               	movf	tablat,w,c
  7943  003214  D005               	bra	u4870
  7944  003216                     u4877:
  7945  003216  CFF6 FFE1          	movff	tblptrl,fsr1l
  7946  00321A  CFF7 FFE2          	movff	tblptrh,fsr1h
  7947  00321E  50E7               	movf	indf1,w,c
  7948  003220                     u4870:
  7949  003220  ECF4  F019         	call	_lcd_write
  7950  003224  4A11               	infsnz	lcd_puts@s^0,f,c
  7951  003226  2A12               	incf	(lcd_puts@s+1)^0,f,c
  7952  003228                     l4027:
  7953                           
  7954                           ;LCD.c: 60:  while(*s)
  7955  003228  C011  FFF6         	movff	lcd_puts@s,tblptrl
  7956  00322C  C012  FFF7         	movff	lcd_puts@s+1,tblptrh
  7957  003230  6AF8               	clrf	tblptru,c
  7958  003232  0E05               	movlw	(high __ramtop+-1)
  7959  003234  64F7               	cpfsgt	tblptrh,c
  7960  003236  D003               	bra	u4887
  7961  003238  0008               	tblrd		*
  7962  00323A  50F5               	movf	tablat,w,c
  7963  00323C  D005               	bra	u4880
  7964  00323E                     u4887:
  7965  00323E  CFF6 FFE1          	movff	tblptrl,fsr1l
  7966  003242  CFF7 FFE2          	movff	tblptrh,fsr1h
  7967  003246  50E7               	movf	indf1,w,c
  7968  003248                     u4880:
  7969  003248  0900               	iorlw	0
  7970  00324A  A4D8               	btfss	status,2,c
  7971  00324C  EF2A  F019         	goto	u4891
  7972  003250  EF2C  F019         	goto	u4890
  7973  003254                     u4891:
  7974  003254  EF00  F019         	goto	l4023
  7975  003258                     u4890:
  7976  003258  0012               	return		;funcret
  7977  00325A                     __end_of_lcd_puts:
  7978                           	callstack 0
  7979                           
  7980 ;; *************** function _lcd_init *****************
  7981 ;; Defined at:
  7982 ;;		line 87 in file "LCD.c"
  7983 ;; Parameters:    Size  Location     Type
  7984 ;;		None
  7985 ;; Auto vars:     Size  Location     Type
  7986 ;;  init_value      1    0        unsigned char 
  7987 ;; Return value:  Size  Location     Type
  7988 ;;                  1    wreg      void 
  7989 ;; Registers used:
  7990 ;;		wreg, status,2, status,0, cstack
  7991 ;; Tracked objects:
  7992 ;;		On entry : 0/0
  7993 ;;		On exit  : 0/0
  7994 ;;		Unchanged: 0/0
  7995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7996 ;;      Params:         0       0       0       0       0       0       0
  7997 ;;      Locals:         0       0       0       0       0       0       0
  7998 ;;      Temps:          1       0       0       0       0       0       0
  7999 ;;      Totals:         1       0       0       0       0       0       0
  8000 ;;Total ram usage:        1 bytes
  8001 ;; Hardware stack levels used: 1
  8002 ;; Hardware stack levels required when called: 4
  8003 ;; This function calls:
  8004 ;;		_lcd_clear
  8005 ;;		_lcd_write
  8006 ;; This function is called by:
  8007 ;;		_main
  8008 ;; This function uses a non-reentrant model
  8009 ;;
  8010                           
  8011                           	psect	text28
  8012  0030C0                     __ptext28:
  8013                           	callstack 0
  8014  0030C0                     _lcd_init:
  8015                           	callstack 26
  8016  0030C0                     
  8017                           ;LCD.c: 96:  PORTBbits.RB4 = 0;
  8018  0030C0  9881               	bcf	129,4,c	;volatile
  8019  0030C2                     
  8020                           ;LCD.c: 97:  PORTBbits.RB5 = 0;
  8021  0030C2  9A81               	bcf	129,5,c	;volatile
  8022  0030C4                     
  8023                           ;LCD.c: 99:  _delay((unsigned long)((15)*(40000000/4000.0)));
  8024  0030C4  0EC3               	movlw	195
  8025  0030C6  6E12               	movwf	??_lcd_init^0,c
  8026  0030C8  0ECD               	movlw	205
  8027  0030CA                     u7437:
  8028  0030CA  2EE8               	decfsz	wreg,f,c
  8029  0030CC  D7FE               	bra	u7437
  8030  0030CE  2E12               	decfsz	??_lcd_init^0,f,c
  8031  0030D0  D7FC               	bra	u7437
  8032  0030D2  F000               	nop	
  8033  0030D4                     
  8034                           ;LCD.c: 100:  PORTB = (PORTB & 0xF0)+init_value;
  8035  0030D4  5081               	movf	129,w,c	;volatile
  8036  0030D6  0BF0               	andlw	240
  8037  0030D8  0F03               	addlw	3
  8038  0030DA  6E81               	movwf	129,c	;volatile
  8039  0030DC                     
  8040                           ;LCD.c: 101:  ((PORTBbits.RB5 = 1),(PORTBbits.RB5=0));
  8041  0030DC  8A81               	bsf	129,5,c	;volatile
  8042  0030DE  9A81               	bcf	129,5,c	;volatile
  8043  0030E0                     
  8044                           ;LCD.c: 102:  _delay((unsigned long)((5)*(40000000/4000.0)));
  8045  0030E0  0E41               	movlw	65
  8046  0030E2  6E12               	movwf	??_lcd_init^0,c
  8047  0030E4  0EEE               	movlw	238
  8048  0030E6                     u7447:
  8049  0030E6  2EE8               	decfsz	wreg,f,c
  8050  0030E8  D7FE               	bra	u7447
  8051  0030EA  2E12               	decfsz	??_lcd_init^0,f,c
  8052  0030EC  D7FC               	bra	u7447
  8053  0030EE  D000               	nop2	
  8054  0030F0                     
  8055                           ;LCD.c: 103:  ((PORTBbits.RB5 = 1),(PORTBbits.RB5=0));
  8056  0030F0  8A81               	bsf	129,5,c	;volatile
  8057  0030F2  9A81               	bcf	129,5,c	;volatile
  8058  0030F4                     
  8059                           ;LCD.c: 104:  _delay((unsigned long)((200)*(40000000/4000000.0)));
  8060  0030F4  0E03               	movlw	3
  8061  0030F6  6E12               	movwf	??_lcd_init^0,c
  8062  0030F8  0E98               	movlw	152
  8063  0030FA                     u7457:
  8064  0030FA  2EE8               	decfsz	wreg,f,c
  8065  0030FC  D7FE               	bra	u7457
  8066  0030FE  2E12               	decfsz	??_lcd_init^0,f,c
  8067  003100  D7FC               	bra	u7457
  8068  003102                     
  8069                           ;LCD.c: 105:  ((PORTBbits.RB5 = 1),(PORTBbits.RB5=0));
  8070  003102  8A81               	bsf	129,5,c	;volatile
  8071  003104  9A81               	bcf	129,5,c	;volatile
  8072  003106                     
  8073                           ;LCD.c: 106:  _delay((unsigned long)((200)*(40000000/4000000.0)));
  8074  003106  0E03               	movlw	3
  8075  003108  6E12               	movwf	??_lcd_init^0,c
  8076  00310A  0E98               	movlw	152
  8077  00310C                     u7467:
  8078  00310C  2EE8               	decfsz	wreg,f,c
  8079  00310E  D7FE               	bra	u7467
  8080  003110  2E12               	decfsz	??_lcd_init^0,f,c
  8081  003112  D7FC               	bra	u7467
  8082  003114                     
  8083                           ;LCD.c: 107:  PORTB = (PORTB & 0xF0)+2;
  8084  003114  5081               	movf	129,w,c	;volatile
  8085  003116  0BF0               	andlw	240
  8086  003118  0F02               	addlw	2
  8087  00311A  6E81               	movwf	129,c	;volatile
  8088  00311C                     
  8089                           ;LCD.c: 108:  ((PORTBbits.RB5 = 1),(PORTBbits.RB5=0));
  8090  00311C  8A81               	bsf	129,5,c	;volatile
  8091  00311E  9A81               	bcf	129,5,c	;volatile
  8092  003120                     
  8093                           ;LCD.c: 110:  lcd_write(0x28);
  8094  003120  0E28               	movlw	40
  8095  003122  ECF4  F019         	call	_lcd_write
  8096  003126                     
  8097                           ;LCD.c: 111:  lcd_write(0xC);
  8098  003126  0E0C               	movlw	12
  8099  003128  ECF4  F019         	call	_lcd_write
  8100  00312C                     
  8101                           ;LCD.c: 112:  lcd_clear();
  8102  00312C  ECA6  F01A         	call	_lcd_clear	;wreg free
  8103  003130                     
  8104                           ;LCD.c: 113:  lcd_write(0x6);
  8105  003130  0E06               	movlw	6
  8106  003132  ECF4  F019         	call	_lcd_write
  8107  003136  0012               	return		;funcret
  8108  003138                     __end_of_lcd_init:
  8109                           	callstack 0
  8110                           
  8111 ;; *************** function _lcd_clear *****************
  8112 ;; Defined at:
  8113 ;;		line 47 in file "LCD.c"
  8114 ;; Parameters:    Size  Location     Type
  8115 ;;		None
  8116 ;; Auto vars:     Size  Location     Type
  8117 ;;		None
  8118 ;; Return value:  Size  Location     Type
  8119 ;;                  1    wreg      void 
  8120 ;; Registers used:
  8121 ;;		wreg, status,2, status,0, cstack
  8122 ;; Tracked objects:
  8123 ;;		On entry : 0/0
  8124 ;;		On exit  : 0/0
  8125 ;;		Unchanged: 0/0
  8126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8127 ;;      Params:         0       0       0       0       0       0       0
  8128 ;;      Locals:         0       0       0       0       0       0       0
  8129 ;;      Temps:          1       0       0       0       0       0       0
  8130 ;;      Totals:         1       0       0       0       0       0       0
  8131 ;;Total ram usage:        1 bytes
  8132 ;; Hardware stack levels used: 1
  8133 ;; Hardware stack levels required when called: 3
  8134 ;; This function calls:
  8135 ;;		_lcd_write
  8136 ;; This function is called by:
  8137 ;;		_lcd_init
  8138 ;; This function uses a non-reentrant model
  8139 ;;
  8140                           
  8141                           	psect	text29
  8142  00354C                     __ptext29:
  8143                           	callstack 0
  8144  00354C                     _lcd_clear:
  8145                           	callstack 26
  8146  00354C                     
  8147                           ;LCD.c: 49:  PORTBbits.RB4 = 0;
  8148  00354C  9881               	bcf	129,4,c	;volatile
  8149  00354E                     
  8150                           ;LCD.c: 50:  lcd_write(0x1);
  8151  00354E  0E01               	movlw	1
  8152  003550  ECF4  F019         	call	_lcd_write
  8153  003554                     
  8154                           ;LCD.c: 51:  _delay((unsigned long)((2)*(40000000/4000.0)));
  8155  003554  0E1A               	movlw	26
  8156  003556  6E11               	movwf	??_lcd_clear^0,c
  8157  003558  0EF8               	movlw	248
  8158  00355A                     u7477:
  8159  00355A  2EE8               	decfsz	wreg,f,c
  8160  00355C  D7FE               	bra	u7477
  8161  00355E  2E11               	decfsz	??_lcd_clear^0,f,c
  8162  003560  D7FC               	bra	u7477
  8163  003562  D000               	nop2	
  8164  003564  0012               	return		;funcret
  8165  003566                     __end_of_lcd_clear:
  8166                           	callstack 0
  8167                           
  8168 ;; *************** function _lcd_goto *****************
  8169 ;; Defined at:
  8170 ;;		line 79 in file "LCD.c"
  8171 ;; Parameters:    Size  Location     Type
  8172 ;;  pos             1    wreg     unsigned char 
  8173 ;; Auto vars:     Size  Location     Type
  8174 ;;  pos             1   16[COMRAM] unsigned char 
  8175 ;; Return value:  Size  Location     Type
  8176 ;;                  1    wreg      void 
  8177 ;; Registers used:
  8178 ;;		wreg, status,2, status,0, cstack
  8179 ;; Tracked objects:
  8180 ;;		On entry : 0/0
  8181 ;;		On exit  : 0/0
  8182 ;;		Unchanged: 0/0
  8183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8184 ;;      Params:         0       0       0       0       0       0       0
  8185 ;;      Locals:         1       0       0       0       0       0       0
  8186 ;;      Temps:          0       0       0       0       0       0       0
  8187 ;;      Totals:         1       0       0       0       0       0       0
  8188 ;;Total ram usage:        1 bytes
  8189 ;; Hardware stack levels used: 1
  8190 ;; Hardware stack levels required when called: 3
  8191 ;; This function calls:
  8192 ;;		_lcd_write
  8193 ;; This function is called by:
  8194 ;;		_main
  8195 ;; This function uses a non-reentrant model
  8196 ;;
  8197                           
  8198                           	psect	text30
  8199  00357C                     __ptext30:
  8200                           	callstack 0
  8201  00357C                     _lcd_goto:
  8202                           	callstack 27
  8203                           
  8204                           ;incstack = 0
  8205                           ;lcd_goto@pos stored from wreg
  8206  00357C  6E11               	movwf	lcd_goto@pos^0,c
  8207  00357E                     
  8208                           ;LCD.c: 79: lcd_goto(unsigned char pos);LCD.c: 80: {;LCD.c: 81:  PORTBbits.RB4 = 0;
  8209  00357E  9881               	bcf	129,4,c	;volatile
  8210  003580                     
  8211                           ;LCD.c: 82:  lcd_write(0x80+pos);
  8212  003580  5011               	movf	lcd_goto@pos^0,w,c
  8213  003582  0F80               	addlw	128
  8214  003584  ECF4  F019         	call	_lcd_write
  8215  003588  0012               	return		;funcret
  8216  00358A                     __end_of_lcd_goto:
  8217                           	callstack 0
  8218                           
  8219 ;; *************** function _lcd_write *****************
  8220 ;; Defined at:
  8221 ;;		line 33 in file "LCD.c"
  8222 ;; Parameters:    Size  Location     Type
  8223 ;;  c               1    wreg     unsigned char 
  8224 ;; Auto vars:     Size  Location     Type
  8225 ;;  c               1   15[COMRAM] unsigned char 
  8226 ;; Return value:  Size  Location     Type
  8227 ;;                  1    wreg      void 
  8228 ;; Registers used:
  8229 ;;		wreg, status,2, status,0, cstack
  8230 ;; Tracked objects:
  8231 ;;		On entry : 0/0
  8232 ;;		On exit  : 0/0
  8233 ;;		Unchanged: 0/0
  8234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8235 ;;      Params:         0       0       0       0       0       0       0
  8236 ;;      Locals:         1       0       0       0       0       0       0
  8237 ;;      Temps:          1       0       0       0       0       0       0
  8238 ;;      Totals:         2       0       0       0       0       0       0
  8239 ;;Total ram usage:        2 bytes
  8240 ;; Hardware stack levels used: 1
  8241 ;; Hardware stack levels required when called: 2
  8242 ;; This function calls:
  8243 ;;		Nothing
  8244 ;; This function is called by:
  8245 ;;		_lcd_clear
  8246 ;;		_lcd_puts
  8247 ;;		_lcd_goto
  8248 ;;		_lcd_init
  8249 ;;		_lcd_putch
  8250 ;; This function uses a non-reentrant model
  8251 ;;
  8252                           
  8253                           	psect	text31
  8254  0033E8                     __ptext31:
  8255                           	callstack 0
  8256  0033E8                     _lcd_write:
  8257                           	callstack 27
  8258                           
  8259                           ;incstack = 0
  8260                           ;lcd_write@c stored from wreg
  8261  0033E8  6E10               	movwf	lcd_write@c^0,c
  8262  0033EA                     
  8263                           ;LCD.c: 33: lcd_write(unsigned char c);LCD.c: 34: {;LCD.c: 35:  _delay((unsigned long)((
      +                          40)*(40000000/4000000.0)));
  8264  0033EA  0E85               	movlw	133
  8265  0033EC                     u7487:
  8266  0033EC  2EE8               	decfsz	wreg,f,c
  8267  0033EE  D7FE               	bra	u7487
  8268  0033F0  F000               	nop	
  8269  0033F2                     
  8270                           ;LCD.c: 36:  PORTB = (PORTB & 0xF0)+( ( c >> 4 ) & 0x0F );
  8271  0033F2  C010  F00F         	movff	lcd_write@c,??_lcd_write
  8272  0033F6  3A0F               	swapf	??_lcd_write^0,f,c
  8273  0033F8  0E0F               	movlw	15
  8274  0033FA  160F               	andwf	??_lcd_write^0,f,c
  8275  0033FC  0E0F               	movlw	15
  8276  0033FE  160F               	andwf	??_lcd_write^0,f,c
  8277  003400  5081               	movf	129,w,c	;volatile
  8278  003402  0BF0               	andlw	240
  8279  003404  240F               	addwf	??_lcd_write^0,w,c
  8280  003406  6E81               	movwf	129,c	;volatile
  8281  003408                     
  8282                           ;LCD.c: 37:  ((PORTBbits.RB5 = 1),(PORTBbits.RB5=0));
  8283  003408  8A81               	bsf	129,5,c	;volatile
  8284  00340A  9A81               	bcf	129,5,c	;volatile
  8285  00340C                     
  8286                           ;LCD.c: 38:  PORTB = (PORTB & 0xF0)+( c & 0x0F );
  8287  00340C  C010  F00F         	movff	lcd_write@c,??_lcd_write
  8288  003410  0E0F               	movlw	15
  8289  003412  160F               	andwf	??_lcd_write^0,f,c
  8290  003414  5081               	movf	129,w,c	;volatile
  8291  003416  0BF0               	andlw	240
  8292  003418  240F               	addwf	??_lcd_write^0,w,c
  8293  00341A  6E81               	movwf	129,c	;volatile
  8294  00341C                     
  8295                           ;LCD.c: 39:  ((PORTBbits.RB5 = 1),(PORTBbits.RB5=0));
  8296  00341C  8A81               	bsf	129,5,c	;volatile
  8297  00341E  9A81               	bcf	129,5,c	;volatile
  8298  003420  0012               	return		;funcret
  8299  003422                     __end_of_lcd_write:
  8300                           	callstack 0
  8301                           
  8302 ;; *************** function _calc_time_interrupt *****************
  8303 ;; Defined at:
  8304 ;;		line 26 in file "newmain.c"
  8305 ;; Parameters:    Size  Location     Type
  8306 ;;  freq_value      4   27[BANK0 ] void 
  8307 ;; Auto vars:     Size  Location     Type
  8308 ;;		None
  8309 ;; Return value:  Size  Location     Type
  8310 ;;                  1    wreg      void 
  8311 ;; Registers used:
  8312 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8313 ;; Tracked objects:
  8314 ;;		On entry : 0/0
  8315 ;;		On exit  : 0/0
  8316 ;;		Unchanged: 0/0
  8317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8318 ;;      Params:         0       4       0       0       0       0       0
  8319 ;;      Locals:         0       0       0       0       0       0       0
  8320 ;;      Temps:          0       0       0       0       0       0       0
  8321 ;;      Totals:         0       4       0       0       0       0       0
  8322 ;;Total ram usage:        4 bytes
  8323 ;; Hardware stack levels used: 1
  8324 ;; Hardware stack levels required when called: 3
  8325 ;; This function calls:
  8326 ;;		___fldiv
  8327 ;;		___flmul
  8328 ;;		___fltol
  8329 ;; This function is called by:
  8330 ;;		_main
  8331 ;; This function uses a non-reentrant model
  8332 ;;
  8333                           
  8334                           	psect	text32
  8335  002EDA                     __ptext32:
  8336                           	callstack 0
  8337  002EDA                     _calc_time_interrupt:
  8338                           	callstack 27
  8339  002EDA                     
  8340                           ;newmain.c: 28: 
  8341  002EDA  C07B  F03C         	movff	calc_time_interrupt@freq_value,___flmul@b
  8342  002EDE  C07C  F03D         	movff	calc_time_interrupt@freq_value+1,___flmul@b+1
  8343  002EE2  C07D  F03E         	movff	calc_time_interrupt@freq_value+2,___flmul@b+2
  8344  002EE6  C07E  F03F         	movff	calc_time_interrupt@freq_value+3,___flmul@b+3
  8345  002EEA  0E00               	movlw	0
  8346  002EEC  6E40               	movwf	___flmul@a^0,c
  8347  002EEE  0E00               	movlw	0
  8348  002EF0  6E41               	movwf	(___flmul@a+1)^0,c
  8349  002EF2  0EB4               	movlw	180
  8350  002EF4  6E42               	movwf	(___flmul@a+2)^0,c
  8351  002EF6  0E43               	movlw	67
  8352  002EF8  6E43               	movwf	(___flmul@a+3)^0,c
  8353  002EFA  ECC6  F00B         	call	___flmul	;wreg free
  8354  002EFE  C03C  F07B         	movff	?___flmul,calc_time_interrupt@freq_value
  8355  002F02  C03D  F07C         	movff	?___flmul+1,calc_time_interrupt@freq_value+1
  8356  002F06  C03E  F07D         	movff	?___flmul+2,calc_time_interrupt@freq_value+2
  8357  002F0A  C03F  F07E         	movff	?___flmul+3,calc_time_interrupt@freq_value+3
  8358                           
  8359                           ;newmain.c: 30: 
  8360  002F0E  C07B  F040         	movff	calc_time_interrupt@freq_value,___flmul@a
  8361  002F12  C07C  F041         	movff	calc_time_interrupt@freq_value+1,___flmul@a+1
  8362  002F16  C07D  F042         	movff	calc_time_interrupt@freq_value+2,___flmul@a+2
  8363  002F1A  C07E  F043         	movff	calc_time_interrupt@freq_value+3,___flmul@a+3
  8364  002F1E  C177  F03C         	movff	_prescaler,___flmul@b
  8365  002F22  C178  F03D         	movff	_prescaler+1,___flmul@b+1
  8366  002F26  C179  F03E         	movff	_prescaler+2,___flmul@b+2
  8367  002F2A  C17A  F03F         	movff	_prescaler+3,___flmul@b+3
  8368  002F2E  ECC6  F00B         	call	___flmul	;wreg free
  8369  002F32  C03C  F027         	movff	?___flmul,___fldiv@a
  8370  002F36  C03D  F028         	movff	?___flmul+1,___fldiv@a+1
  8371  002F3A  C03E  F029         	movff	?___flmul+2,___fldiv@a+2
  8372  002F3E  C03F  F02A         	movff	?___flmul+3,___fldiv@a+3
  8373  002F42  0E80               	movlw	128
  8374  002F44  6E23               	movwf	___fldiv@b^0,c
  8375  002F46  0E96               	movlw	150
  8376  002F48  6E24               	movwf	(___fldiv@b+1)^0,c
  8377  002F4A  0E18               	movlw	24
  8378  002F4C  6E25               	movwf	(___fldiv@b+2)^0,c
  8379  002F4E  0E4B               	movlw	75
  8380  002F50  6E26               	movwf	(___fldiv@b+3)^0,c
  8381  002F52  ECDC  F00D         	call	___fldiv	;wreg free
  8382  002F56  C023  F071         	movff	?___fldiv,___fltol@f1
  8383  002F5A  C024  F072         	movff	?___fldiv+1,___fltol@f1+1
  8384  002F5E  C025  F073         	movff	?___fldiv+2,___fltol@f1+2
  8385  002F62  C026  F074         	movff	?___fldiv+3,___fltol@f1+3
  8386  002F66  ECFC  F013         	call	___fltol	;wreg free
  8387  002F6A  C071  F0F9         	movff	?___fltol,_value_TMR0
  8388  002F6E  C072  F0FA         	movff	?___fltol+1,_value_TMR0+1
  8389  002F72                     
  8390                           ;newmain.c: 32:     TRISA = 0xF7;
  8391  002F72  0100               	movlb	0	; () banked
  8392  002F74  51F9               	movf	_value_TMR0& (0+255),w,b
  8393  002F76  0800               	sublw	0
  8394  002F78  6FF9               	movwf	_value_TMR0& (0+255),b
  8395  002F7A  51FA               	movf	(_value_TMR0+1)& (0+255),w,b
  8396  002F7C  A0D8               	btfss	status,0,c
  8397  002F7E  2AE8               	incf	wreg,f,c
  8398  002F80  0800               	sublw	0
  8399  002F82  6FFA               	movwf	(_value_TMR0+1)& (0+255),b
  8400  002F84                     
  8401                           ; BSR set to: 0
  8402                           ;newmain.c: 33:     PORTA = 0x08;
  8403  002F84  0E80               	movlw	128
  8404  002F86  6ED5               	movwf	213,c	;volatile
  8405  002F88                     
  8406                           ; BSR set to: 0
  8407  002F88  0012               	return		;funcret
  8408  002F8A                     __end_of_calc_time_interrupt:
  8409                           	callstack 0
  8410                           
  8411 ;; *************** function ___fltol *****************
  8412 ;; Defined at:
  8413 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fltol.c"
  8414 ;; Parameters:    Size  Location     Type
  8415 ;;  f1              4   17[BANK0 ] void 
  8416 ;; Auto vars:     Size  Location     Type
  8417 ;;  exp1            1   26[BANK0 ] unsigned char 
  8418 ;;  sign1           1   25[BANK0 ] unsigned char 
  8419 ;; Return value:  Size  Location     Type
  8420 ;;                  4   17[BANK0 ] long 
  8421 ;; Registers used:
  8422 ;;		wreg, status,2, status,0
  8423 ;; Tracked objects:
  8424 ;;		On entry : 0/0
  8425 ;;		On exit  : 0/0
  8426 ;;		Unchanged: 0/0
  8427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8428 ;;      Params:         0       4       0       0       0       0       0
  8429 ;;      Locals:         0       2       0       0       0       0       0
  8430 ;;      Temps:          0       4       0       0       0       0       0
  8431 ;;      Totals:         0      10       0       0       0       0       0
  8432 ;;Total ram usage:       10 bytes
  8433 ;; Hardware stack levels used: 1
  8434 ;; Hardware stack levels required when called: 2
  8435 ;; This function calls:
  8436 ;;		Nothing
  8437 ;; This function is called by:
  8438 ;;		_calc_time_interrupt
  8439 ;;		_efgtoa
  8440 ;; This function uses a non-reentrant model
  8441 ;;
  8442                           
  8443                           	psect	text33
  8444  0027F8                     __ptext33:
  8445                           	callstack 0
  8446  0027F8                     ___fltol:
  8447                           	callstack 24
  8448  0027F8  0100               	movlb	0	; () banked
  8449  0027FA  3573               	rlcf	(___fltol@f1+2)& (0+255),w,b
  8450  0027FC  3574               	rlcf	(___fltol@f1+3)& (0+255),w,b
  8451  0027FE  6F7A               	movwf	___fltol@exp1& (0+255),b
  8452  002800  517A               	movf	___fltol@exp1& (0+255),w,b
  8453  002802  A4D8               	btfss	status,2,c
  8454  002804  EF06  F014         	goto	u6171
  8455  002808  EF08  F014         	goto	u6170
  8456  00280C                     u6171:
  8457  00280C  EF12  F014         	goto	l4861
  8458  002810                     u6170:
  8459  002810                     l4857:
  8460                           
  8461                           ; BSR set to: 0
  8462  002810  0E00               	movlw	0
  8463  002812  6F71               	movwf	?___fltol& (0+255),b
  8464  002814  0E00               	movlw	0
  8465  002816  6F72               	movwf	(?___fltol+1)& (0+255),b
  8466  002818  0E00               	movlw	0
  8467  00281A  6F73               	movwf	(?___fltol+2)& (0+255),b
  8468  00281C  0E00               	movlw	0
  8469  00281E  6F74               	movwf	(?___fltol+3)& (0+255),b
  8470  002820  EF7F  F014         	goto	l440
  8471  002824                     l4861:
  8472                           
  8473                           ; BSR set to: 0
  8474  002824  C071  F075         	movff	___fltol@f1,??___fltol
  8475  002828  C072  F076         	movff	___fltol@f1+1,??___fltol+1
  8476  00282C  C073  F077         	movff	___fltol@f1+2,??___fltol+2
  8477  002830  C074  F078         	movff	___fltol@f1+3,??___fltol+3
  8478  002834  0E20               	movlw	32
  8479  002836  EF22  F014         	goto	u6180
  8480  00283A                     u6185:
  8481  00283A  90D8               	bcf	status,0,c
  8482  00283C  3378               	rrcf	(??___fltol+3)& (0+255),f,b
  8483  00283E  3377               	rrcf	(??___fltol+2)& (0+255),f,b
  8484  002840  3376               	rrcf	(??___fltol+1)& (0+255),f,b
  8485  002842  3375               	rrcf	??___fltol& (0+255),f,b
  8486  002844                     u6180:
  8487  002844  2EE8               	decfsz	wreg,f,c
  8488  002846  EF1D  F014         	goto	u6185
  8489  00284A  5175               	movf	??___fltol& (0+255),w,b
  8490  00284C  6F79               	movwf	___fltol@sign1& (0+255),b
  8491  00284E                     
  8492                           ; BSR set to: 0
  8493  00284E  8F73               	bsf	(___fltol@f1+2)& (0+255),7,b
  8494  002850                     
  8495                           ; BSR set to: 0
  8496  002850  0EFF               	movlw	255
  8497  002852  1771               	andwf	___fltol@f1& (0+255),f,b
  8498  002854  0EFF               	movlw	255
  8499  002856  1772               	andwf	(___fltol@f1+1)& (0+255),f,b
  8500  002858  0EFF               	movlw	255
  8501  00285A  1773               	andwf	(___fltol@f1+2)& (0+255),f,b
  8502  00285C  0E00               	movlw	0
  8503  00285E  1774               	andwf	(___fltol@f1+3)& (0+255),f,b
  8504  002860                     
  8505                           ; BSR set to: 0
  8506  002860  0E96               	movlw	150
  8507  002862  5F7A               	subwf	___fltol@exp1& (0+255),f,b
  8508  002864                     
  8509                           ; BSR set to: 0
  8510  002864  BF7A               	btfsc	___fltol@exp1& (0+255),7,b
  8511  002866  EF39  F014         	goto	u6190
  8512  00286A  EF37  F014         	goto	u6191
  8513  00286E                     u6191:
  8514  00286E  EF4F  F014         	goto	l4881
  8515  002872                     u6190:
  8516  002872                     
  8517                           ; BSR set to: 0
  8518  002872  517A               	movf	___fltol@exp1& (0+255),w,b
  8519  002874  0A80               	xorlw	128
  8520  002876  0F97               	addlw	151
  8521  002878  B0D8               	btfsc	status,0,c
  8522  00287A  EF41  F014         	goto	u6201
  8523  00287E  EF43  F014         	goto	u6200
  8524  002882                     u6201:
  8525  002882  EF45  F014         	goto	l4877
  8526  002886                     u6200:
  8527  002886  EF08  F014         	goto	l4857
  8528  00288A                     l4877:
  8529                           
  8530                           ; BSR set to: 0
  8531  00288A  90D8               	bcf	status,0,c
  8532  00288C  3374               	rrcf	(___fltol@f1+3)& (0+255),f,b
  8533  00288E  3373               	rrcf	(___fltol@f1+2)& (0+255),f,b
  8534  002890  3372               	rrcf	(___fltol@f1+1)& (0+255),f,b
  8535  002892  3371               	rrcf	___fltol@f1& (0+255),f,b
  8536  002894                     
  8537                           ; BSR set to: 0
  8538  002894  3F7A               	incfsz	___fltol@exp1& (0+255),f,b
  8539  002896  EF45  F014         	goto	l4877
  8540  00289A  EF67  F014         	goto	l4891
  8541  00289E                     l4881:
  8542                           
  8543                           ; BSR set to: 0
  8544  00289E  0E1F               	movlw	31
  8545  0028A0  657A               	cpfsgt	___fltol@exp1& (0+255),b
  8546  0028A2  EF55  F014         	goto	u6211
  8547  0028A6  EF57  F014         	goto	u6210
  8548  0028AA                     u6211:
  8549  0028AA  EF5F  F014         	goto	l4889
  8550  0028AE                     u6210:
  8551  0028AE  EF08  F014         	goto	l4857
  8552  0028B2                     l4887:
  8553                           
  8554                           ; BSR set to: 0
  8555  0028B2  90D8               	bcf	status,0,c
  8556  0028B4  3771               	rlcf	___fltol@f1& (0+255),f,b
  8557  0028B6  3772               	rlcf	(___fltol@f1+1)& (0+255),f,b
  8558  0028B8  3773               	rlcf	(___fltol@f1+2)& (0+255),f,b
  8559  0028BA  3774               	rlcf	(___fltol@f1+3)& (0+255),f,b
  8560  0028BC  077A               	decf	___fltol@exp1& (0+255),f,b
  8561  0028BE                     l4889:
  8562                           
  8563                           ; BSR set to: 0
  8564  0028BE  517A               	movf	___fltol@exp1& (0+255),w,b
  8565  0028C0  A4D8               	btfss	status,2,c
  8566  0028C2  EF65  F014         	goto	u6221
  8567  0028C6  EF67  F014         	goto	u6220
  8568  0028CA                     u6221:
  8569  0028CA  EF59  F014         	goto	l4887
  8570  0028CE                     u6220:
  8571  0028CE                     l4891:
  8572                           
  8573                           ; BSR set to: 0
  8574  0028CE  5179               	movf	___fltol@sign1& (0+255),w,b
  8575  0028D0  B4D8               	btfsc	status,2,c
  8576  0028D2  EF6D  F014         	goto	u6231
  8577  0028D6  EF6F  F014         	goto	u6230
  8578  0028DA                     u6231:
  8579  0028DA  EF77  F014         	goto	l4895
  8580  0028DE                     u6230:
  8581  0028DE                     
  8582                           ; BSR set to: 0
  8583  0028DE  1F74               	comf	(___fltol@f1+3)& (0+255),f,b
  8584  0028E0  1F73               	comf	(___fltol@f1+2)& (0+255),f,b
  8585  0028E2  1F72               	comf	(___fltol@f1+1)& (0+255),f,b
  8586  0028E4  6D71               	negf	___fltol@f1& (0+255),b
  8587  0028E6  0E00               	movlw	0
  8588  0028E8  2372               	addwfc	(___fltol@f1+1)& (0+255),f,b
  8589  0028EA  2373               	addwfc	(___fltol@f1+2)& (0+255),f,b
  8590  0028EC  2374               	addwfc	(___fltol@f1+3)& (0+255),f,b
  8591  0028EE                     l4895:
  8592                           
  8593                           ; BSR set to: 0
  8594  0028EE  C071  F071         	movff	___fltol@f1,?___fltol
  8595  0028F2  C072  F072         	movff	___fltol@f1+1,?___fltol+1
  8596  0028F6  C073  F073         	movff	___fltol@f1+2,?___fltol+2
  8597  0028FA  C074  F074         	movff	___fltol@f1+3,?___fltol+3
  8598  0028FE                     l440:
  8599                           
  8600                           ; BSR set to: 0
  8601  0028FE  0012               	return		;funcret
  8602  002900                     __end_of___fltol:
  8603                           	callstack 0
  8604                           
  8605 ;; *************** function ___flmul *****************
  8606 ;; Defined at:
  8607 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcmul.c"
  8608 ;; Parameters:    Size  Location     Type
  8609 ;;  b               4   59[COMRAM] long 
  8610 ;;  a               4   63[COMRAM] long 
  8611 ;; Auto vars:     Size  Location     Type
  8612 ;;  prod            4   11[BANK0 ] struct .
  8613 ;;  grs             4    6[BANK0 ] unsigned long 
  8614 ;;  temp            2   15[BANK0 ] struct .
  8615 ;;  bexp            1   10[BANK0 ] unsigned char 
  8616 ;;  aexp            1    5[BANK0 ] unsigned char 
  8617 ;;  sign            1    4[BANK0 ] unsigned char 
  8618 ;; Return value:  Size  Location     Type
  8619 ;;                  4   59[COMRAM] unsigned char 
  8620 ;; Registers used:
  8621 ;;		wreg, status,2, status,0, prodl, prodh
  8622 ;; Tracked objects:
  8623 ;;		On entry : 0/0
  8624 ;;		On exit  : 0/0
  8625 ;;		Unchanged: 0/0
  8626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8627 ;;      Params:         8       0       0       0       0       0       0
  8628 ;;      Locals:         0      13       0       0       0       0       0
  8629 ;;      Temps:          0       4       0       0       0       0       0
  8630 ;;      Totals:         8      17       0       0       0       0       0
  8631 ;;Total ram usage:       25 bytes
  8632 ;; Hardware stack levels used: 1
  8633 ;; Hardware stack levels required when called: 2
  8634 ;; This function calls:
  8635 ;;		Nothing
  8636 ;; This function is called by:
  8637 ;;		_calc_time_interrupt
  8638 ;;		_main
  8639 ;;		_efgtoa
  8640 ;; This function uses a non-reentrant model
  8641 ;;
  8642                           
  8643                           	psect	text34
  8644  00178C                     __ptext34:
  8645                           	callstack 0
  8646  00178C                     ___flmul:
  8647                           	callstack 24
  8648  00178C  503F               	movf	(___flmul@b+3)^0,w,c
  8649  00178E  0B80               	andlw	128
  8650  001790  0100               	movlb	0	; () banked
  8651  001792  6F64               	movwf	___flmul@sign& (0+255),b
  8652  001794  503F               	movf	(___flmul@b+3)^0,w,c
  8653  001796  243F               	addwf	(___flmul@b+3)^0,w,c
  8654  001798  6F6A               	movwf	___flmul@bexp& (0+255),b
  8655  00179A                     
  8656                           ; BSR set to: 0
  8657  00179A  AE3E               	btfss	(___flmul@b+2)^0,7,c
  8658  00179C  EFD2  F00B         	goto	u5771
  8659  0017A0  EFD4  F00B         	goto	u5770
  8660  0017A4                     u5771:
  8661  0017A4  EFD5  F00B         	goto	l4599
  8662  0017A8                     u5770:
  8663  0017A8                     
  8664                           ; BSR set to: 0
  8665  0017A8  816A               	bsf	___flmul@bexp& (0+255),0,b
  8666  0017AA                     l4599:
  8667                           
  8668                           ; BSR set to: 0
  8669  0017AA  516A               	movf	___flmul@bexp& (0+255),w,b
  8670  0017AC  B4D8               	btfsc	status,2,c
  8671  0017AE  EFDB  F00B         	goto	u5781
  8672  0017B2  EFDD  F00B         	goto	u5780
  8673  0017B6                     u5781:
  8674  0017B6  EFF0  F00B         	goto	l4607
  8675  0017BA                     u5780:
  8676  0017BA                     
  8677                           ; BSR set to: 0
  8678  0017BA  296A               	incf	___flmul@bexp& (0+255),w,b
  8679  0017BC  A4D8               	btfss	status,2,c
  8680  0017BE  EFE3  F00B         	goto	u5791
  8681  0017C2  EFE5  F00B         	goto	u5790
  8682  0017C6                     u5791:
  8683  0017C6  EFED  F00B         	goto	l4605
  8684  0017CA                     u5790:
  8685  0017CA                     
  8686                           ; BSR set to: 0
  8687  0017CA  0E00               	movlw	0
  8688  0017CC  6E3C               	movwf	___flmul@b^0,c
  8689  0017CE  0E00               	movlw	0
  8690  0017D0  6E3D               	movwf	(___flmul@b+1)^0,c
  8691  0017D2  0E00               	movlw	0
  8692  0017D4  6E3E               	movwf	(___flmul@b+2)^0,c
  8693  0017D6  0E00               	movlw	0
  8694  0017D8  6E3F               	movwf	(___flmul@b+3)^0,c
  8695  0017DA                     l4605:
  8696                           
  8697                           ; BSR set to: 0
  8698  0017DA  8E3E               	bsf	(___flmul@b+2)^0,7,c
  8699  0017DC  EFF8  F00B         	goto	l4609
  8700  0017E0                     l4607:
  8701                           
  8702                           ; BSR set to: 0
  8703  0017E0  0E00               	movlw	0
  8704  0017E2  6E3C               	movwf	___flmul@b^0,c
  8705  0017E4  0E00               	movlw	0
  8706  0017E6  6E3D               	movwf	(___flmul@b+1)^0,c
  8707  0017E8  0E00               	movlw	0
  8708  0017EA  6E3E               	movwf	(___flmul@b+2)^0,c
  8709  0017EC  0E00               	movlw	0
  8710  0017EE  6E3F               	movwf	(___flmul@b+3)^0,c
  8711  0017F0                     l4609:
  8712                           
  8713                           ; BSR set to: 0
  8714  0017F0  5043               	movf	(___flmul@a+3)^0,w,c
  8715  0017F2  0B80               	andlw	128
  8716  0017F4  1B64               	xorwf	___flmul@sign& (0+255),f,b
  8717  0017F6                     
  8718                           ; BSR set to: 0
  8719  0017F6  5043               	movf	(___flmul@a+3)^0,w,c
  8720  0017F8  2443               	addwf	(___flmul@a+3)^0,w,c
  8721  0017FA  6F65               	movwf	___flmul@aexp& (0+255),b
  8722  0017FC                     
  8723                           ; BSR set to: 0
  8724  0017FC  AE42               	btfss	(___flmul@a+2)^0,7,c
  8725  0017FE  EF03  F00C         	goto	u5801
  8726  001802  EF05  F00C         	goto	u5800
  8727  001806                     u5801:
  8728  001806  EF06  F00C         	goto	l4617
  8729  00180A                     u5800:
  8730  00180A                     
  8731                           ; BSR set to: 0
  8732  00180A  8165               	bsf	___flmul@aexp& (0+255),0,b
  8733  00180C                     l4617:
  8734                           
  8735                           ; BSR set to: 0
  8736  00180C  5165               	movf	___flmul@aexp& (0+255),w,b
  8737  00180E  B4D8               	btfsc	status,2,c
  8738  001810  EF0C  F00C         	goto	u5811
  8739  001814  EF0E  F00C         	goto	u5810
  8740  001818                     u5811:
  8741  001818  EF21  F00C         	goto	l4625
  8742  00181C                     u5810:
  8743  00181C                     
  8744                           ; BSR set to: 0
  8745  00181C  2965               	incf	___flmul@aexp& (0+255),w,b
  8746  00181E  A4D8               	btfss	status,2,c
  8747  001820  EF14  F00C         	goto	u5821
  8748  001824  EF16  F00C         	goto	u5820
  8749  001828                     u5821:
  8750  001828  EF1E  F00C         	goto	l4623
  8751  00182C                     u5820:
  8752  00182C                     
  8753                           ; BSR set to: 0
  8754  00182C  0E00               	movlw	0
  8755  00182E  6E40               	movwf	___flmul@a^0,c
  8756  001830  0E00               	movlw	0
  8757  001832  6E41               	movwf	(___flmul@a+1)^0,c
  8758  001834  0E00               	movlw	0
  8759  001836  6E42               	movwf	(___flmul@a+2)^0,c
  8760  001838  0E00               	movlw	0
  8761  00183A  6E43               	movwf	(___flmul@a+3)^0,c
  8762  00183C                     l4623:
  8763                           
  8764                           ; BSR set to: 0
  8765  00183C  8E42               	bsf	(___flmul@a+2)^0,7,c
  8766  00183E  EF29  F00C         	goto	l757
  8767  001842                     l4625:
  8768                           
  8769                           ; BSR set to: 0
  8770  001842  0E00               	movlw	0
  8771  001844  6E40               	movwf	___flmul@a^0,c
  8772  001846  0E00               	movlw	0
  8773  001848  6E41               	movwf	(___flmul@a+1)^0,c
  8774  00184A  0E00               	movlw	0
  8775  00184C  6E42               	movwf	(___flmul@a+2)^0,c
  8776  00184E  0E00               	movlw	0
  8777  001850  6E43               	movwf	(___flmul@a+3)^0,c
  8778  001852                     l757:
  8779                           
  8780                           ; BSR set to: 0
  8781  001852  5165               	movf	___flmul@aexp& (0+255),w,b
  8782  001854  B4D8               	btfsc	status,2,c
  8783  001856  EF2F  F00C         	goto	u5831
  8784  00185A  EF31  F00C         	goto	u5830
  8785  00185E                     u5831:
  8786  00185E  EF39  F00C         	goto	l4629
  8787  001862                     u5830:
  8788  001862                     
  8789                           ; BSR set to: 0
  8790  001862  516A               	movf	___flmul@bexp& (0+255),w,b
  8791  001864  A4D8               	btfss	status,2,c
  8792  001866  EF37  F00C         	goto	u5841
  8793  00186A  EF39  F00C         	goto	u5840
  8794  00186E                     u5841:
  8795  00186E  EF43  F00C         	goto	l4633
  8796  001872                     u5840:
  8797  001872                     l4629:
  8798                           
  8799                           ; BSR set to: 0
  8800  001872  0E00               	movlw	0
  8801  001874  6E3C               	movwf	?___flmul^0,c
  8802  001876  0E00               	movlw	0
  8803  001878  6E3D               	movwf	(?___flmul+1)^0,c
  8804  00187A  0E00               	movlw	0
  8805  00187C  6E3E               	movwf	(?___flmul+2)^0,c
  8806  00187E  0E00               	movlw	0
  8807  001880  6E3F               	movwf	(?___flmul+3)^0,c
  8808  001882  EFDB  F00D         	goto	l761
  8809  001886                     l4633:
  8810                           
  8811                           ; BSR set to: 0
  8812  001886  5042               	movf	(___flmul@a+2)^0,w,c
  8813  001888  023C               	mulwf	___flmul@b^0,c
  8814  00188A  CFF3 F06F          	movff	prodl,___flmul@temp
  8815  00188E  CFF4 F070          	movff	prodh,___flmul@temp+1
  8816  001892                     
  8817                           ; BSR set to: 0
  8818  001892  516F               	movf	___flmul@temp& (0+255),w,b
  8819  001894  6F66               	movwf	___flmul@grs& (0+255),b
  8820  001896  6B67               	clrf	(___flmul@grs+1)& (0+255),b
  8821  001898  6B68               	clrf	(___flmul@grs+2)& (0+255),b
  8822  00189A  6B69               	clrf	(___flmul@grs+3)& (0+255),b
  8823  00189C                     
  8824                           ; BSR set to: 0
  8825  00189C  5170               	movf	(___flmul@temp+1)& (0+255),w,b
  8826  00189E  6F6B               	movwf	___flmul@prod& (0+255),b
  8827  0018A0  6B6C               	clrf	(___flmul@prod+1)& (0+255),b
  8828  0018A2  6B6D               	clrf	(___flmul@prod+2)& (0+255),b
  8829  0018A4  6B6E               	clrf	(___flmul@prod+3)& (0+255),b
  8830  0018A6  5041               	movf	(___flmul@a+1)^0,w,c
  8831  0018A8  023D               	mulwf	(___flmul@b+1)^0,c
  8832  0018AA  CFF3 F06F          	movff	prodl,___flmul@temp
  8833  0018AE  CFF4 F070          	movff	prodh,___flmul@temp+1
  8834  0018B2                     
  8835                           ; BSR set to: 0
  8836  0018B2  516F               	movf	___flmul@temp& (0+255),w,b
  8837  0018B4  2766               	addwf	___flmul@grs& (0+255),f,b
  8838  0018B6  0E00               	movlw	0
  8839  0018B8  2367               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8840  0018BA  2368               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8841  0018BC  2369               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8842  0018BE                     
  8843                           ; BSR set to: 0
  8844  0018BE  5170               	movf	(___flmul@temp+1)& (0+255),w,b
  8845  0018C0  276B               	addwf	___flmul@prod& (0+255),f,b
  8846  0018C2  0E00               	movlw	0
  8847  0018C4  236C               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8848  0018C6  236D               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8849  0018C8  236E               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8850  0018CA  5040               	movf	___flmul@a^0,w,c
  8851  0018CC  023E               	mulwf	(___flmul@b+2)^0,c
  8852  0018CE  CFF3 F06F          	movff	prodl,___flmul@temp
  8853  0018D2  CFF4 F070          	movff	prodh,___flmul@temp+1
  8854  0018D6                     
  8855                           ; BSR set to: 0
  8856  0018D6  516F               	movf	___flmul@temp& (0+255),w,b
  8857  0018D8  2766               	addwf	___flmul@grs& (0+255),f,b
  8858  0018DA  0E00               	movlw	0
  8859  0018DC  2367               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8860  0018DE  2368               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8861  0018E0  2369               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8862  0018E2                     
  8863                           ; BSR set to: 0
  8864  0018E2  5170               	movf	(___flmul@temp+1)& (0+255),w,b
  8865  0018E4  276B               	addwf	___flmul@prod& (0+255),f,b
  8866  0018E6  0E00               	movlw	0
  8867  0018E8  236C               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8868  0018EA  236D               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8869  0018EC  236E               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8870  0018EE                     
  8871                           ; BSR set to: 0
  8872  0018EE  C068  F069         	movff	___flmul@grs+2,___flmul@grs+3
  8873  0018F2  C067  F068         	movff	___flmul@grs+1,___flmul@grs+2
  8874  0018F6  C066  F067         	movff	___flmul@grs,___flmul@grs+1
  8875  0018FA  6B66               	clrf	___flmul@grs& (0+255),b
  8876  0018FC                     
  8877                           ; BSR set to: 0
  8878  0018FC  5040               	movf	___flmul@a^0,w,c
  8879  0018FE  023D               	mulwf	(___flmul@b+1)^0,c
  8880  001900  CFF3 F06F          	movff	prodl,___flmul@temp
  8881  001904  CFF4 F070          	movff	prodh,___flmul@temp+1
  8882  001908                     
  8883                           ; BSR set to: 0
  8884  001908  516F               	movf	___flmul@temp& (0+255),w,b
  8885  00190A  2766               	addwf	___flmul@grs& (0+255),f,b
  8886  00190C  5170               	movf	(___flmul@temp+1)& (0+255),w,b
  8887  00190E  2367               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8888  001910  0E00               	movlw	0
  8889  001912  2368               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8890  001914  0E00               	movlw	0
  8891  001916  2369               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8892  001918                     
  8893                           ; BSR set to: 0
  8894  001918  5041               	movf	(___flmul@a+1)^0,w,c
  8895  00191A  023C               	mulwf	___flmul@b^0,c
  8896  00191C  CFF3 F06F          	movff	prodl,___flmul@temp
  8897  001920  CFF4 F070          	movff	prodh,___flmul@temp+1
  8898  001924                     
  8899                           ; BSR set to: 0
  8900  001924  516F               	movf	___flmul@temp& (0+255),w,b
  8901  001926  2766               	addwf	___flmul@grs& (0+255),f,b
  8902  001928  5170               	movf	(___flmul@temp+1)& (0+255),w,b
  8903  00192A  2367               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8904  00192C  0E00               	movlw	0
  8905  00192E  2368               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8906  001930  0E00               	movlw	0
  8907  001932  2369               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8908  001934                     
  8909                           ; BSR set to: 0
  8910  001934  C068  F069         	movff	___flmul@grs+2,___flmul@grs+3
  8911  001938  C067  F068         	movff	___flmul@grs+1,___flmul@grs+2
  8912  00193C  C066  F067         	movff	___flmul@grs,___flmul@grs+1
  8913  001940  6B66               	clrf	___flmul@grs& (0+255),b
  8914  001942  5040               	movf	___flmul@a^0,w,c
  8915  001944  023C               	mulwf	___flmul@b^0,c
  8916  001946  CFF3 F06F          	movff	prodl,___flmul@temp
  8917  00194A  CFF4 F070          	movff	prodh,___flmul@temp+1
  8918  00194E                     
  8919                           ; BSR set to: 0
  8920  00194E  516F               	movf	___flmul@temp& (0+255),w,b
  8921  001950  2766               	addwf	___flmul@grs& (0+255),f,b
  8922  001952  5170               	movf	(___flmul@temp+1)& (0+255),w,b
  8923  001954  2367               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8924  001956  0E00               	movlw	0
  8925  001958  2368               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8926  00195A  0E00               	movlw	0
  8927  00195C  2369               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8928  00195E                     
  8929                           ; BSR set to: 0
  8930  00195E  5042               	movf	(___flmul@a+2)^0,w,c
  8931  001960  023D               	mulwf	(___flmul@b+1)^0,c
  8932  001962  CFF3 F06F          	movff	prodl,___flmul@temp
  8933  001966  CFF4 F070          	movff	prodh,___flmul@temp+1
  8934  00196A  516F               	movf	___flmul@temp& (0+255),w,b
  8935  00196C  276B               	addwf	___flmul@prod& (0+255),f,b
  8936  00196E  5170               	movf	(___flmul@temp+1)& (0+255),w,b
  8937  001970  236C               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8938  001972  0E00               	movlw	0
  8939  001974  236D               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8940  001976  0E00               	movlw	0
  8941  001978  236E               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8942  00197A                     
  8943                           ; BSR set to: 0
  8944  00197A  5041               	movf	(___flmul@a+1)^0,w,c
  8945  00197C  023E               	mulwf	(___flmul@b+2)^0,c
  8946  00197E  CFF3 F06F          	movff	prodl,___flmul@temp
  8947  001982  CFF4 F070          	movff	prodh,___flmul@temp+1
  8948  001986                     
  8949                           ; BSR set to: 0
  8950  001986  516F               	movf	___flmul@temp& (0+255),w,b
  8951  001988  276B               	addwf	___flmul@prod& (0+255),f,b
  8952  00198A  5170               	movf	(___flmul@temp+1)& (0+255),w,b
  8953  00198C  236C               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8954  00198E  0E00               	movlw	0
  8955  001990  236D               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8956  001992  0E00               	movlw	0
  8957  001994  236E               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8958  001996  5042               	movf	(___flmul@a+2)^0,w,c
  8959  001998  023E               	mulwf	(___flmul@b+2)^0,c
  8960  00199A  CFF3 F06F          	movff	prodl,___flmul@temp
  8961  00199E  CFF4 F070          	movff	prodh,___flmul@temp+1
  8962  0019A2                     
  8963                           ; BSR set to: 0
  8964  0019A2  516F               	movf	___flmul@temp& (0+255),w,b
  8965  0019A4  6F60               	movwf	??___flmul& (0+255),b
  8966  0019A6  5170               	movf	(___flmul@temp+1)& (0+255),w,b
  8967  0019A8  6F61               	movwf	(??___flmul+1)& (0+255),b
  8968  0019AA  6B62               	clrf	(??___flmul+2)& (0+255),b
  8969  0019AC  6B63               	clrf	(??___flmul+3)& (0+255),b
  8970  0019AE  C062  F063         	movff	??___flmul+2,??___flmul+3
  8971  0019B2  C061  F062         	movff	??___flmul+1,??___flmul+2
  8972  0019B6  C060  F061         	movff	??___flmul,??___flmul+1
  8973  0019BA  6B60               	clrf	??___flmul& (0+255),b
  8974  0019BC  5160               	movf	??___flmul& (0+255),w,b
  8975  0019BE  276B               	addwf	___flmul@prod& (0+255),f,b
  8976  0019C0  5161               	movf	(??___flmul+1)& (0+255),w,b
  8977  0019C2  236C               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8978  0019C4  5162               	movf	(??___flmul+2)& (0+255),w,b
  8979  0019C6  236D               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8980  0019C8  5163               	movf	(??___flmul+3)& (0+255),w,b
  8981  0019CA  236E               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8982  0019CC                     
  8983                           ; BSR set to: 0
  8984  0019CC  C066  F060         	movff	___flmul@grs,??___flmul
  8985  0019D0  C067  F061         	movff	___flmul@grs+1,??___flmul+1
  8986  0019D4  C068  F062         	movff	___flmul@grs+2,??___flmul+2
  8987  0019D8  C069  F063         	movff	___flmul@grs+3,??___flmul+3
  8988  0019DC  0E19               	movlw	25
  8989  0019DE  EFF6  F00C         	goto	u5850
  8990  0019E2                     u5855:
  8991  0019E2  90D8               	bcf	status,0,c
  8992  0019E4  3363               	rrcf	(??___flmul+3)& (0+255),f,b
  8993  0019E6  3362               	rrcf	(??___flmul+2)& (0+255),f,b
  8994  0019E8  3361               	rrcf	(??___flmul+1)& (0+255),f,b
  8995  0019EA  3360               	rrcf	??___flmul& (0+255),f,b
  8996  0019EC                     u5850:
  8997  0019EC  2EE8               	decfsz	wreg,f,c
  8998  0019EE  EFF1  F00C         	goto	u5855
  8999  0019F2  5160               	movf	??___flmul& (0+255),w,b
  9000  0019F4  276B               	addwf	___flmul@prod& (0+255),f,b
  9001  0019F6  5161               	movf	(??___flmul+1)& (0+255),w,b
  9002  0019F8  236C               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9003  0019FA  5162               	movf	(??___flmul+2)& (0+255),w,b
  9004  0019FC  236D               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9005  0019FE  5163               	movf	(??___flmul+3)& (0+255),w,b
  9006  001A00  236E               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9007  001A02                     
  9008                           ; BSR set to: 0
  9009  001A02  C068  F069         	movff	___flmul@grs+2,___flmul@grs+3
  9010  001A06  C067  F068         	movff	___flmul@grs+1,___flmul@grs+2
  9011  001A0A  C066  F067         	movff	___flmul@grs,___flmul@grs+1
  9012  001A0E  6B66               	clrf	___flmul@grs& (0+255),b
  9013  001A10                     
  9014                           ; BSR set to: 0
  9015  001A10  5165               	movf	___flmul@aexp& (0+255),w,b
  9016  001A12  C06A  F060         	movff	___flmul@bexp,??___flmul
  9017  001A16  6B61               	clrf	(??___flmul+1)& (0+255),b
  9018  001A18  2760               	addwf	??___flmul& (0+255),f,b
  9019  001A1A  0E00               	movlw	0
  9020  001A1C  2361               	addwfc	(??___flmul+1)& (0+255),f,b
  9021  001A1E  0E82               	movlw	130
  9022  001A20  2560               	addwf	??___flmul& (0+255),w,b
  9023  001A22  6F6F               	movwf	___flmul@temp& (0+255),b
  9024  001A24  0EFF               	movlw	255
  9025  001A26  2161               	addwfc	(??___flmul+1)& (0+255),w,b
  9026  001A28  6F70               	movwf	(___flmul@temp+1)& (0+255),b
  9027  001A2A  EF2C  F00D         	goto	l4681
  9028  001A2E                     l4675:
  9029                           
  9030                           ; BSR set to: 0
  9031  001A2E  90D8               	bcf	status,0,c
  9032  001A30  376B               	rlcf	___flmul@prod& (0+255),f,b
  9033  001A32  376C               	rlcf	(___flmul@prod+1)& (0+255),f,b
  9034  001A34  376D               	rlcf	(___flmul@prod+2)& (0+255),f,b
  9035  001A36  376E               	rlcf	(___flmul@prod+3)& (0+255),f,b
  9036  001A38                     
  9037                           ; BSR set to: 0
  9038  001A38  AF69               	btfss	(___flmul@grs+3)& (0+255),7,b
  9039  001A3A  EF21  F00D         	goto	u5861
  9040  001A3E  EF23  F00D         	goto	u5860
  9041  001A42                     u5861:
  9042  001A42  EF24  F00D         	goto	l764
  9043  001A46                     u5860:
  9044  001A46                     
  9045                           ; BSR set to: 0
  9046  001A46  816B               	bsf	___flmul@prod& (0+255),0,b
  9047  001A48                     l764:
  9048                           
  9049                           ; BSR set to: 0
  9050  001A48  90D8               	bcf	status,0,c
  9051  001A4A  3766               	rlcf	___flmul@grs& (0+255),f,b
  9052  001A4C  3767               	rlcf	(___flmul@grs+1)& (0+255),f,b
  9053  001A4E  3768               	rlcf	(___flmul@grs+2)& (0+255),f,b
  9054  001A50  3769               	rlcf	(___flmul@grs+3)& (0+255),f,b
  9055  001A52  076F               	decf	___flmul@temp& (0+255),f,b
  9056  001A54  A0D8               	btfss	status,0,c
  9057  001A56  0770               	decf	(___flmul@temp+1)& (0+255),f,b
  9058  001A58                     l4681:
  9059                           
  9060                           ; BSR set to: 0
  9061  001A58  AF6D               	btfss	(___flmul@prod+2)& (0+255),7,b
  9062  001A5A  EF31  F00D         	goto	u5871
  9063  001A5E  EF33  F00D         	goto	u5870
  9064  001A62                     u5871:
  9065  001A62  EF17  F00D         	goto	l4675
  9066  001A66                     u5870:
  9067  001A66                     
  9068                           ; BSR set to: 0
  9069  001A66  0E00               	movlw	0
  9070  001A68  6F65               	movwf	___flmul@aexp& (0+255),b
  9071  001A6A                     
  9072                           ; BSR set to: 0
  9073  001A6A  AF69               	btfss	(___flmul@grs+3)& (0+255),7,b
  9074  001A6C  EF3A  F00D         	goto	u5881
  9075  001A70  EF3C  F00D         	goto	u5880
  9076  001A74                     u5881:
  9077  001A74  EF60  F00D         	goto	l766
  9078  001A78                     u5880:
  9079  001A78                     
  9080                           ; BSR set to: 0
  9081  001A78  0EFF               	movlw	255
  9082  001A7A  1566               	andwf	___flmul@grs& (0+255),w,b
  9083  001A7C  6F60               	movwf	??___flmul& (0+255),b
  9084  001A7E  0EFF               	movlw	255
  9085  001A80  1567               	andwf	(___flmul@grs+1)& (0+255),w,b
  9086  001A82  6F61               	movwf	(??___flmul+1)& (0+255),b
  9087  001A84  0EFF               	movlw	255
  9088  001A86  1568               	andwf	(___flmul@grs+2)& (0+255),w,b
  9089  001A88  6F62               	movwf	(??___flmul+2)& (0+255),b
  9090  001A8A  0E7F               	movlw	127
  9091  001A8C  1569               	andwf	(___flmul@grs+3)& (0+255),w,b
  9092  001A8E  6F63               	movwf	(??___flmul+3)& (0+255),b
  9093  001A90  5160               	movf	??___flmul& (0+255),w,b
  9094  001A92  1161               	iorwf	(??___flmul+1)& (0+255),w,b
  9095  001A94  1162               	iorwf	(??___flmul+2)& (0+255),w,b
  9096  001A96  1163               	iorwf	(??___flmul+3)& (0+255),w,b
  9097  001A98  B4D8               	btfsc	status,2,c
  9098  001A9A  EF51  F00D         	goto	u5891
  9099  001A9E  EF53  F00D         	goto	u5890
  9100  001AA2                     u5891:
  9101  001AA2  EF57  F00D         	goto	l767
  9102  001AA6                     u5890:
  9103  001AA6                     l4689:
  9104                           
  9105                           ; BSR set to: 0
  9106  001AA6  0E01               	movlw	1
  9107  001AA8  6F65               	movwf	___flmul@aexp& (0+255),b
  9108  001AAA  EF60  F00D         	goto	l766
  9109  001AAE                     l767:
  9110                           
  9111                           ; BSR set to: 0
  9112  001AAE  A16B               	btfss	___flmul@prod& (0+255),0,b
  9113  001AB0  EF5C  F00D         	goto	u5901
  9114  001AB4  EF5E  F00D         	goto	u5900
  9115  001AB8                     u5901:
  9116  001AB8  EF60  F00D         	goto	l766
  9117  001ABC                     u5900:
  9118  001ABC  EF53  F00D         	goto	l4689
  9119  001AC0                     l766:
  9120                           
  9121                           ; BSR set to: 0
  9122  001AC0  5165               	movf	___flmul@aexp& (0+255),w,b
  9123  001AC2  B4D8               	btfsc	status,2,c
  9124  001AC4  EF66  F00D         	goto	u5911
  9125  001AC8  EF68  F00D         	goto	u5910
  9126  001ACC                     u5911:
  9127  001ACC  EF8C  F00D         	goto	l4701
  9128  001AD0                     u5910:
  9129  001AD0                     
  9130                           ; BSR set to: 0
  9131  001AD0  0E01               	movlw	1
  9132  001AD2  276B               	addwf	___flmul@prod& (0+255),f,b
  9133  001AD4  0E00               	movlw	0
  9134  001AD6  236C               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9135  001AD8  236D               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9136  001ADA  236E               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9137  001ADC                     
  9138                           ; BSR set to: 0
  9139  001ADC  A16E               	btfss	(___flmul@prod+3)& (0+255),0,b
  9140  001ADE  EF73  F00D         	goto	u5921
  9141  001AE2  EF75  F00D         	goto	u5920
  9142  001AE6                     u5921:
  9143  001AE6  EF8C  F00D         	goto	l4701
  9144  001AEA                     u5920:
  9145  001AEA                     
  9146                           ; BSR set to: 0
  9147  001AEA  C06B  F060         	movff	___flmul@prod,??___flmul
  9148  001AEE  C06C  F061         	movff	___flmul@prod+1,??___flmul+1
  9149  001AF2  C06D  F062         	movff	___flmul@prod+2,??___flmul+2
  9150  001AF6  C06E  F063         	movff	___flmul@prod+3,??___flmul+3
  9151  001AFA  3563               	rlcf	(??___flmul+3)& (0+255),w,b
  9152  001AFC  3363               	rrcf	(??___flmul+3)& (0+255),f,b
  9153  001AFE  3362               	rrcf	(??___flmul+2)& (0+255),f,b
  9154  001B00  3361               	rrcf	(??___flmul+1)& (0+255),f,b
  9155  001B02  3360               	rrcf	??___flmul& (0+255),f,b
  9156  001B04  C060  F06B         	movff	??___flmul,___flmul@prod
  9157  001B08  C061  F06C         	movff	??___flmul+1,___flmul@prod+1
  9158  001B0C  C062  F06D         	movff	??___flmul+2,___flmul@prod+2
  9159  001B10  C063  F06E         	movff	??___flmul+3,___flmul@prod+3
  9160  001B14                     
  9161                           ; BSR set to: 0
  9162  001B14  4B6F               	infsnz	___flmul@temp& (0+255),f,b
  9163  001B16  2B70               	incf	(___flmul@temp+1)& (0+255),f,b
  9164  001B18                     l4701:
  9165                           
  9166                           ; BSR set to: 0
  9167  001B18  BF70               	btfsc	(___flmul@temp+1)& (0+255),7,b
  9168  001B1A  EF97  F00D         	goto	u5931
  9169  001B1E  5170               	movf	(___flmul@temp+1)& (0+255),w,b
  9170  001B20  E108               	bnz	u5930
  9171  001B22  296F               	incf	___flmul@temp& (0+255),w,b
  9172  001B24  A0D8               	btfss	status,0,c
  9173  001B26  EF97  F00D         	goto	u5931
  9174  001B2A  EF99  F00D         	goto	u5930
  9175  001B2E                     u5931:
  9176  001B2E  EFA3  F00D         	goto	l4705
  9177  001B32                     u5930:
  9178  001B32                     
  9179                           ; BSR set to: 0
  9180  001B32  0E00               	movlw	0
  9181  001B34  6F6B               	movwf	___flmul@prod& (0+255),b
  9182  001B36  0E00               	movlw	0
  9183  001B38  6F6C               	movwf	(___flmul@prod+1)& (0+255),b
  9184  001B3A  0E80               	movlw	128
  9185  001B3C  6F6D               	movwf	(___flmul@prod+2)& (0+255),b
  9186  001B3E  0E7F               	movlw	127
  9187  001B40  6F6E               	movwf	(___flmul@prod+3)& (0+255),b
  9188  001B42  EFD1  F00D         	goto	l4717
  9189  001B46                     l4705:
  9190                           
  9191                           ; BSR set to: 0
  9192  001B46  BF70               	btfsc	(___flmul@temp+1)& (0+255),7,b
  9193  001B48  EFB0  F00D         	goto	u5940
  9194  001B4C  5170               	movf	(___flmul@temp+1)& (0+255),w,b
  9195  001B4E  E106               	bnz	u5941
  9196  001B50  056F               	decf	___flmul@temp& (0+255),w,b
  9197  001B52  B0D8               	btfsc	status,0,c
  9198  001B54  EFAE  F00D         	goto	u5941
  9199  001B58  EFB0  F00D         	goto	u5940
  9200  001B5C                     u5941:
  9201  001B5C  EFBC  F00D         	goto	l774
  9202  001B60                     u5940:
  9203  001B60                     
  9204                           ; BSR set to: 0
  9205  001B60  0E00               	movlw	0
  9206  001B62  6F6B               	movwf	___flmul@prod& (0+255),b
  9207  001B64  0E00               	movlw	0
  9208  001B66  6F6C               	movwf	(___flmul@prod+1)& (0+255),b
  9209  001B68  0E00               	movlw	0
  9210  001B6A  6F6D               	movwf	(___flmul@prod+2)& (0+255),b
  9211  001B6C  0E00               	movlw	0
  9212  001B6E  6F6E               	movwf	(___flmul@prod+3)& (0+255),b
  9213  001B70  0E00               	movlw	0
  9214  001B72  6F64               	movwf	___flmul@sign& (0+255),b
  9215  001B74  EFD1  F00D         	goto	l4717
  9216  001B78                     l774:
  9217                           
  9218                           ; BSR set to: 0
  9219  001B78  C06F  F06A         	movff	___flmul@temp,___flmul@bexp
  9220  001B7C                     
  9221                           ; BSR set to: 0
  9222  001B7C  0EFF               	movlw	255
  9223  001B7E  176B               	andwf	___flmul@prod& (0+255),f,b
  9224  001B80  0EFF               	movlw	255
  9225  001B82  176C               	andwf	(___flmul@prod+1)& (0+255),f,b
  9226  001B84  0E7F               	movlw	127
  9227  001B86  176D               	andwf	(___flmul@prod+2)& (0+255),f,b
  9228  001B88  0E00               	movlw	0
  9229  001B8A  176E               	andwf	(___flmul@prod+3)& (0+255),f,b
  9230  001B8C                     
  9231                           ; BSR set to: 0
  9232  001B8C  A16A               	btfss	___flmul@bexp& (0+255),0,b
  9233  001B8E  EFCB  F00D         	goto	u5951
  9234  001B92  EFCD  F00D         	goto	u5950
  9235  001B96                     u5951:
  9236  001B96  EFCE  F00D         	goto	l4715
  9237  001B9A                     u5950:
  9238  001B9A                     
  9239                           ; BSR set to: 0
  9240  001B9A  8F6D               	bsf	(___flmul@prod+2)& (0+255),7,b
  9241  001B9C                     l4715:
  9242                           
  9243                           ; BSR set to: 0
  9244  001B9C  90D8               	bcf	status,0,c
  9245  001B9E  316A               	rrcf	___flmul@bexp& (0+255),w,b
  9246  001BA0  6F6E               	movwf	(___flmul@prod+3)& (0+255),b
  9247  001BA2                     l4717:
  9248                           
  9249                           ; BSR set to: 0
  9250  001BA2  5164               	movf	___flmul@sign& (0+255),w,b
  9251  001BA4  136E               	iorwf	(___flmul@prod+3)& (0+255),f,b
  9252  001BA6                     
  9253                           ; BSR set to: 0
  9254  001BA6  C06B  F03C         	movff	___flmul@prod,?___flmul
  9255  001BAA  C06C  F03D         	movff	___flmul@prod+1,?___flmul+1
  9256  001BAE  C06D  F03E         	movff	___flmul@prod+2,?___flmul+2
  9257  001BB2  C06E  F03F         	movff	___flmul@prod+3,?___flmul+3
  9258  001BB6                     l761:
  9259                           
  9260                           ; BSR set to: 0
  9261  001BB6  0012               	return		;funcret
  9262  001BB8                     __end_of___flmul:
  9263                           	callstack 0
  9264                           
  9265 ;; *************** function ___fldiv *****************
  9266 ;; Defined at:
  9267 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcdiv.c"
  9268 ;; Parameters:    Size  Location     Type
  9269 ;;  b               4   34[COMRAM] unsigned char 
  9270 ;;  a               4   38[COMRAM] unsigned char 
  9271 ;; Auto vars:     Size  Location     Type
  9272 ;;  grs             4   53[COMRAM] unsigned long 
  9273 ;;  rem             4   46[COMRAM] unsigned long 
  9274 ;;  new_exp         2   51[COMRAM] short 
  9275 ;;  aexp            1   58[COMRAM] unsigned char 
  9276 ;;  bexp            1   57[COMRAM] unsigned char 
  9277 ;;  sign            1   50[COMRAM] unsigned char 
  9278 ;; Return value:  Size  Location     Type
  9279 ;;                  4   34[COMRAM] unsigned char 
  9280 ;; Registers used:
  9281 ;;		wreg, status,2, status,0
  9282 ;; Tracked objects:
  9283 ;;		On entry : 0/0
  9284 ;;		On exit  : 0/0
  9285 ;;		Unchanged: 0/0
  9286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9287 ;;      Params:         8       0       0       0       0       0       0
  9288 ;;      Locals:        13       0       0       0       0       0       0
  9289 ;;      Temps:          4       0       0       0       0       0       0
  9290 ;;      Totals:        25       0       0       0       0       0       0
  9291 ;;Total ram usage:       25 bytes
  9292 ;; Hardware stack levels used: 1
  9293 ;; Hardware stack levels required when called: 2
  9294 ;; This function calls:
  9295 ;;		Nothing
  9296 ;; This function is called by:
  9297 ;;		_calc_time_interrupt
  9298 ;;		_main
  9299 ;;		_efgtoa
  9300 ;; This function uses a non-reentrant model
  9301 ;;
  9302                           
  9303                           	psect	text35
  9304  001BB8                     __ptext35:
  9305                           	callstack 0
  9306  001BB8                     ___fldiv:
  9307                           	callstack 24
  9308  001BB8  5026               	movf	(___fldiv@b+3)^0,w,c
  9309  001BBA  0B80               	andlw	128
  9310  001BBC  6E33               	movwf	___fldiv@sign^0,c
  9311  001BBE  5026               	movf	(___fldiv@b+3)^0,w,c
  9312  001BC0  2426               	addwf	(___fldiv@b+3)^0,w,c
  9313  001BC2  6E3A               	movwf	___fldiv@bexp^0,c
  9314  001BC4  AE25               	btfss	(___fldiv@b+2)^0,7,c
  9315  001BC6  EFE7  F00D         	goto	u5541
  9316  001BCA  EFE9  F00D         	goto	u5540
  9317  001BCE                     u5541:
  9318  001BCE  EFEA  F00D         	goto	l4461
  9319  001BD2                     u5540:
  9320  001BD2  803A               	bsf	___fldiv@bexp^0,0,c
  9321  001BD4                     l4461:
  9322  001BD4  503A               	movf	___fldiv@bexp^0,w,c
  9323  001BD6  B4D8               	btfsc	status,2,c
  9324  001BD8  EFF0  F00D         	goto	u5551
  9325  001BDC  EFF2  F00D         	goto	u5550
  9326  001BE0                     u5551:
  9327  001BE0  EF07  F00E         	goto	l4471
  9328  001BE4                     u5550:
  9329  001BE4  283A               	incf	___fldiv@bexp^0,w,c
  9330  001BE6  A4D8               	btfss	status,2,c
  9331  001BE8  EFF8  F00D         	goto	u5561
  9332  001BEC  EFFA  F00D         	goto	u5560
  9333  001BF0                     u5561:
  9334  001BF0  EF02  F00E         	goto	l4467
  9335  001BF4                     u5560:
  9336  001BF4  0E00               	movlw	0
  9337  001BF6  6E23               	movwf	___fldiv@b^0,c
  9338  001BF8  0E00               	movlw	0
  9339  001BFA  6E24               	movwf	(___fldiv@b+1)^0,c
  9340  001BFC  0E00               	movlw	0
  9341  001BFE  6E25               	movwf	(___fldiv@b+2)^0,c
  9342  001C00  0E00               	movlw	0
  9343  001C02  6E26               	movwf	(___fldiv@b+3)^0,c
  9344  001C04                     l4467:
  9345  001C04  8E25               	bsf	(___fldiv@b+2)^0,7,c
  9346  001C06  0E00               	movlw	0
  9347  001C08  6E26               	movwf	(___fldiv@b+3)^0,c
  9348  001C0A  EF0F  F00E         	goto	l4473
  9349  001C0E                     l4471:
  9350  001C0E  0E00               	movlw	0
  9351  001C10  6E23               	movwf	___fldiv@b^0,c
  9352  001C12  0E00               	movlw	0
  9353  001C14  6E24               	movwf	(___fldiv@b+1)^0,c
  9354  001C16  0E00               	movlw	0
  9355  001C18  6E25               	movwf	(___fldiv@b+2)^0,c
  9356  001C1A  0E00               	movlw	0
  9357  001C1C  6E26               	movwf	(___fldiv@b+3)^0,c
  9358  001C1E                     l4473:
  9359  001C1E  502A               	movf	(___fldiv@a+3)^0,w,c
  9360  001C20  0B80               	andlw	128
  9361  001C22  1A33               	xorwf	___fldiv@sign^0,f,c
  9362  001C24  502A               	movf	(___fldiv@a+3)^0,w,c
  9363  001C26  242A               	addwf	(___fldiv@a+3)^0,w,c
  9364  001C28  6E3B               	movwf	___fldiv@aexp^0,c
  9365  001C2A  AE29               	btfss	(___fldiv@a+2)^0,7,c
  9366  001C2C  EF1A  F00E         	goto	u5571
  9367  001C30  EF1C  F00E         	goto	u5570
  9368  001C34                     u5571:
  9369  001C34  EF1D  F00E         	goto	l4481
  9370  001C38                     u5570:
  9371  001C38  803B               	bsf	___fldiv@aexp^0,0,c
  9372  001C3A                     l4481:
  9373  001C3A  503B               	movf	___fldiv@aexp^0,w,c
  9374  001C3C  B4D8               	btfsc	status,2,c
  9375  001C3E  EF23  F00E         	goto	u5581
  9376  001C42  EF25  F00E         	goto	u5580
  9377  001C46                     u5581:
  9378  001C46  EF3A  F00E         	goto	l4491
  9379  001C4A                     u5580:
  9380  001C4A  283B               	incf	___fldiv@aexp^0,w,c
  9381  001C4C  A4D8               	btfss	status,2,c
  9382  001C4E  EF2B  F00E         	goto	u5591
  9383  001C52  EF2D  F00E         	goto	u5590
  9384  001C56                     u5591:
  9385  001C56  EF35  F00E         	goto	l4487
  9386  001C5A                     u5590:
  9387  001C5A  0E00               	movlw	0
  9388  001C5C  6E27               	movwf	___fldiv@a^0,c
  9389  001C5E  0E00               	movlw	0
  9390  001C60  6E28               	movwf	(___fldiv@a+1)^0,c
  9391  001C62  0E00               	movlw	0
  9392  001C64  6E29               	movwf	(___fldiv@a+2)^0,c
  9393  001C66  0E00               	movlw	0
  9394  001C68  6E2A               	movwf	(___fldiv@a+3)^0,c
  9395  001C6A                     l4487:
  9396  001C6A  8E29               	bsf	(___fldiv@a+2)^0,7,c
  9397  001C6C  0E00               	movlw	0
  9398  001C6E  6E2A               	movwf	(___fldiv@a+3)^0,c
  9399  001C70  EF42  F00E         	goto	l4493
  9400  001C74                     l4491:
  9401  001C74  0E00               	movlw	0
  9402  001C76  6E27               	movwf	___fldiv@a^0,c
  9403  001C78  0E00               	movlw	0
  9404  001C7A  6E28               	movwf	(___fldiv@a+1)^0,c
  9405  001C7C  0E00               	movlw	0
  9406  001C7E  6E29               	movwf	(___fldiv@a+2)^0,c
  9407  001C80  0E00               	movlw	0
  9408  001C82  6E2A               	movwf	(___fldiv@a+3)^0,c
  9409  001C84                     l4493:
  9410  001C84  5027               	movf	___fldiv@a^0,w,c
  9411  001C86  1028               	iorwf	(___fldiv@a+1)^0,w,c
  9412  001C88  1029               	iorwf	(___fldiv@a+2)^0,w,c
  9413  001C8A  102A               	iorwf	(___fldiv@a+3)^0,w,c
  9414  001C8C  A4D8               	btfss	status,2,c
  9415  001C8E  EF4B  F00E         	goto	u5601
  9416  001C92  EF4D  F00E         	goto	u5600
  9417  001C96                     u5601:
  9418  001C96  EF65  F00E         	goto	l4505
  9419  001C9A                     u5600:
  9420  001C9A  0E00               	movlw	0
  9421  001C9C  6E23               	movwf	___fldiv@b^0,c
  9422  001C9E  0E00               	movlw	0
  9423  001CA0  6E24               	movwf	(___fldiv@b+1)^0,c
  9424  001CA2  0E00               	movlw	0
  9425  001CA4  6E25               	movwf	(___fldiv@b+2)^0,c
  9426  001CA6  0E00               	movlw	0
  9427  001CA8  6E26               	movwf	(___fldiv@b+3)^0,c
  9428  001CAA  0E80               	movlw	128
  9429  001CAC  1225               	iorwf	(___fldiv@b+2)^0,f,c
  9430  001CAE  0E7F               	movlw	127
  9431  001CB0  1226               	iorwf	(___fldiv@b+3)^0,f,c
  9432  001CB2                     l4499:
  9433  001CB2  5033               	movf	___fldiv@sign^0,w,c
  9434  001CB4  1226               	iorwf	(___fldiv@b+3)^0,f,c
  9435  001CB6  C023  F023         	movff	___fldiv@b,?___fldiv
  9436  001CBA  C024  F024         	movff	___fldiv@b+1,?___fldiv+1
  9437  001CBE  C025  F025         	movff	___fldiv@b+2,?___fldiv+2
  9438  001CC2  C026  F026         	movff	___fldiv@b+3,?___fldiv+3
  9439  001CC6  EFA8  F00F         	goto	l725
  9440  001CCA                     l4505:
  9441  001CCA  503A               	movf	___fldiv@bexp^0,w,c
  9442  001CCC  A4D8               	btfss	status,2,c
  9443  001CCE  EF6B  F00E         	goto	u5611
  9444  001CD2  EF6D  F00E         	goto	u5610
  9445  001CD6                     u5611:
  9446  001CD6  EF77  F00E         	goto	l4513
  9447  001CDA                     u5610:
  9448  001CDA  0E00               	movlw	0
  9449  001CDC  6E23               	movwf	?___fldiv^0,c
  9450  001CDE  0E00               	movlw	0
  9451  001CE0  6E24               	movwf	(?___fldiv+1)^0,c
  9452  001CE2  0E00               	movlw	0
  9453  001CE4  6E25               	movwf	(?___fldiv+2)^0,c
  9454  001CE6  0E00               	movlw	0
  9455  001CE8  6E26               	movwf	(?___fldiv+3)^0,c
  9456  001CEA  EFA8  F00F         	goto	l725
  9457  001CEE                     l4513:
  9458  001CEE  503B               	movf	___fldiv@aexp^0,w,c
  9459  001CF0  C03A  F02B         	movff	___fldiv@bexp,??___fldiv
  9460  001CF4  6A2C               	clrf	(??___fldiv+1)^0,c
  9461  001CF6  5E2B               	subwf	??___fldiv^0,f,c
  9462  001CF8  0E00               	movlw	0
  9463  001CFA  5A2C               	subwfb	(??___fldiv+1)^0,f,c
  9464  001CFC  0E7F               	movlw	127
  9465  001CFE  242B               	addwf	??___fldiv^0,w,c
  9466  001D00  6E34               	movwf	___fldiv@new_exp^0,c
  9467  001D02  0E00               	movlw	0
  9468  001D04  202C               	addwfc	(??___fldiv+1)^0,w,c
  9469  001D06  6E35               	movwf	(___fldiv@new_exp+1)^0,c
  9470  001D08  C023  F02F         	movff	___fldiv@b,___fldiv@rem
  9471  001D0C  C024  F030         	movff	___fldiv@b+1,___fldiv@rem+1
  9472  001D10  C025  F031         	movff	___fldiv@b+2,___fldiv@rem+2
  9473  001D14  C026  F032         	movff	___fldiv@b+3,___fldiv@rem+3
  9474  001D18  0E00               	movlw	0
  9475  001D1A  6E23               	movwf	___fldiv@b^0,c
  9476  001D1C  0E00               	movlw	0
  9477  001D1E  6E24               	movwf	(___fldiv@b+1)^0,c
  9478  001D20  0E00               	movlw	0
  9479  001D22  6E25               	movwf	(___fldiv@b+2)^0,c
  9480  001D24  0E00               	movlw	0
  9481  001D26  6E26               	movwf	(___fldiv@b+3)^0,c
  9482  001D28  0E00               	movlw	0
  9483  001D2A  6E36               	movwf	___fldiv@grs^0,c
  9484  001D2C  0E00               	movlw	0
  9485  001D2E  6E37               	movwf	(___fldiv@grs+1)^0,c
  9486  001D30  0E00               	movlw	0
  9487  001D32  6E38               	movwf	(___fldiv@grs+2)^0,c
  9488  001D34  0E00               	movlw	0
  9489  001D36  6E39               	movwf	(___fldiv@grs+3)^0,c
  9490  001D38  0E00               	movlw	0
  9491  001D3A  6E3B               	movwf	___fldiv@aexp^0,c
  9492  001D3C  EFD8  F00E         	goto	l727
  9493  001D40                     l4523:
  9494  001D40  503B               	movf	___fldiv@aexp^0,w,c
  9495  001D42  B4D8               	btfsc	status,2,c
  9496  001D44  EFA6  F00E         	goto	u5621
  9497  001D48  EFA8  F00E         	goto	u5620
  9498  001D4C                     u5621:
  9499  001D4C  EFBF  F00E         	goto	l4531
  9500  001D50                     u5620:
  9501  001D50  90D8               	bcf	status,0,c
  9502  001D52  362F               	rlcf	___fldiv@rem^0,f,c
  9503  001D54  3630               	rlcf	(___fldiv@rem+1)^0,f,c
  9504  001D56  3631               	rlcf	(___fldiv@rem+2)^0,f,c
  9505  001D58  3632               	rlcf	(___fldiv@rem+3)^0,f,c
  9506  001D5A  90D8               	bcf	status,0,c
  9507  001D5C  3623               	rlcf	___fldiv@b^0,f,c
  9508  001D5E  3624               	rlcf	(___fldiv@b+1)^0,f,c
  9509  001D60  3625               	rlcf	(___fldiv@b+2)^0,f,c
  9510  001D62  3626               	rlcf	(___fldiv@b+3)^0,f,c
  9511  001D64  AE39               	btfss	(___fldiv@grs+3)^0,7,c
  9512  001D66  EFB7  F00E         	goto	u5631
  9513  001D6A  EFB9  F00E         	goto	u5630
  9514  001D6E                     u5631:
  9515  001D6E  EFBA  F00E         	goto	l730
  9516  001D72                     u5630:
  9517  001D72  8023               	bsf	___fldiv@b^0,0,c
  9518  001D74                     l730:
  9519  001D74  90D8               	bcf	status,0,c
  9520  001D76  3636               	rlcf	___fldiv@grs^0,f,c
  9521  001D78  3637               	rlcf	(___fldiv@grs+1)^0,f,c
  9522  001D7A  3638               	rlcf	(___fldiv@grs+2)^0,f,c
  9523  001D7C  3639               	rlcf	(___fldiv@grs+3)^0,f,c
  9524  001D7E                     l4531:
  9525  001D7E  5027               	movf	___fldiv@a^0,w,c
  9526  001D80  5C2F               	subwf	___fldiv@rem^0,w,c
  9527  001D82  5028               	movf	(___fldiv@a+1)^0,w,c
  9528  001D84  5830               	subwfb	(___fldiv@rem+1)^0,w,c
  9529  001D86  5029               	movf	(___fldiv@a+2)^0,w,c
  9530  001D88  5831               	subwfb	(___fldiv@rem+2)^0,w,c
  9531  001D8A  502A               	movf	(___fldiv@a+3)^0,w,c
  9532  001D8C  5832               	subwfb	(___fldiv@rem+3)^0,w,c
  9533  001D8E  A0D8               	btfss	status,0,c
  9534  001D90  EFCC  F00E         	goto	u5641
  9535  001D94  EFCE  F00E         	goto	u5640
  9536  001D98                     u5641:
  9537  001D98  EFD7  F00E         	goto	l4537
  9538  001D9C                     u5640:
  9539  001D9C  8C39               	bsf	(___fldiv@grs+3)^0,6,c
  9540  001D9E  5027               	movf	___fldiv@a^0,w,c
  9541  001DA0  5E2F               	subwf	___fldiv@rem^0,f,c
  9542  001DA2  5028               	movf	(___fldiv@a+1)^0,w,c
  9543  001DA4  5A30               	subwfb	(___fldiv@rem+1)^0,f,c
  9544  001DA6  5029               	movf	(___fldiv@a+2)^0,w,c
  9545  001DA8  5A31               	subwfb	(___fldiv@rem+2)^0,f,c
  9546  001DAA  502A               	movf	(___fldiv@a+3)^0,w,c
  9547  001DAC  5A32               	subwfb	(___fldiv@rem+3)^0,f,c
  9548  001DAE                     l4537:
  9549  001DAE  2A3B               	incf	___fldiv@aexp^0,f,c
  9550  001DB0                     l727:
  9551  001DB0  0E19               	movlw	25
  9552  001DB2  643B               	cpfsgt	___fldiv@aexp^0,c
  9553  001DB4  EFDE  F00E         	goto	u5651
  9554  001DB8  EFE0  F00E         	goto	u5650
  9555  001DBC                     u5651:
  9556  001DBC  EFA0  F00E         	goto	l4523
  9557  001DC0                     u5650:
  9558  001DC0  502F               	movf	___fldiv@rem^0,w,c
  9559  001DC2  1030               	iorwf	(___fldiv@rem+1)^0,w,c
  9560  001DC4  1031               	iorwf	(___fldiv@rem+2)^0,w,c
  9561  001DC6  1032               	iorwf	(___fldiv@rem+3)^0,w,c
  9562  001DC8  B4D8               	btfsc	status,2,c
  9563  001DCA  EFE9  F00E         	goto	u5661
  9564  001DCE  EFEB  F00E         	goto	u5660
  9565  001DD2                     u5661:
  9566  001DD2  EF03  F00F         	goto	l4549
  9567  001DD6                     u5660:
  9568  001DD6  8036               	bsf	___fldiv@grs^0,0,c
  9569  001DD8  EF03  F00F         	goto	l4549
  9570  001DDC                     l4543:
  9571  001DDC  90D8               	bcf	status,0,c
  9572  001DDE  3623               	rlcf	___fldiv@b^0,f,c
  9573  001DE0  3624               	rlcf	(___fldiv@b+1)^0,f,c
  9574  001DE2  3625               	rlcf	(___fldiv@b+2)^0,f,c
  9575  001DE4  3626               	rlcf	(___fldiv@b+3)^0,f,c
  9576  001DE6  AE39               	btfss	(___fldiv@grs+3)^0,7,c
  9577  001DE8  EFF8  F00E         	goto	u5671
  9578  001DEC  EFFA  F00E         	goto	u5670
  9579  001DF0                     u5671:
  9580  001DF0  EFFB  F00E         	goto	l736
  9581  001DF4                     u5670:
  9582  001DF4  8023               	bsf	___fldiv@b^0,0,c
  9583  001DF6                     l736:
  9584  001DF6  90D8               	bcf	status,0,c
  9585  001DF8  3636               	rlcf	___fldiv@grs^0,f,c
  9586  001DFA  3637               	rlcf	(___fldiv@grs+1)^0,f,c
  9587  001DFC  3638               	rlcf	(___fldiv@grs+2)^0,f,c
  9588  001DFE  3639               	rlcf	(___fldiv@grs+3)^0,f,c
  9589  001E00  0634               	decf	___fldiv@new_exp^0,f,c
  9590  001E02  A0D8               	btfss	status,0,c
  9591  001E04  0635               	decf	(___fldiv@new_exp+1)^0,f,c
  9592  001E06                     l4549:
  9593  001E06  AE25               	btfss	(___fldiv@b+2)^0,7,c
  9594  001E08  EF08  F00F         	goto	u5681
  9595  001E0C  EF0A  F00F         	goto	u5680
  9596  001E10                     u5681:
  9597  001E10  EFEE  F00E         	goto	l4543
  9598  001E14                     u5680:
  9599  001E14  0E00               	movlw	0
  9600  001E16  6E3B               	movwf	___fldiv@aexp^0,c
  9601  001E18  AE39               	btfss	(___fldiv@grs+3)^0,7,c
  9602  001E1A  EF11  F00F         	goto	u5691
  9603  001E1E  EF13  F00F         	goto	u5690
  9604  001E22                     u5691:
  9605  001E22  EF37  F00F         	goto	l738
  9606  001E26                     u5690:
  9607  001E26  0EFF               	movlw	255
  9608  001E28  1436               	andwf	___fldiv@grs^0,w,c
  9609  001E2A  6E2B               	movwf	??___fldiv^0,c
  9610  001E2C  0EFF               	movlw	255
  9611  001E2E  1437               	andwf	(___fldiv@grs+1)^0,w,c
  9612  001E30  6E2C               	movwf	(??___fldiv+1)^0,c
  9613  001E32  0EFF               	movlw	255
  9614  001E34  1438               	andwf	(___fldiv@grs+2)^0,w,c
  9615  001E36  6E2D               	movwf	(??___fldiv+2)^0,c
  9616  001E38  0E7F               	movlw	127
  9617  001E3A  1439               	andwf	(___fldiv@grs+3)^0,w,c
  9618  001E3C  6E2E               	movwf	(??___fldiv+3)^0,c
  9619  001E3E  502B               	movf	??___fldiv^0,w,c
  9620  001E40  102C               	iorwf	(??___fldiv+1)^0,w,c
  9621  001E42  102D               	iorwf	(??___fldiv+2)^0,w,c
  9622  001E44  102E               	iorwf	(??___fldiv+3)^0,w,c
  9623  001E46  B4D8               	btfsc	status,2,c
  9624  001E48  EF28  F00F         	goto	u5701
  9625  001E4C  EF2A  F00F         	goto	u5700
  9626  001E50                     u5701:
  9627  001E50  EF2E  F00F         	goto	l739
  9628  001E54                     u5700:
  9629  001E54                     l4557:
  9630  001E54  0E01               	movlw	1
  9631  001E56  6E3B               	movwf	___fldiv@aexp^0,c
  9632  001E58  EF37  F00F         	goto	l738
  9633  001E5C                     l739:
  9634  001E5C  A023               	btfss	___fldiv@b^0,0,c
  9635  001E5E  EF33  F00F         	goto	u5711
  9636  001E62  EF35  F00F         	goto	u5710
  9637  001E66                     u5711:
  9638  001E66  EF37  F00F         	goto	l738
  9639  001E6A                     u5710:
  9640  001E6A  EF2A  F00F         	goto	l4557
  9641  001E6E                     l738:
  9642  001E6E  503B               	movf	___fldiv@aexp^0,w,c
  9643  001E70  B4D8               	btfsc	status,2,c
  9644  001E72  EF3D  F00F         	goto	u5721
  9645  001E76  EF3F  F00F         	goto	u5720
  9646  001E7A                     u5721:
  9647  001E7A  EF63  F00F         	goto	l4569
  9648  001E7E                     u5720:
  9649  001E7E  0E01               	movlw	1
  9650  001E80  2623               	addwf	___fldiv@b^0,f,c
  9651  001E82  0E00               	movlw	0
  9652  001E84  2224               	addwfc	(___fldiv@b+1)^0,f,c
  9653  001E86  2225               	addwfc	(___fldiv@b+2)^0,f,c
  9654  001E88  2226               	addwfc	(___fldiv@b+3)^0,f,c
  9655  001E8A  A026               	btfss	(___fldiv@b+3)^0,0,c
  9656  001E8C  EF4A  F00F         	goto	u5731
  9657  001E90  EF4C  F00F         	goto	u5730
  9658  001E94                     u5731:
  9659  001E94  EF63  F00F         	goto	l4569
  9660  001E98                     u5730:
  9661  001E98  C023  F02B         	movff	___fldiv@b,??___fldiv
  9662  001E9C  C024  F02C         	movff	___fldiv@b+1,??___fldiv+1
  9663  001EA0  C025  F02D         	movff	___fldiv@b+2,??___fldiv+2
  9664  001EA4  C026  F02E         	movff	___fldiv@b+3,??___fldiv+3
  9665  001EA8  342E               	rlcf	(??___fldiv+3)^0,w,c
  9666  001EAA  322E               	rrcf	(??___fldiv+3)^0,f,c
  9667  001EAC  322D               	rrcf	(??___fldiv+2)^0,f,c
  9668  001EAE  322C               	rrcf	(??___fldiv+1)^0,f,c
  9669  001EB0  322B               	rrcf	??___fldiv^0,f,c
  9670  001EB2  C02B  F023         	movff	??___fldiv,___fldiv@b
  9671  001EB6  C02C  F024         	movff	??___fldiv+1,___fldiv@b+1
  9672  001EBA  C02D  F025         	movff	??___fldiv+2,___fldiv@b+2
  9673  001EBE  C02E  F026         	movff	??___fldiv+3,___fldiv@b+3
  9674  001EC2  4A34               	infsnz	___fldiv@new_exp^0,f,c
  9675  001EC4  2A35               	incf	(___fldiv@new_exp+1)^0,f,c
  9676  001EC6                     l4569:
  9677  001EC6  BE35               	btfsc	(___fldiv@new_exp+1)^0,7,c
  9678  001EC8  EF6E  F00F         	goto	u5741
  9679  001ECC  5035               	movf	(___fldiv@new_exp+1)^0,w,c
  9680  001ECE  E108               	bnz	u5740
  9681  001ED0  2834               	incf	___fldiv@new_exp^0,w,c
  9682  001ED2  A0D8               	btfss	status,0,c
  9683  001ED4  EF6E  F00F         	goto	u5741
  9684  001ED8  EF70  F00F         	goto	u5740
  9685  001EDC                     u5741:
  9686  001EDC  EF7B  F00F         	goto	l4573
  9687  001EE0                     u5740:
  9688  001EE0  0E00               	movlw	0
  9689  001EE2  6E35               	movwf	(___fldiv@new_exp+1)^0,c
  9690  001EE4  6834               	setf	___fldiv@new_exp^0,c
  9691  001EE6  0E00               	movlw	0
  9692  001EE8  6E23               	movwf	___fldiv@b^0,c
  9693  001EEA  0E00               	movlw	0
  9694  001EEC  6E24               	movwf	(___fldiv@b+1)^0,c
  9695  001EEE  0E00               	movlw	0
  9696  001EF0  6E25               	movwf	(___fldiv@b+2)^0,c
  9697  001EF2  0E00               	movlw	0
  9698  001EF4  6E26               	movwf	(___fldiv@b+3)^0,c
  9699  001EF6                     l4573:
  9700  001EF6  BE35               	btfsc	(___fldiv@new_exp+1)^0,7,c
  9701  001EF8  EF88  F00F         	goto	u5750
  9702  001EFC  5035               	movf	(___fldiv@new_exp+1)^0,w,c
  9703  001EFE  E106               	bnz	u5751
  9704  001F00  0434               	decf	___fldiv@new_exp^0,w,c
  9705  001F02  B0D8               	btfsc	status,0,c
  9706  001F04  EF86  F00F         	goto	u5751
  9707  001F08  EF88  F00F         	goto	u5750
  9708  001F0C                     u5751:
  9709  001F0C  EF96  F00F         	goto	l4577
  9710  001F10                     u5750:
  9711  001F10  0E00               	movlw	0
  9712  001F12  6E35               	movwf	(___fldiv@new_exp+1)^0,c
  9713  001F14  0E00               	movlw	0
  9714  001F16  6E34               	movwf	___fldiv@new_exp^0,c
  9715  001F18  0E00               	movlw	0
  9716  001F1A  6E23               	movwf	___fldiv@b^0,c
  9717  001F1C  0E00               	movlw	0
  9718  001F1E  6E24               	movwf	(___fldiv@b+1)^0,c
  9719  001F20  0E00               	movlw	0
  9720  001F22  6E25               	movwf	(___fldiv@b+2)^0,c
  9721  001F24  0E00               	movlw	0
  9722  001F26  6E26               	movwf	(___fldiv@b+3)^0,c
  9723  001F28  0E00               	movlw	0
  9724  001F2A  6E33               	movwf	___fldiv@sign^0,c
  9725  001F2C                     l4577:
  9726  001F2C  C034  F03A         	movff	___fldiv@new_exp,___fldiv@bexp
  9727  001F30  A03A               	btfss	___fldiv@bexp^0,0,c
  9728  001F32  EF9D  F00F         	goto	u5761
  9729  001F36  EF9F  F00F         	goto	u5760
  9730  001F3A                     u5761:
  9731  001F3A  EFA2  F00F         	goto	l4583
  9732  001F3E                     u5760:
  9733  001F3E  8E25               	bsf	(___fldiv@b+2)^0,7,c
  9734  001F40  EFA3  F00F         	goto	l4585
  9735  001F44                     l4583:
  9736  001F44  9E25               	bcf	(___fldiv@b+2)^0,7,c
  9737  001F46                     l4585:
  9738  001F46  90D8               	bcf	status,0,c
  9739  001F48  303A               	rrcf	___fldiv@bexp^0,w,c
  9740  001F4A  6E26               	movwf	(___fldiv@b+3)^0,c
  9741  001F4C  EF59  F00E         	goto	l4499
  9742  001F50                     l725:
  9743  001F50  0012               	return		;funcret
  9744  001F52                     __end_of___fldiv:
  9745                           	callstack 0
  9746                           
  9747 ;; *************** function ___xxtofl *****************
  9748 ;; Defined at:
  9749 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\xxtofl.c"
  9750 ;; Parameters:    Size  Location     Type
  9751 ;;  sign            1    wreg     unsigned char 
  9752 ;;  val             4   20[COMRAM] long 
  9753 ;; Auto vars:     Size  Location     Type
  9754 ;;  sign            1   28[COMRAM] unsigned char 
  9755 ;;  arg             4   30[COMRAM] unsigned long 
  9756 ;;  exp             1   29[COMRAM] unsigned char 
  9757 ;; Return value:  Size  Location     Type
  9758 ;;                  4   20[COMRAM] unsigned char 
  9759 ;; Registers used:
  9760 ;;		wreg, status,2, status,0
  9761 ;; Tracked objects:
  9762 ;;		On entry : 0/0
  9763 ;;		On exit  : 0/0
  9764 ;;		Unchanged: 0/0
  9765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9766 ;;      Params:         4       0       0       0       0       0       0
  9767 ;;      Locals:         6       0       0       0       0       0       0
  9768 ;;      Temps:          4       0       0       0       0       0       0
  9769 ;;      Totals:        14       0       0       0       0       0       0
  9770 ;;Total ram usage:       14 bytes
  9771 ;; Hardware stack levels used: 1
  9772 ;; Hardware stack levels required when called: 2
  9773 ;; This function calls:
  9774 ;;		Nothing
  9775 ;; This function is called by:
  9776 ;;		_main
  9777 ;; This function uses a non-reentrant model
  9778 ;;
  9779                           
  9780                           	psect	text36
  9781  0024B4                     __ptext36:
  9782                           	callstack 0
  9783  0024B4                     ___xxtofl:
  9784                           	callstack 28
  9785                           
  9786                           ;incstack = 0
  9787                           ;___xxtofl@sign stored from wreg
  9788  0024B4  6E1D               	movwf	___xxtofl@sign^0,c
  9789  0024B6  501D               	movf	___xxtofl@sign^0,w,c
  9790  0024B8  B4D8               	btfsc	status,2,c
  9791  0024BA  EF61  F012         	goto	u4901
  9792  0024BE  EF63  F012         	goto	u4900
  9793  0024C2                     u4901:
  9794  0024C2  EF85  F012         	goto	l798
  9795  0024C6                     u4900:
  9796  0024C6  BE18               	btfsc	(___xxtofl@val+3)^0,7,c
  9797  0024C8  EF6A  F012         	goto	u4910
  9798  0024CC  EF68  F012         	goto	u4911
  9799  0024D0                     u4911:
  9800  0024D0  EF85  F012         	goto	l798
  9801  0024D4                     u4910:
  9802  0024D4  C015  F019         	movff	___xxtofl@val,??___xxtofl
  9803  0024D8  C016  F01A         	movff	___xxtofl@val+1,??___xxtofl+1
  9804  0024DC  C017  F01B         	movff	___xxtofl@val+2,??___xxtofl+2
  9805  0024E0  C018  F01C         	movff	___xxtofl@val+3,??___xxtofl+3
  9806  0024E4  1E19               	comf	??___xxtofl^0,f,c
  9807  0024E6  1E1A               	comf	(??___xxtofl+1)^0,f,c
  9808  0024E8  1E1B               	comf	(??___xxtofl+2)^0,f,c
  9809  0024EA  1E1C               	comf	(??___xxtofl+3)^0,f,c
  9810  0024EC  2A19               	incf	??___xxtofl^0,f,c
  9811  0024EE  0E00               	movlw	0
  9812  0024F0  221A               	addwfc	(??___xxtofl+1)^0,f,c
  9813  0024F2  221B               	addwfc	(??___xxtofl+2)^0,f,c
  9814  0024F4  221C               	addwfc	(??___xxtofl+3)^0,f,c
  9815  0024F6  C019  F01F         	movff	??___xxtofl,___xxtofl@arg
  9816  0024FA  C01A  F020         	movff	??___xxtofl+1,___xxtofl@arg+1
  9817  0024FE  C01B  F021         	movff	??___xxtofl+2,___xxtofl@arg+2
  9818  002502  C01C  F022         	movff	??___xxtofl+3,___xxtofl@arg+3
  9819  002506  EF8D  F012         	goto	l4047
  9820  00250A                     l798:
  9821  00250A  C015  F01F         	movff	___xxtofl@val,___xxtofl@arg
  9822  00250E  C016  F020         	movff	___xxtofl@val+1,___xxtofl@arg+1
  9823  002512  C017  F021         	movff	___xxtofl@val+2,___xxtofl@arg+2
  9824  002516  C018  F022         	movff	___xxtofl@val+3,___xxtofl@arg+3
  9825  00251A                     l4047:
  9826  00251A  5015               	movf	___xxtofl@val^0,w,c
  9827  00251C  1016               	iorwf	(___xxtofl@val+1)^0,w,c
  9828  00251E  1017               	iorwf	(___xxtofl@val+2)^0,w,c
  9829  002520  1018               	iorwf	(___xxtofl@val+3)^0,w,c
  9830  002522  A4D8               	btfss	status,2,c
  9831  002524  EF96  F012         	goto	u4921
  9832  002528  EF98  F012         	goto	u4920
  9833  00252C                     u4921:
  9834  00252C  EFA2  F012         	goto	l4053
  9835  002530                     u4920:
  9836  002530  0E00               	movlw	0
  9837  002532  6E15               	movwf	?___xxtofl^0,c
  9838  002534  0E00               	movlw	0
  9839  002536  6E16               	movwf	(?___xxtofl+1)^0,c
  9840  002538  0E00               	movlw	0
  9841  00253A  6E17               	movwf	(?___xxtofl+2)^0,c
  9842  00253C  0E00               	movlw	0
  9843  00253E  6E18               	movwf	(?___xxtofl+3)^0,c
  9844  002540  EF33  F013         	goto	l801
  9845  002544                     l4053:
  9846  002544  0E96               	movlw	150
  9847  002546  6E1E               	movwf	___xxtofl@exp^0,c
  9848  002548  EFAC  F012         	goto	l4057
  9849  00254C                     l4055:
  9850  00254C  2A1E               	incf	___xxtofl@exp^0,f,c
  9851  00254E  90D8               	bcf	status,0,c
  9852  002550  3222               	rrcf	(___xxtofl@arg+3)^0,f,c
  9853  002552  3221               	rrcf	(___xxtofl@arg+2)^0,f,c
  9854  002554  3220               	rrcf	(___xxtofl@arg+1)^0,f,c
  9855  002556  321F               	rrcf	___xxtofl@arg^0,f,c
  9856  002558                     l4057:
  9857  002558  0E00               	movlw	0
  9858  00255A  141F               	andwf	___xxtofl@arg^0,w,c
  9859  00255C  6E19               	movwf	??___xxtofl^0,c
  9860  00255E  0E00               	movlw	0
  9861  002560  1420               	andwf	(___xxtofl@arg+1)^0,w,c
  9862  002562  6E1A               	movwf	(??___xxtofl+1)^0,c
  9863  002564  0E00               	movlw	0
  9864  002566  1421               	andwf	(___xxtofl@arg+2)^0,w,c
  9865  002568  6E1B               	movwf	(??___xxtofl+2)^0,c
  9866  00256A  0EFE               	movlw	254
  9867  00256C  1422               	andwf	(___xxtofl@arg+3)^0,w,c
  9868  00256E  6E1C               	movwf	(??___xxtofl+3)^0,c
  9869  002570  5019               	movf	??___xxtofl^0,w,c
  9870  002572  101A               	iorwf	(??___xxtofl+1)^0,w,c
  9871  002574  101B               	iorwf	(??___xxtofl+2)^0,w,c
  9872  002576  101C               	iorwf	(??___xxtofl+3)^0,w,c
  9873  002578  A4D8               	btfss	status,2,c
  9874  00257A  EFC1  F012         	goto	u4931
  9875  00257E  EFC3  F012         	goto	u4930
  9876  002582                     u4931:
  9877  002582  EFA6  F012         	goto	l4055
  9878  002586                     u4930:
  9879  002586  EFD1  F012         	goto	l805
  9880  00258A                     l4059:
  9881  00258A  2A1E               	incf	___xxtofl@exp^0,f,c
  9882  00258C  0E01               	movlw	1
  9883  00258E  261F               	addwf	___xxtofl@arg^0,f,c
  9884  002590  0E00               	movlw	0
  9885  002592  2220               	addwfc	(___xxtofl@arg+1)^0,f,c
  9886  002594  2221               	addwfc	(___xxtofl@arg+2)^0,f,c
  9887  002596  2222               	addwfc	(___xxtofl@arg+3)^0,f,c
  9888  002598  90D8               	bcf	status,0,c
  9889  00259A  3222               	rrcf	(___xxtofl@arg+3)^0,f,c
  9890  00259C  3221               	rrcf	(___xxtofl@arg+2)^0,f,c
  9891  00259E  3220               	rrcf	(___xxtofl@arg+1)^0,f,c
  9892  0025A0  321F               	rrcf	___xxtofl@arg^0,f,c
  9893  0025A2                     l805:
  9894  0025A2  0E00               	movlw	0
  9895  0025A4  141F               	andwf	___xxtofl@arg^0,w,c
  9896  0025A6  6E19               	movwf	??___xxtofl^0,c
  9897  0025A8  0E00               	movlw	0
  9898  0025AA  1420               	andwf	(___xxtofl@arg+1)^0,w,c
  9899  0025AC  6E1A               	movwf	(??___xxtofl+1)^0,c
  9900  0025AE  0E00               	movlw	0
  9901  0025B0  1421               	andwf	(___xxtofl@arg+2)^0,w,c
  9902  0025B2  6E1B               	movwf	(??___xxtofl+2)^0,c
  9903  0025B4  0EFF               	movlw	255
  9904  0025B6  1422               	andwf	(___xxtofl@arg+3)^0,w,c
  9905  0025B8  6E1C               	movwf	(??___xxtofl+3)^0,c
  9906  0025BA  5019               	movf	??___xxtofl^0,w,c
  9907  0025BC  101A               	iorwf	(??___xxtofl+1)^0,w,c
  9908  0025BE  101B               	iorwf	(??___xxtofl+2)^0,w,c
  9909  0025C0  101C               	iorwf	(??___xxtofl+3)^0,w,c
  9910  0025C2  A4D8               	btfss	status,2,c
  9911  0025C4  EFE6  F012         	goto	u4941
  9912  0025C8  EFE8  F012         	goto	u4940
  9913  0025CC                     u4941:
  9914  0025CC  EFC5  F012         	goto	l4059
  9915  0025D0                     u4940:
  9916  0025D0  EFF0  F012         	goto	l4067
  9917  0025D4                     l4065:
  9918  0025D4  061E               	decf	___xxtofl@exp^0,f,c
  9919  0025D6  90D8               	bcf	status,0,c
  9920  0025D8  361F               	rlcf	___xxtofl@arg^0,f,c
  9921  0025DA  3620               	rlcf	(___xxtofl@arg+1)^0,f,c
  9922  0025DC  3621               	rlcf	(___xxtofl@arg+2)^0,f,c
  9923  0025DE  3622               	rlcf	(___xxtofl@arg+3)^0,f,c
  9924  0025E0                     l4067:
  9925  0025E0  BE21               	btfsc	(___xxtofl@arg+2)^0,7,c
  9926  0025E2  EFF5  F012         	goto	u4951
  9927  0025E6  EFF7  F012         	goto	u4950
  9928  0025EA                     u4951:
  9929  0025EA  EFFF  F012         	goto	l812
  9930  0025EE                     u4950:
  9931  0025EE  0E02               	movlw	2
  9932  0025F0  601E               	cpfslt	___xxtofl@exp^0,c
  9933  0025F2  EFFD  F012         	goto	u4961
  9934  0025F6  EFFF  F012         	goto	u4960
  9935  0025FA                     u4961:
  9936  0025FA  EFEA  F012         	goto	l4065
  9937  0025FE                     u4960:
  9938  0025FE                     l812:
  9939  0025FE  B01E               	btfsc	___xxtofl@exp^0,0,c
  9940  002600  EF04  F013         	goto	u4971
  9941  002604  EF06  F013         	goto	u4970
  9942  002608                     u4971:
  9943  002608  EF07  F013         	goto	l4073
  9944  00260C                     u4970:
  9945  00260C  9E21               	bcf	(___xxtofl@arg+2)^0,7,c
  9946  00260E                     l4073:
  9947  00260E  90D8               	bcf	status,0,c
  9948  002610  321E               	rrcf	___xxtofl@exp^0,f,c
  9949  002612  C01E  F019         	movff	___xxtofl@exp,??___xxtofl
  9950  002616  6A1A               	clrf	(??___xxtofl+1)^0,c
  9951  002618  6A1B               	clrf	(??___xxtofl+2)^0,c
  9952  00261A  6A1C               	clrf	(??___xxtofl+3)^0,c
  9953  00261C  C019  F01C         	movff	??___xxtofl,??___xxtofl+3
  9954  002620  6A1B               	clrf	(??___xxtofl+2)^0,c
  9955  002622  6A1A               	clrf	(??___xxtofl+1)^0,c
  9956  002624  6A19               	clrf	??___xxtofl^0,c
  9957  002626  5019               	movf	??___xxtofl^0,w,c
  9958  002628  121F               	iorwf	___xxtofl@arg^0,f,c
  9959  00262A  501A               	movf	(??___xxtofl+1)^0,w,c
  9960  00262C  1220               	iorwf	(___xxtofl@arg+1)^0,f,c
  9961  00262E  501B               	movf	(??___xxtofl+2)^0,w,c
  9962  002630  1221               	iorwf	(___xxtofl@arg+2)^0,f,c
  9963  002632  501C               	movf	(??___xxtofl+3)^0,w,c
  9964  002634  1222               	iorwf	(___xxtofl@arg+3)^0,f,c
  9965  002636  501D               	movf	___xxtofl@sign^0,w,c
  9966  002638  B4D8               	btfsc	status,2,c
  9967  00263A  EF21  F013         	goto	u4981
  9968  00263E  EF23  F013         	goto	u4980
  9969  002642                     u4981:
  9970  002642  EF2B  F013         	goto	l4083
  9971  002646                     u4980:
  9972  002646  BE18               	btfsc	(___xxtofl@val+3)^0,7,c
  9973  002648  EF2A  F013         	goto	u4990
  9974  00264C  EF28  F013         	goto	u4991
  9975  002650                     u4991:
  9976  002650  EF2B  F013         	goto	l4083
  9977  002654                     u4990:
  9978  002654  8E22               	bsf	(___xxtofl@arg+3)^0,7,c
  9979  002656                     l4083:
  9980  002656  C01F  F015         	movff	___xxtofl@arg,?___xxtofl
  9981  00265A  C020  F016         	movff	___xxtofl@arg+1,?___xxtofl+1
  9982  00265E  C021  F017         	movff	___xxtofl@arg+2,?___xxtofl+2
  9983  002662  C022  F018         	movff	___xxtofl@arg+3,?___xxtofl+3
  9984  002666                     l801:
  9985  002666  0012               	return		;funcret
  9986  002668                     __end_of___xxtofl:
  9987                           	callstack 0
  9988                           
  9989 ;; *************** function _isr *****************
  9990 ;; Defined at:
  9991 ;;		line 115 in file "newmain.c"
  9992 ;; Parameters:    Size  Location     Type
  9993 ;;		None
  9994 ;; Auto vars:     Size  Location     Type
  9995 ;;		None
  9996 ;; Return value:  Size  Location     Type
  9997 ;;                  1    wreg      void 
  9998 ;; Registers used:
  9999 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10000 ;; Tracked objects:
 10001 ;;		On entry : 0/0
 10002 ;;		On exit  : 0/0
 10003 ;;		Unchanged: 0/0
 10004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10005 ;;      Params:         0       0       0       0       0       0       0
 10006 ;;      Locals:         0       0       0       0       0       0       0
 10007 ;;      Temps:          8       0       0       0       0       0       0
 10008 ;;      Totals:         8       0       0       0       0       0       0
 10009 ;;Total ram usage:        8 bytes
 10010 ;; Hardware stack levels used: 1
 10011 ;; Hardware stack levels required when called: 1
 10012 ;; This function calls:
 10013 ;;		i2___wmul
 10014 ;; This function is called by:
 10015 ;;		Interrupt level 2
 10016 ;; This function uses a non-reentrant model
 10017 ;;
 10018                           
 10019                           	psect	intcode
 10020  000008                     __pintcode:
 10021                           	callstack 0
 10022  000008                     _isr:
 10023                           	callstack 21
 10024                           
 10025                           ;incstack = 0
 10026  000008  8251               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 10027  00000A  CFF3 F009          	movff	prodl,??_isr+2
 10028  00000E  CFF4 F00A          	movff	prodh,??_isr+3
 10029  000012  CFF6 F00B          	movff	tblptrl,??_isr+4
 10030  000016  CFF7 F00C          	movff	tblptrh,??_isr+5
 10031  00001A  CFF8 F00D          	movff	tblptru,??_isr+6
 10032  00001E  CFF5 F00E          	movff	tablat,??_isr+7
 10033  000022                     
 10034                           ;newmain.c: 117:         if (data > 255) {
 10035  000022  A4F2               	btfss	4082,2,c	;volatile
 10036  000024  EF16  F000         	goto	i2u503_41
 10037  000028  EF18  F000         	goto	i2u503_40
 10038  00002C                     i2u503_41:
 10039  00002C  EF71  F000         	goto	i2l113
 10040  000030                     i2u503_40:
 10041  000030                     
 10042                           ;newmain.c: 119:         } else if (data < 0) {
 10043  000030  94F2               	bcf	4082,2,c	;volatile
 10044                           
 10045                           ;newmain.c: 121:         } else {
 10046  000032  C0F9  FFD6         	movff	_value_TMR0,4054	;volatile
 10047  000036                     
 10048                           ;newmain.c: 122:             value = data;
 10049  000036  0100               	movlb	0	; () banked
 10050  000038  51FA               	movf	(_value_TMR0+1)& (0+255),w,b
 10051  00003A  6ED7               	movwf	215,c	;volatile
 10052  00003C                     
 10053                           ; BSR set to: 0
 10054                           ;newmain.c: 124: 
 10055  00003C  0E47               	movlw	low _sindata
 10056  00003E  244C               	addwf	_i^0,w,c
 10057  000040  6EF6               	movwf	tblptrl,c
 10058  000042  0E7E               	movlw	high _sindata
 10059  000044  204D               	addwfc	(_i+1)^0,w,c
 10060  000046  6EF7               	movwf	tblptrh,c
 10061  000048                     	if	0	;There are less than 3 active tblptr bytes
 10062  000048                     	endif
 10063  000048  0008               	tblrd		*
 10064  00004A  50F5               	movf	tablat,w,c
 10065  00004C  6E4A               	movwf	_data^0,c
 10066  00004E  6A4B               	clrf	(_data+1)^0,c
 10067  000050                     
 10068                           ; BSR set to: 0
 10069                           ;newmain.c: 126: 
 10070  000050  C04A  F001         	movff	_data,i2___wmul@multiplier
 10071  000054  C04B  F002         	movff	_data+1,i2___wmul@multiplier+1
 10072  000058  C0F7  F003         	movff	_gain,i2___wmul@multiplicand
 10073  00005C  C0F8  F004         	movff	_gain+1,i2___wmul@multiplicand+1
 10074  000060  EC93  F01A         	call	i2___wmul	;wreg free
 10075  000064  5002               	movf	(?i2___wmul+1)^0,w,c
 10076  000066  6E4A               	movwf	_data^0,c
 10077  000068  6A4B               	clrf	(_data+1)^0,c
 10078  00006A                     
 10079                           ;newmain.c: 127:         i++;
 10080  00006A  90D8               	bcf	status,0,c
 10081  00006C  0100               	movlb	0	; () banked
 10082  00006E  31F8               	rrcf	(_gain+1)& (0+255),w,b
 10083  000070  6E08               	movwf	(??_isr+1)^0,c
 10084  000072  31F7               	rrcf	_gain& (0+255),w,b
 10085  000074  6E07               	movwf	??_isr^0,c
 10086  000076  5007               	movf	??_isr^0,w,c
 10087  000078  5E4A               	subwf	_data^0,f,c
 10088  00007A  5008               	movf	(??_isr+1)^0,w,c
 10089  00007C  5A4B               	subwfb	(_data+1)^0,f,c
 10090  00007E                     
 10091                           ; BSR set to: 0
 10092                           ;newmain.c: 128: 
 10093  00007E  51F5               	movf	_offset& (0+255),w,b
 10094  000080  264A               	addwf	_data^0,f,c
 10095  000082  51F6               	movf	(_offset+1)& (0+255),w,b
 10096  000084  224B               	addwfc	(_data+1)^0,f,c
 10097  000086                     
 10098                           ; BSR set to: 0
 10099                           ;newmain.c: 130:             i=0;
 10100  000086  BE4B               	btfsc	(_data+1)^0,7,c
 10101  000088  EF4C  F000         	goto	i2u504_41
 10102  00008C  044B               	decf	(_data+1)^0,w,c
 10103  00008E  A0D8               	btfss	status,0,c
 10104  000090  EF4C  F000         	goto	i2u504_41
 10105  000094  EF4E  F000         	goto	i2u504_40
 10106  000098                     i2u504_41:
 10107  000098  EF51  F000         	goto	i2l4177
 10108  00009C                     i2u504_40:
 10109  00009C                     
 10110                           ; BSR set to: 0
 10111                           ;newmain.c: 131:         }
 10112  00009C  684E               	setf	_value^0,c
 10113                           
 10114                           ;newmain.c: 132:     }
 10115  00009E  EF5E  F000         	goto	i2l109
 10116  0000A2                     i2l4177:
 10117                           
 10118                           ; BSR set to: 0
 10119  0000A2  BE4B               	btfsc	(_data+1)^0,7,c
 10120  0000A4  EF58  F000         	goto	i2u505_40
 10121  0000A8  EF56  F000         	goto	i2u505_41
 10122  0000AC                     i2u505_41:
 10123  0000AC  EF5C  F000         	goto	i2l110
 10124  0000B0                     i2u505_40:
 10125  0000B0                     
 10126                           ; BSR set to: 0
 10127                           ;newmain.c: 133: }
 10128  0000B0  0E00               	movlw	0
 10129  0000B2  6E4E               	movwf	_value^0,c
 10130  0000B4  EF5E  F000         	goto	i2l109
 10131  0000B8                     i2l110:
 10132                           
 10133                           ; BSR set to: 0
 10134  0000B8  C04A  F04E         	movff	_data,_value
 10135  0000BC                     i2l109:
 10136                           
 10137                           ; BSR set to: 0
 10138  0000BC  C04E  FF83         	movff	_value,3971	;volatile
 10139  0000C0                     
 10140                           ; BSR set to: 0
 10141  0000C0  4A4C               	infsnz	_i^0,f,c
 10142  0000C2  2A4D               	incf	(_i+1)^0,f,c
 10143  0000C4                     
 10144                           ; BSR set to: 0
 10145  0000C4  0E68               	movlw	104
 10146  0000C6  184C               	xorwf	_i^0,w,c
 10147  0000C8  E106               	bnz	i2u506_41
 10148  0000CA  044D               	decf	(_i+1)^0,w,c
 10149  0000CC  A4D8               	btfss	status,2,c
 10150  0000CE  EF6B  F000         	goto	i2u506_41
 10151  0000D2  EF6D  F000         	goto	i2u506_40
 10152  0000D6                     i2u506_41:
 10153  0000D6  EF71  F000         	goto	i2l113
 10154  0000DA                     i2u506_40:
 10155  0000DA                     
 10156                           ; BSR set to: 0
 10157  0000DA  0E00               	movlw	0
 10158  0000DC  6E4D               	movwf	(_i+1)^0,c
 10159  0000DE  0E00               	movlw	0
 10160  0000E0  6E4C               	movwf	_i^0,c
 10161  0000E2                     i2l113:
 10162  0000E2  C00E  FFF5         	movff	??_isr+7,tablat
 10163  0000E6  C00D  FFF8         	movff	??_isr+6,tblptru
 10164  0000EA  C00C  FFF7         	movff	??_isr+5,tblptrh
 10165  0000EE  C00B  FFF6         	movff	??_isr+4,tblptrl
 10166  0000F2  C00A  FFF4         	movff	??_isr+3,prodh
 10167  0000F6  C009  FFF3         	movff	??_isr+2,prodl
 10168  0000FA  9251               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 10169  0000FC  0011               	retfie		f
 10170  0000FE                     __end_of_isr:
 10171                           	callstack 0
 10172                           
 10173 ;; *************** function i2___wmul *****************
 10174 ;; Defined at:
 10175 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
 10176 ;; Parameters:    Size  Location     Type
 10177 ;;  multiplier      2    0[COMRAM] unsigned int 
 10178 ;;  multiplicand    2    2[COMRAM] unsigned int 
 10179 ;; Auto vars:     Size  Location     Type
 10180 ;;  product         2    4[COMRAM] unsigned int 
 10181 ;; Return value:  Size  Location     Type
 10182 ;;                  2    0[COMRAM] unsigned int 
 10183 ;; Registers used:
 10184 ;;		wreg, status,2, status,0, prodl, prodh
 10185 ;; Tracked objects:
 10186 ;;		On entry : 0/0
 10187 ;;		On exit  : 0/0
 10188 ;;		Unchanged: 0/0
 10189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10190 ;;      Params:         4       0       0       0       0       0       0
 10191 ;;      Locals:         2       0       0       0       0       0       0
 10192 ;;      Temps:          0       0       0       0       0       0       0
 10193 ;;      Totals:         6       0       0       0       0       0       0
 10194 ;;Total ram usage:        6 bytes
 10195 ;; Hardware stack levels used: 1
 10196 ;; This function calls:
 10197 ;;		Nothing
 10198 ;; This function is called by:
 10199 ;;		_isr
 10200 ;; This function uses a non-reentrant model
 10201 ;;
 10202                           
 10203                           	psect	text38
 10204  003526                     __ptext38:
 10205                           	callstack 0
 10206  003526                     i2___wmul:
 10207                           	callstack 21
 10208  003526  5001               	movf	i2___wmul@multiplier^0,w,c
 10209  003528  0203               	mulwf	i2___wmul@multiplicand^0,c
 10210  00352A  CFF3 F005          	movff	prodl,i2___wmul@product
 10211  00352E  CFF4 F006          	movff	prodh,i2___wmul@product+1
 10212  003532  5001               	movf	i2___wmul@multiplier^0,w,c
 10213  003534  0204               	mulwf	(i2___wmul@multiplicand+1)^0,c
 10214  003536  50F3               	movf	243,w,c
 10215  003538  2606               	addwf	(i2___wmul@product+1)^0,f,c
 10216  00353A  5002               	movf	(i2___wmul@multiplier+1)^0,w,c
 10217  00353C  0203               	mulwf	i2___wmul@multiplicand^0,c
 10218  00353E  50F3               	movf	243,w,c
 10219  003540  2606               	addwf	(i2___wmul@product+1)^0,f,c
 10220  003542  C005  F001         	movff	i2___wmul@product,?i2___wmul
 10221  003546  C006  F002         	movff	i2___wmul@product+1,?i2___wmul+1
 10222  00354A  0012               	return		;funcret
 10223  00354C                     __end_ofi2___wmul:
 10224                           	callstack 0
 10225                           
 10226                           	psect	rparam
 10227  0000                     
 10228                           	psect	temp
 10229  000051                     btemp:
 10230                           	callstack 0
 10231  000051                     	ds	1
 10232  0000                     int$flags	set	btemp
 10233  0000                     wtemp8	set	btemp+1
 10234  0000                     ttemp5	set	btemp+1
 10235  0000                     ttemp6	set	btemp+4
 10236  0000                     ttemp7	set	btemp+8
 10237                           
 10238                           	psect	idloc
 10239                           
 10240                           ;Config register IDLOC0 @ 0x200000
 10241                           ;	unspecified, using default values
 10242  200000                     	org	2097152
 10243  200000  FF                 	db	255
 10244                           
 10245                           ;Config register IDLOC1 @ 0x200001
 10246                           ;	unspecified, using default values
 10247  200001                     	org	2097153
 10248  200001  FF                 	db	255
 10249                           
 10250                           ;Config register IDLOC2 @ 0x200002
 10251                           ;	unspecified, using default values
 10252  200002                     	org	2097154
 10253  200002  FF                 	db	255
 10254                           
 10255                           ;Config register IDLOC3 @ 0x200003
 10256                           ;	unspecified, using default values
 10257  200003                     	org	2097155
 10258  200003  FF                 	db	255
 10259                           
 10260                           ;Config register IDLOC4 @ 0x200004
 10261                           ;	unspecified, using default values
 10262  200004                     	org	2097156
 10263  200004  FF                 	db	255
 10264                           
 10265                           ;Config register IDLOC5 @ 0x200005
 10266                           ;	unspecified, using default values
 10267  200005                     	org	2097157
 10268  200005  FF                 	db	255
 10269                           
 10270                           ;Config register IDLOC6 @ 0x200006
 10271                           ;	unspecified, using default values
 10272  200006                     	org	2097158
 10273  200006  FF                 	db	255
 10274                           
 10275                           ;Config register IDLOC7 @ 0x200007
 10276                           ;	unspecified, using default values
 10277  200007                     	org	2097159
 10278  200007  FF                 	db	255
 10279                           
 10280                           	psect	config
 10281                           
 10282                           ; Padding undefined space
 10283  300000                     	org	3145728
 10284  300000  FF                 	db	255
 10285                           
 10286                           ;Config register CONFIG1H @ 0x300001
 10287                           ;	Oscillator Selection bits
 10288                           ;	FOSC = HSHP, HS oscillator (high power > 16 MHz)
 10289                           ;	4X PLL Enable
 10290                           ;	PLLCFG = 0x0, unprogrammed default
 10291                           ;	Primary clock enable bit
 10292                           ;	PRICLKEN = 0x1, unprogrammed default
 10293                           ;	Fail-Safe Clock Monitor Enable bit
 10294                           ;	FCMEN = 0x0, unprogrammed default
 10295                           ;	Internal/External Oscillator Switchover bit
 10296                           ;	IESO = 0x0, unprogrammed default
 10297  300001                     	org	3145729
 10298  300001  22                 	db	34
 10299                           
 10300                           ;Config register CONFIG2L @ 0x300002
 10301                           ;	unspecified, using default values
 10302                           ;	Power-up Timer Enable bit
 10303                           ;	PWRTEN = 0x1, unprogrammed default
 10304                           ;	Brown-out Reset Enable bits
 10305                           ;	BOREN = 0x3, unprogrammed default
 10306                           ;	Brown Out Reset Voltage bits
 10307                           ;	BORV = 0x3, unprogrammed default
 10308  300002                     	org	3145730
 10309  300002  1F                 	db	31
 10310                           
 10311                           ;Config register CONFIG2H @ 0x300003
 10312                           ;	Watchdog Timer Enable bits
 10313                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
 10314                           ;	Watchdog Timer Postscale Select bits
 10315                           ;	WDTPS = 0xF, unprogrammed default
 10316  300003                     	org	3145731
 10317  300003  3C                 	db	60
 10318                           
 10319                           ; Padding undefined space
 10320  300004                     	org	3145732
 10321  300004  FF                 	db	255
 10322                           
 10323                           ;Config register CONFIG3H @ 0x300005
 10324                           ;	unspecified, using default values
 10325                           ;	CCP2 MUX bit
 10326                           ;	CCP2MX = 0x1, unprogrammed default
 10327                           ;	PORTB A/D Enable bit
 10328                           ;	PBADEN = 0x1, unprogrammed default
 10329                           ;	P3A/CCP3 Mux bit
 10330                           ;	CCP3MX = 0x1, unprogrammed default
 10331                           ;	HFINTOSC Fast Start-up
 10332                           ;	HFOFST = 0x1, unprogrammed default
 10333                           ;	Timer3 Clock input mux bit
 10334                           ;	T3CMX = 0x1, unprogrammed default
 10335                           ;	ECCP2 B output mux bit
 10336                           ;	P2BMX = 0x1, unprogrammed default
 10337                           ;	MCLR Pin Enable bit
 10338                           ;	MCLRE = 0x1, unprogrammed default
 10339  300005                     	org	3145733
 10340  300005  BF                 	db	191
 10341                           
 10342                           ;Config register CONFIG4L @ 0x300006
 10343                           ;	unspecified, using default values
 10344                           ;	Stack Full/Underflow Reset Enable bit
 10345                           ;	STVREN = 0x1, unprogrammed default
 10346                           ;	Single-Supply ICSP Enable bit
 10347                           ;	LVP = 0x1, unprogrammed default
 10348                           ;	Extended Instruction Set Enable bit
 10349                           ;	XINST = 0x0, unprogrammed default
 10350                           ;	Background Debug
 10351                           ;	DEBUG = 0x1, unprogrammed default
 10352  300006                     	org	3145734
 10353  300006  85                 	db	133
 10354                           
 10355                           ; Padding undefined space
 10356  300007                     	org	3145735
 10357  300007  FF                 	db	255
 10358                           
 10359                           ;Config register CONFIG5L @ 0x300008
 10360                           ;	unspecified, using default values
 10361                           ;	Code Protection Block 0
 10362                           ;	CP0 = 0x1, unprogrammed default
 10363                           ;	Code Protection Block 1
 10364                           ;	CP1 = 0x1, unprogrammed default
 10365                           ;	Code Protection Block 2
 10366                           ;	CP2 = 0x1, unprogrammed default
 10367                           ;	Code Protection Block 3
 10368                           ;	CP3 = 0x1, unprogrammed default
 10369  300008                     	org	3145736
 10370  300008  0F                 	db	15
 10371                           
 10372                           ;Config register CONFIG5H @ 0x300009
 10373                           ;	unspecified, using default values
 10374                           ;	Boot Block Code Protection bit
 10375                           ;	CPB = 0x1, unprogrammed default
 10376                           ;	Data EEPROM Code Protection bit
 10377                           ;	CPD = 0x1, unprogrammed default
 10378  300009                     	org	3145737
 10379  300009  C0                 	db	192
 10380                           
 10381                           ;Config register CONFIG6L @ 0x30000A
 10382                           ;	unspecified, using default values
 10383                           ;	Write Protection Block 0
 10384                           ;	WRT0 = 0x1, unprogrammed default
 10385                           ;	Write Protection Block 1
 10386                           ;	WRT1 = 0x1, unprogrammed default
 10387                           ;	Write Protection Block 2
 10388                           ;	WRT2 = 0x1, unprogrammed default
 10389                           ;	Write Protection Block 3
 10390                           ;	WRT3 = 0x1, unprogrammed default
 10391  30000A                     	org	3145738
 10392  30000A  0F                 	db	15
 10393                           
 10394                           ;Config register CONFIG6H @ 0x30000B
 10395                           ;	unspecified, using default values
 10396                           ;	Configuration Register Write Protection bit
 10397                           ;	WRTC = 0x1, unprogrammed default
 10398                           ;	Boot Block Write Protection bit
 10399                           ;	WRTB = 0x1, unprogrammed default
 10400                           ;	Data EEPROM Write Protection bit
 10401                           ;	WRTD = 0x1, unprogrammed default
 10402  30000B                     	org	3145739
 10403  30000B  E0                 	db	224
 10404                           
 10405                           ;Config register CONFIG7L @ 0x30000C
 10406                           ;	unspecified, using default values
 10407                           ;	Table Read Protection Block 0
 10408                           ;	EBTR0 = 0x1, unprogrammed default
 10409                           ;	Table Read Protection Block 1
 10410                           ;	EBTR1 = 0x1, unprogrammed default
 10411                           ;	Table Read Protection Block 2
 10412                           ;	EBTR2 = 0x1, unprogrammed default
 10413                           ;	Table Read Protection Block 3
 10414                           ;	EBTR3 = 0x1, unprogrammed default
 10415  30000C                     	org	3145740
 10416  30000C  0F                 	db	15
 10417                           
 10418                           ;Config register CONFIG7H @ 0x30000D
 10419                           ;	unspecified, using default values
 10420                           ;	Boot Block Table Read Protection bit
 10421                           ;	EBTRB = 0x1, unprogrammed default
 10422  30000D                     	org	3145741
 10423  30000D  40                 	db	64
 10424                           tosu	equ	0xFFF
 10425                           tosh	equ	0xFFE
 10426                           tosl	equ	0xFFD
 10427                           stkptr	equ	0xFFC
 10428                           pclatu	equ	0xFFB
 10429                           pclath	equ	0xFFA
 10430                           pcl	equ	0xFF9
 10431                           tblptru	equ	0xFF8
 10432                           tblptrh	equ	0xFF7
 10433                           tblptrl	equ	0xFF6
 10434                           tablat	equ	0xFF5
 10435                           prodh	equ	0xFF4
 10436                           prodl	equ	0xFF3
 10437                           indf0	equ	0xFEF
 10438                           postinc0	equ	0xFEE
 10439                           postdec0	equ	0xFED
 10440                           preinc0	equ	0xFEC
 10441                           plusw0	equ	0xFEB
 10442                           fsr0h	equ	0xFEA
 10443                           fsr0l	equ	0xFE9
 10444                           wreg	equ	0xFE8
 10445                           indf1	equ	0xFE7
 10446                           postinc1	equ	0xFE6
 10447                           postdec1	equ	0xFE5
 10448                           preinc1	equ	0xFE4
 10449                           plusw1	equ	0xFE3
 10450                           fsr1h	equ	0xFE2
 10451                           fsr1l	equ	0xFE1
 10452                           bsr	equ	0xFE0
 10453                           indf2	equ	0xFDF
 10454                           postinc2	equ	0xFDE
 10455                           postdec2	equ	0xFDD
 10456                           preinc2	equ	0xFDC
 10457                           plusw2	equ	0xFDB
 10458                           fsr2h	equ	0xFDA
 10459                           fsr2l	equ	0xFD9
 10460                           status	equ	0xFD8

Data Sizes:
    Strings     80
    Constant    360
    Data        27
    BSS         119
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     67      80
    BANK0           160    143     155
    BANK1           256     16     139
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_15(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_15(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_10(CODE[4]), STR_9(CODE[4]), STR_6(CODE[4]), STR_5(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_10(CODE[4]), STR_9(CODE[4]), STR_6(CODE[4]), STR_5(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> line(BANK1[17]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_4(CODE[14]), STR_3(CODE[15]), STR_2(CODE[18]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK1[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_4(CODE[14]), STR_3(CODE[15]), STR_2(CODE[18]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 18
		 -> STR_4(CODE[14]), STR_3(CODE[15]), STR_2(CODE[18]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK1[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK1[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_4(CODE[14]), STR_3(CODE[15]), STR_2(CODE[18]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 17
		 -> line(BANK1[17]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    S755_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 17
		 -> line(BANK1[17]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> line(BANK1[17]), 

    lcd_puts@s	PTR const unsigned char  size(2) Largest target is 17
		 -> line(BANK1[17]), STR_1(CODE[14]), 


Critical Paths under _main in COMRAM

    _main->___flmul
    _efgtoa->___flmul
    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___flsub->___flmul
    ___fladd->___flmul
    ___flge->___flmul
    _atoi->_isspace
    _lcd_puts->_lcd_write
    _lcd_init->_lcd_clear
    _lcd_clear->_lcd_write
    _lcd_goto->_lcd_write
    _calc_time_interrupt->___flmul
    ___fltol->___flmul
    ___flmul->___fldiv
    ___fldiv->___xxtofl
    ___xxtofl->___wmul

Critical Paths under _isr in COMRAM

    _isr->i2___wmul

Critical Paths under _main in BANK0

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___flsub
    ___flsub->___fladd
    ___fladd->___flmul
    ___flge->___flmul
    _calc_time_interrupt->___fltol
    ___fltol->___flmul

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   62282
                                            141 BANK0      2     2      0
                            ___fladd
                            ___fldiv
                            ___flmul
                             ___wmul
                           ___xxtofl
                _calc_time_interrupt
                           _lcd_goto
                           _lcd_init
                           _lcd_puts
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             18    10      8   40474
                                              0 BANK1     16     8      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   39604
                                            133 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           50    44      6   39053
                                            109 BANK0     24    18      6
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _strncmp                                             11     5      6     595
                                             14 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              68    61      7   31430
                                             41 BANK0     68    61      7
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _tolower                                              8     6      2    1142
                                             20 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     551
                                             14 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcpy                                              10     6      4    1037
                                             14 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3957
                                             30 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     220
                                             14 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1537
                                             23 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4    1037
                                             14 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     669
                                             59 COMRAM     4     0      4
                                              0 BANK0     16    16      0
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     375
                                             14 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    4187
                                             33 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    3622
                                             17 BANK0     16     8      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     155
                                             14 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     986
                                             17 BANK0     12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     770
                                             14 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     613
                                             14 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     625
                                             14 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1985
                                             21 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     259
                                             14 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     371
                                             14 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     702
                                             14 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _lcd_puts                                             2     0      2     393
                                             16 COMRAM     2     0      2
                          _lcd_write
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             2     2      0     111
                                             17 COMRAM     1     1      0
                          _lcd_clear
                          _lcd_write
 ---------------------------------------------------------------------------------
 (2) _lcd_clear                                            1     1      0      44
                                             16 COMRAM     1     1      0
                          _lcd_write
 ---------------------------------------------------------------------------------
 (1) _lcd_goto                                             1     1      0      66
                                             16 COMRAM     1     1      0
                          _lcd_write
 ---------------------------------------------------------------------------------
 (2) _lcd_write                                            2     2      0      44
                                             14 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _calc_time_interrupt                                  4     0      4    8608
                                             27 BANK0      4     0      4
                            ___fldiv
                            ___flmul
                            ___fltol
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     607
                                             17 BANK0     10     6      4
                            ___fldiv (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    4313
                                             59 COMRAM     8     0      8
                                              0 BANK0     17    17      0
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    3443
                                             34 COMRAM    25    17      8
                             ___wmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     550
                                             20 COMRAM    14    10      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _isr                                                  8     8      0     211
                                              6 COMRAM     8     8      0
                           i2___wmul
 ---------------------------------------------------------------------------------
 (10) i2___wmul                                            6     2      4     211
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___fladd
     ___fldiv (ARG)
       ___wmul (ARG)
       ___xxtofl (ARG)
         ___wmul (ARG)
     ___flmul (ARG)
       ___fldiv (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___fldiv
   ___flmul
   ___wmul
   ___xxtofl
   _calc_time_interrupt
     ___fldiv
     ___flmul
     ___fltol
       ___fldiv (ARG)
       ___flmul (ARG)
   _lcd_goto
     _lcd_write
   _lcd_init
     _lcd_clear
       _lcd_write
     _lcd_write
   _lcd_puts
     _lcd_write
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
             ___flmul (ARG)
           ___flmul
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _isupper
           _pad
             _fputc
               _putch
             _fputs
               _fputc
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
         _isdigit
         _isupper
         _strncmp
         _tolower

 _isr (ROOT)
   i2___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100     10      8B       6       54.3%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     8F      9B       4       96.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     43      50       1       85.1%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     176       9        0.0%
DATA                 0      0     176      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Jun 23 23:03:15 2021

                 ___fldiv@aexp 003B                   ___fldiv@bexp 003A                              _i 004C  
                 ___fldiv@sign 0033                             l75 2F88                             l91 1FBA  
                           l94 1FEC                             l97 201E                   ___awdiv@sign 0014  
          ___wmul@multiplicand 0011                            l122 3420                            l131 3258  
                          l140 3136                            l125 3564                            l143 3524  
                          l137 3588                            l402 3032                            l413 2A04  
                          l440 28FE                            l408 29BE                            l417 3490  
                          l374 2D66                            l801 2666                            l713 33A2  
                          l730 1D74                            l387 2ED8                            l812 25FE  
                          l805 25A2                            l725 1F50                            l821 3308  
                          l727 1DB0                            l671 14BA                            l903 04F2  
                          l736 1DF6                            l680 178A                            l672 14A8  
                          l761 1BB6                            l673 146E                            l738 1E6E  
                          l739 1E5C                            l931 0930                            l764 1A48  
                          l757 1852                            l774 1B78                            l766 1AC0  
                          l862 2DAC                            l767 1AAE                            l688 15D4  
                          l697 16A4                            l865 2DEE                            l698 1692  
                          l867 2E28                            l885 0D5C                            l798 250A  
                          l994 120E                            l987 12C8                            _GIE 007F97  
                          _pad 2D68                            _isr 0008                   ___awmod@sign 0014  
                  lcd_goto@pos 0011                            wreg 000FE8                   ___flmul@aexp 0065  
                 ___flmul@bexp 006A                   ___flmul@sign 0064                   ___flmul@temp 006F  
                 ___flmul@prod 006B                   ___fltol@exp1 007A                           l1000 3190  
                         l1001 3198                           l1011 2B02                           l1111 34FE  
                         l1040 27EE                           l1105 32B4                           l1130 31F8  
                         l1043 27F6                           l1115 2BD8                           l1052 23F6  
                         l1125 31F0                           l1049 24B2                           l1073 3458  
                         l1059 34C8                           l1067 335A                           l1088 2CA2  
                         l1096 33E6                           l4001 3106                           l4011 3126  
                         l4003 3114                           l1099 3590                           l4013 312C  
                         l4005 311C                           l4021 31FA                           l4015 3130  
                         l4007 311E                           l4023 3200                           l4041 24B6  
                         l4017 357E                           l4009 3120                           l4025 3224  
                         l5001 0102                           l4043 24C6                           l4019 3580  
                         l4027 3228                           l4211 2BDA                           l5011 0156  
                         l5003 010C                           l4061 258C                           l4053 2544  
                         l4045 24D4                           l4301 1408                           l4221 2C5C  
                         l4213 2BEC                           l5021 019A                           l5013 0160  
                         l5005 011C                           l4071 260C                           l4063 2598  
                         l4055 254C                           l4047 251A                           l4311 1466  
                         l4303 140C                           l4231 12E8                           l4215 2BFE  
                         l5111 0574                           l5023 01A6                           l5031 01BC  
                         l5015 0168                           l5007 012A                           l4081 2654  
                         l4073 260E                           l4065 25D4                           l4057 2558  
                         l4049 2530                           l4401 1708                           l4321 149C  
                         l4313 147C                           l4305 1410                           l4233 12F8  
                         l4241 1322                           l4225 12CA                           l4217 2C08  
                         l5201 0A2C                           l5121 05AC                           l5113 057C  
                         l5105 0510                           l5041 0246                           l5033 01E2  
                         l5025 01AE                           l5017 017A                           l5009 0132  
                         l4083 2656                           l4075 2612                           l4067 25E0  
                         l4059 258A                           l4411 174E                           l4403 170A  
                         l4331 14EC                           l4323 14A6                           l4315 1488  
                         l4307 143A                           l4251 1352                           l4243 1332  
                         l4235 1308                           l4227 12D8                           l4219 2C26  
                         l5211 0A56                           l5203 0A30                           l5131 05F6  
                         l5123 05BA                           l5107 0522                           l5115 0580  
                         l5051 02B6                           l5043 025E                           l5027 01B2  
                         l5019 0188                           l4077 2636                           l4069 25EE  
                         l4501 1CB6                           l4421 1778                           l4413 175C  
                         l4405 171A                           l4341 1528                           l4333 14FC  
                         l4325 14C8                           l4317 148C                           l4309 1456  
                         l4261 1392                           l4253 1360                           l4245 1338  
                         l4237 1318                           l4229 12E6                           l5301 0D36  
                         l5221 0A8A                           l5213 0A5C                           l5205 0A36  
                         l5141 063C                           l5133 0608                           l5125 05BE  
                         l5117 0588                           l5109 053E                           l5045 0268  
                         l5037 0218                           l5029 01B6                           l4079 2646  
                         l5311 267C                           l4423 177A                           l4415 1762  
                         l4407 172A                           l4351 156E                           l4343 1536  
                         l4335 150A                           l4327 14D8                           l4319 149A  
                         l4271 13CC                           l4263 1394                           l4255 1362  
                         l4247 134A                           l4239 131A                           l4431 33C2  
                         l5303 0D3C                           l5207 0A42                           l5215 0A62  
                         l5223 0A90                           l5231 0B28                           l5151 0750  
                         l5143 06A0                           l5127 05D0                           l5135 0610  
                         l5119 059A                           l5055 02EC                           l5039 022A  
                         l4521 1D38                           l4513 1CEE                           l4505 1CCA  
                         l4601 17BA                           l5321 26DA                           l5313 2680  
                         l4417 1764                           l4409 174A                           l4361 15EA  
                         l4353 15A2                           l4345 1538                           l4337 1518  
                         l4281 13E0                           l4273 13D0                           l4257 1372  
                         l4265 139C                           l4249 134C                           l4433 33C6  
                         l4441 34F2                           l5241 0B92                           l5233 0B46  
                         l5225 0AE8                           l5217 0A74                           l5209 0A52  
                         l5161 080E                           l5153 0784                           l5145 06F8  
                         l5137 0618                           l5129 05DE                           l5081 0450  
                         l5073 0386                           l5057 02FE                           l5049 0290  
                         l5401 0ED0                           l4531 1D7E                           l4523 1D40  
                         l4515 1D08                           l4507 1CDA                           l4611 17F6  
                         l4603 17CA                           l4451 351C                           l5331 2706  
                         l5315 2684                           l4419 176A                           l4371 1626  
                         l4363 15FA                           l4355 15A4                           l4347 1542  
                         l4339 1524                           l4291 13F4                           l4283 13E4  
                         l4275 13D4                           l4267 13AC                           l4259 1382  
                         l4427 33A4                           l4435 34CA                           l5251 0BD0  
                         l5243 0B96                           l5235 0B62                           l5227 0B1C  
                         l5219 0A86                           l5171 08E2                           l5163 081E  
                         l5155 07B8                           l5147 072C                           l5139 0628  
                         l5091 04B2                           l5083 0458                           l5075 03BA  
                         l5059 031A                           l5067 0336                           l5411 0F6A  
                         l5403 0EDE                           l4541 1DD6                           l4533 1D9C  
                         l4525 1D50                           l4517 1D18                           l4509 1CDA  
                         l4461 1BD4                           l4701 1B18                           l4621 182C  
                         l4613 17FC                           l4605 17DA                           l5341 27AE  
                         l5333 273A                           l5325 26E0                           l5317 26A0  
                         l5309 2668                           l4381 1652                           l4373 1628  
                         l4357 15B4                           l4349 1548                           l4293 13F8  
                         l4285 13E8                           l4277 13D8                           l4269 13BE  
                         l4429 33B0                           l4437 34D6                           l4445 3422  
                         l5261 0C02                           l5253 0BD8                           l5245 0BA6  
                         l5237 0B74                           l5229 0B24                           l5181 0928  
                         l5173 08F6                           l5165 0852                           l5157 07CC  
                         l5149 0732                           l5093 04C4                           l5077 03C0  
                         l5085 048C                           l5069 0350                           l5421 0FF6  
                         l5405 0F02                           l5501 32F6                           ?_pad 001F  
                         l4551 1E14                           l4543 1DDC                           l4535 1D9E  
                         l4527 1D64                           l4519 1D28                           l4463 1BE4  
                         l4471 1C0E                           l4455 1BB8                           l4711 1B8C  
                         l4703 1B32                           l4623 183C                           l4615 180A  
                         l4607 17E0                           l5343 27C0                           l5327 26F6  
                         l5319 26D6                           l4391 168A                           l4375 1636  
                         l4367 160E                           l4383 1654                           l4359 15C4  
                         l4295 13FC                           l4287 13EC                           l4279 13DC  
                         l4439 34DA                           l5263 0C08                           l5271 0C58  
                         l5255 0BE6                           l5247 0BB8                           l5239 0B82  
                         l5191 09E4                           l5183 094C                           l5167 08AA  
                         l5175 08FA                           l5159 07FE                           l5095 04CC  
                         l5087 049C                           l5079 041C                           l5351 2B04  
                         l5431 1092                           l5423 1028                           l5415 0FB2  
                         l5407 0F3C                           l5511 1F98                           l4561 1E7E  
                         l4553 1E18                           l4545 1DE6                           l4537 1DAE  
                         l4529 1D72                           l4481 1C3A                           l4473 1C1E  
                         l4465 1BF4                           l4457 1BC4                           l4713 1B9A  
                         l4705 1B46                           l4641 18BE                           l4633 1886  
                         l4625 1842                           l4617 180C                           l4609 17F0  
                         l3841 340C                           l3833 33EA                           l4449 3500  
                         l5345 27D2                           l5337 2770                           l5329 26FE  
                         l4801 2EB8                           l4377 163E                           l4369 1618  
                         l4385 1662                           l4297 1400                           l4289 13F0  
                         l5281 0CA8                           l5273 0C6A                           l5265 0C2E  
                         l5257 0BEE                           l5249 0BC0                           l5193 09F2  
                         l5185 09B0                           l5177 090A                           l5169 08AE  
                         l5097 04E6                           l5089 04A0                           l5361 2B60  
                         l5353 2B2E                           l5441 112A                           l5433 10A0  
                         l5425 1038                           l5409 0F5C                           l5417 0FC4  
                         l5521 1FA8                           l5513 1F9A                           l5505 1F52  
                         l4571 1EE0                           l4563 1E8A                           l4555 1E26  
                         l4547 1DF4                           l4539 1DC0                           l4483 1C4A  
                         l4491 1C74                           l4475 1C24                           l4467 1C04  
                         l4459 1BD2                           l4715 1B9C                           l4707 1B60  
                         l4651 1908                           l4643 18D6                           l4635 1892  
                         l4627 1862                           l4619 181C                           l3843 341C  
                         l3835 33F2                           l4731 2CA8                           l4803 2EC8  
                         l4811 2FB8                           l4395 16B4                           l4387 1666  
                         l4379 1642                           l4299 1404                           l4723 335C  
                         l5283 0CB0                           l5275 0C84                           l5267 0C4A  
                         l5259 0BF6                           l5187 09BE                           l5195 09FA  
                         l5179 091C                           l5099 04FE                           l5363 2B7C  
                         l5435 10D0                           l5427 106A                           l5419 0FE6  
                         l5371 0D5E                           l5531 1FEA                           l5523 1FB4  
                         l5515 1F9C                           l5507 1F74                           l4581 1F3E  
                         l4573 1EF6                           l4565 1E98                           l4557 1E54  
                         l4549 1E06                           l4493 1C84                           l4485 1C5A  
                         l4477 1C2A                           l4469 1C06                           l4709 1B7C  
                         l4717 1BA2                           l4661 195E                           l4653 1918  
                         l4645 18E2                           l4637 189C                           l4629 1872  
                         l3845 341E                           l3837 3408                           l4741 2CD8  
                         l4733 2CB6                           l4805 2ED0                           l4821 3030  
                         l4813 2FC8                           l4397 16C0                           l4389 1674  
                         l4725 336E                           l4901 2D76                           l5293 0D00  
                         l5285 0CC0                           l5277 0C8A                           l5269 0C52  
                         l5197 0A0E                           l5189 09D2                           l5365 2B8E  
                         l5357 2B3A                           l5461 1268                           l5445 1198  
                         l5429 107C                           l5381 0DCA                           l5373 0D82  
                         l5541 2046                           l5533 1FFA                           l5525 1FB8  
                         l5517 1F9E                           l5509 1F82                           l4583 1F44  
                         l4575 1F10                           l4567 1EC2                           l4495 1C9A  
                         l4487 1C6A                           l4479 1C38                           l4719 1BA6  
                         l4671 1A02                           l4663 197A                           l4655 1924  
                         l4647 18EE                           l4639 18B2                           l3839 340A  
                         l4751 2D06                           l4743 2CDC                           l4735 2CBE  
                         l4815 2FF6                           l4831 296E                           l4399 16CE  
                         l4911 2DCC                           l4903 2D8A                           l5295 0D12  
                         l5287 0CC6                           l5279 0C9C                           l5199 0A1C  
                         l5367 2BB6                           l5359 2B48                           l5447 11AA  
                         l5455 1222                           l5439 10FC                           l5391 0E4A  
                         l5383 0E00                           l5375 0D90                           l5471 1292  
                         l5551 2194                           l5543 20D6                           l5535 2014  
                         l5527 1FC8                           l5519 1FA2                           l4585 1F46  
                         l4577 1F2C                           l4569 1EC6                           l4497 1CAA  
                         l4489 1C6C                           l4681 1A58                           l4673 1A10  
                         l4665 1986                           l4657 1934                           l4649 18FC  
                         l4593 178C                           l4761 2D3A                           l4753 2D14  
                         l4745 2CE4                           l4737 2CC2                           l4729 2CA4  
                         l4817 3006                           l4809 2F8A                           l4841 29FC  
                         l4833 297E                           l4825 2900                           l4921 2A06  
                         l4913 2DD0                           l4905 2D98                           l5297 0D1E  
                         l5289 0CCC                           l5473 12B6                           l5457 1246  
                         l5465 1276                           l5449 11DE                           l5385 0E0E  
                         l5377 0DA2                           l5481 3140                           l5561 224C  
                         l5553 21EE                           l5545 20EA                           l5537 201C  
                         l5529 1FE2                           l4579 1F30                           l4499 1CB2  
                         l4683 1A66                           l4675 1A2E                           l4667 19A2  
                         l4659 194E                           l4595 179A                           l5491 2F84  
                         l3955 354C                           l4763 2D40                           l4755 2D1A  
                         l4747 2CF6                           l4739 2CD0                           l4819 302A  
                         l4843 2A02                           l4835 298C                           l4827 2930  
                         l4851 3480                           l4923 2A26                           l4915 2DFC  
                         l4907 2DA4                           l5299 0D26                           l5467 1284  
                         l5459 1254                           l5395 0E92                           l5387 0E1C  
                         l5379 0DA6                           l5483 314E                           l5563 2252  
                         l5555 2214                           l5547 2108                           l5539 202C  
                         l4693 1AD0                           l4685 1A6A                           l4677 1A38  
                         l4669 19CC                           l4597 17A8                           l4861 2824  
                         l3957 354E                           l3981 30C4                           l4757 2D30  
                         l4749 2CFE                           l4765 2D46                           l4781 2E48  
                         l4773 2E2A                           l4837 299E                           l4829 2940  
                         l4925 2A64                           l4933 2AA4                           l4917 2E10  
                         l4909 2DB8                           l5389 0E3C                           l5397 0EA4  
                         l5485 3174                           l5493 32B6                           l5565 225E  
                         l5557 221A                           l5549 2172                           l4695 1ADC  
                         l4687 1A78                           l4679 1A46                           l4599 17AA  
                         l4871 2872                           l4863 284E                           l4855 27F8  
                         l5487 2EDA                           l3959 3554                           l3991 30F0  
                         l3983 30D4                           l3975 30C0                           l5591 2724  
                         l4767 2D56                           l4759 2D38                           l4791 2E80  
                         l4783 2E56                           l4775 2E2E                           l4839 29AC  
                         l4847 345A                           l4935 2AB6                           l4927 2A8C  
                         l4943 325A                           l4951 31D0                           l5399 0EC8  
                         l5479 3138                           l5495 32C8                           l5567 2284  
                         l5559 2226                           l4697 1AEA                           l4689 1AA6  
                         l4881 289E                           l4865 2850                           l4857 2810  
                         l5489 2F72                           l3993 30F2                           l3985 30DC  
                         l3977 30C0                           l4769 2D5E                           l4793 2E8E  
                         l4785 2E5E                           l4777 2E3C                           l4849 3470  
                         l4929 2A98                           l4961 2316                           l4945 326A  
                         l4953 31E2                           l5497 32D0                           l5569 228A  
                         l4699 1B14                           l4891 28CE                           l4867 2860  
                         l3995 30F4                           l3987 30DE                           l3979 30C2  
                         l4795 2EA4                           l4787 2E70                           l4779 2E44  
                         l4939 2AFA                           l4971 23E6                           l4963 232A  
                         l4947 319A                           l5499 32D8                           ?_isr 0001  
                         l4893 28DE                           l4877 288A                           l4869 2864  
                         l3997 3102                           l3989 30E0                           l4797 2EAC  
                         l4789 2E78                           l4981 24A2                           l4965 2338  
                         l4973 241A                           l4957 229E                           l4895 28EE  
                         l4887 28B2                           l4879 2894                           l3999 3104  
                         l4991 330E                           l4799 2EB2                           l4975 2456  
                         l4959 22BE                           l4889 28BE                           l4985 3492  
                         l4993 3322                           l4977 246A                           l4969 23AA  
                         l4995 3350                           l4979 2492                           l4899 2D68  
                         l4997 3354                           l4989 330A                           STR_1 7FD0  
                         STR_2 7FAF                           STR_3 7FC1                           STR_4 7FDE  
                         STR_5 7FEC                           STR_6 7FF4                           STR_9 7FF0  
                         u5100 2C5C                           u5101 2C58                           u5110 12E6  
                         u5111 12E2                           u6000 2D30                           u5200 143A  
                         u5120 12F8                           u6001 2D2C                           u5201 1436  
                         u5121 12F4                           u6010 2D56                           u5210 1452  
                         u5130 1308                           u6011 2D52                           u5211 144C  
                         u5131 1304                           u6020 2E3C                           u6100 302A  
                         u5300 1536                           u5220 1454                           u5140 134A  
                         u6021 2E38                           u6101 3026                           u5301 1532  
                         u5141 1346                           u6030 2E56                           u6110 2930  
                         u5310 156E                           u5230 147C                           u5150 1360  
                         u5070 2BEC                           u6031 2E52                           u6111 292C  
                         u5311 156A                           u5231 1478                           u5151 135C  
                         u5071 2BE8                           u6200 2886                           u6040 2E70  
                         u6120 296E                           u5400 168A                           u5320 15B4  
                         u5240 149A                           u5160 1372                           u5080 2BFE  
                         u7000 0BB8                           u6201 2882                           u6041 2E6C  
                         u6121 296A                           u5401 1686                           u5321 15B0  
                         u5241 1496                           u5161 136E                           u5081 2BFA  
                         u7001 0BB4                           u6210 28AE                           u6050 2E8E  
                         u6130 298C                           u5410 16A0                           u5330 15EA  
                         u5250 14BA                           u5170 1382                           u5090 2C26  
                         u7010 0BE6                           u6211 28AA                           u6051 2E8A  
                         u6131 2988                           u5411 169C                           u5331 15E6  
                         u5251 14B6                           u5171 137E                           u5091 2C22  
                         u7011 0BE2                           u6220 28CE                           u7100 26F2  
                         u6060 2EA4                           u6140 29AC                           u5420 16B4  
                         u5340 15FA                           u5260 14C8                           u5180 13BE  
                         u6300 2A8C                           u5500 33E6                           u7020 0C6A  
                         u6221 28CA                           u7101 26EE                           u6061 2EA0  
                         u6141 29A8                           u5421 16B0                           u5341 15F6  
                         u5261 14C4                           u5181 13BA                           u6301 2A88  
                         u5501 33E2                           u7021 0C66                           u6230 28DE  
                         u7110 27A8                           u6070 2EC8                           u6150 29FC  
                         u5430 16CE                           u5350 1626                           u5270 14D8  
                         u5190 13CC                           u6310 2AB6                           u5510 34F2  
                         u7030 0C84                           u6231 28DA                           u7111 27A2  
                         u6071 2EC4                           u6151 29F8                           u5431 16CA  
                         u5351 1622                           u5271 14D4                           u5191 13C8  
                         u6311 2AB2                           u5511 34EE                           u7031 0C80  
                         u5600 1C9A                           u7120 27AA                           u6080 2FB8  
                         u6160 3470                           u5440 1708                           u5360 1636  
                         u5280 150A                           u6400 22E8                           u6240 2D76  
                         u5520 3452                           u7040 0C9C                           u7200 0D82  
                         u5601 1C96                           u6081 2FB4                           u6161 346C  
                         u5441 1704                           u5361 1632                           u5281 1506  
                         u6241 2D72                           u5521 344C                           u7041 0C98  
                         u7201 0D7E                           u5610 1CDA                           u6170 2810  
                         u7130 27C0                           u6090 2FF6                           u5450 171A  
                         u5370 1652                           u5290 1518                           u6330 2AF0  
                         u6410 2316                           u6250 2D98                           u5530 3454  
                         u7050 0CFA                           u7210 0DCA                           u5611 1CD6  
                         u6171 280C                           u7131 27BC                           u6091 2FF2  
                         u5451 1716                           u5371 164E                           u5291 1514  
                         u6331 2AEA                           u6411 2312                           u6251 2D94  
                         u7051 0CF4                           u7211 0DC6                           u4900 24C6  
                         u5700 1E54                           u5620 1D50                           u5540 1BD2  
                         u6180 2844                           u6500 34C2                           u7140 27D2  
                         u5460 172A                           u5380 1662                           u6340 2AF2  
                         u6420 2338                           u6260 2DEE                           u7060 0CFC  
                         u7300 0FC4                           u7220 0E0E                           u4901 24C2  
                         u5701 1E50                           u5621 1D4C                           u5541 1BCE  
                         u6501 34BC                           u7141 27CE                           u5461 1726  
                         u5381 165E                           u6325 2AC8                           u6421 2334  
                         u6405 22DE                           u6261 2DEA                           u7301 0FC0  
                         u7221 0E0A                           u4910 24D4                           u5710 1E6A  
                         u5630 1D72                           u5550 1BE4                           u6190 2872  
                         u6510 34C4                           u5470 174A                           u5390 1674  
                         u6270 2DFC                           u6350 32A2                           u7070 0D12  
                         u7150 2B2E                           u7310 0FF6                           u7230 0E8C  
                         u4911 24D0                           u5711 1E66                           u5631 1D6E  
                         u5551 1BE0                           u6191 286E                           u5471 1746  
                         u5391 1670                           u6271 2DF8                           u7071 0D0E  
                         u7151 2B2A                           u7311 0FF2                           u7231 0E86  
                         u4920 2530                           u5720 1E7E                           u5640 1D9C  
                         u5560 1BF4                           u5800 180A                           u6520 3322  
                         u7080 26A0                           u5480 175C                           u6280 2A46  
                         u6440 23A6                           u6360 32B4                           u6600 0214  
                         u7160 2B60                           u7320 1038                           u7240 0E8E  
                         u7400 1FC8                           u4921 252C                           u5721 1E7A  
                         u5641 1D98                           u5561 1BF0                           u5801 1806  
                         u6185 283A                           u6521 331E                           u7081 269C  
                         u5481 1758                           u6441 23A2                           u6361 32B0  
                         u7161 2B5C                           u7321 1034                           u7401 1FC4  
                         u4930 2586                           u5730 1E98                           u5650 1DC0  
                         u5570 1C38                           u5810 181C                           u6530 3350  
                         u7090 26D6                           u5490 1778                           u6290 2A64  
                         u6450 23CA                           u6370 31CA                           u6610 022A  
                         u7170 2B7C                           u7330 107C                           u7250 0EA4  
                         u7410 1FFA                           u4931 2582                           u5731 1E94  
                         u5651 1DBC                           u5571 1C34                           u5811 1818  
                         u6531 334C                           u7091 26D2                           u5491 1774  
                         u6291 2A60                           u6435 234C                           u6371 31C4  
                         u6611 0226                           u7171 2B78                           u7331 1078  
                         u7251 0EA0                           u7411 1FF6                           u4940 25D0  
                         u5740 1EE0                           u5660 1DD6                           u5580 1C4A  
                         u5900 1ABC                           u5820 182C                           u6460 23E6  
                         u6436 2356                           u6380 31CC                           u6700 04C4  
                         u6620 02B6                           u6540 012A                           u7180 2B8E  
                         u7340 112A                           u7260 0EC8                           u7420 202C  
                         u4941 25CC                           u5741 1EDC                           u5661 1DD2  
                         u5581 1C46                           u5901 1AB8                           u5821 1828  
                         u6285 2A3C                           u6461 23E2                           u6437 2366  
                         u6357 3298                           u6701 04C0                           u6621 02B2  
                         u6541 0126                           u7181 2B8A                           u7341 1126  
                         u7261 0EC4                           u7421 2028                           u4950 25EE  
                         u5750 1F10                           u5670 1DF4                           u5590 1C5A  
                         u5910 1AD0                           u5830 1862                           u4870 3220  
                         u6470 243A                           u6390 31E2                           u6710 04E6  
                         u6630 02E6                           u6550 017A                           u7190 2BB6  
                         u7350 1192                           u7270 0F02                           u4951 25EA  
                         u5751 1F0C                           u5671 1DF0                           u5591 1C56  
                         u5911 1ACC                           u5831 185E                           u6455 23C0  
                         u6391 31DE                           u6711 04E2                           u6631 02E0  
                         u6551 0176                           u7191 2BB2                           u7351 118C  
                         u7271 0EFE                           u4960 25FE                           u5760 1F3E  
                         u5680 1E14                           u5920 1AEA                           u5840 1872  
                         u4880 3248                           u6480 2456                           u6800 05DE  
                         u6720 050C                           u6640 02E8                           u6560 0188  
                         u7360 1194                           u7280 0FAC                           u4961 25FA  
                         u5761 1F3A                           u5681 1E10                           u5921 1AE6  
                         u5841 186E                           u6481 2452                           u6801 05DA  
                         u6721 0508                           u6561 0184                           u7281 0FA6  
                         u4970 260C                           u5690 1E26                           u5930 1B32  
                         u5850 19EC                           u5770 17A8                           u4890 3258  
                         u6490 2492                           u6810 0608                           u6730 0522  
                         u6650 02FE                           u6570 019A                           u7370 11AA  
                         u7290 0FAE                           u4971 2608                           u5691 1E22  
                         u5931 1B2E                           u5771 17A4                           u4891 3254  
                         u6491 248E                           u6475 2430                           u6811 0604  
                         u6731 051E                           u6651 02FA                           u6571 0196  
                         u7371 11A6                           u4980 2646                           u5940 1B60  
                         u5860 1A46                           u5780 17BA                           u6900 09D2  
                         u6820 0750                           u6740 053E                           u6660 0382  
                         u6580 01E2                           u7380 1246                           u4981 2642  
                         u5941 1B5C                           u5861 1A42                           u5781 17B6  
                         u7437 30CA                           u4877 3216                           u6901 09CE  
                         u6821 074C                           u6741 053A                           u6661 037E  
                         u6581 01DE                           u7381 1242                           u4990 2654  
                         u5950 1B9A                           u5870 1A66                           u5790 17CA  
                         u6910 09E4                           u6830 07B8                           u6750 0574  
                         u6670 0418                           u6590 0212                           u7390 3190  
                         u4991 2650                           u5951 1B96                           u5871 1A62  
                         u5855 19E2                           u5791 17C6                           u7447 30E6  
                         u4887 323E                           u6911 09E0                           u6831 07B4  
                         u6751 0570                           u6671 0414                           u6591 020C  
                         u7391 318C                           u5880 1A78                           u5960 2CB6  
                         u6920 09F2                           u6840 07FE                           u6760 059A  
                         u6680 048C                           u5881 1A74                           u7457 30FA  
                         u5961 2CB2                           u6921 09EE                           u6841 07FA  
                         u6761 0596                           u6681 0488                           u5890 1AA6  
                         u5970 2CD0                           u6930 0A0E                           u6850 080E  
                         u6770 05AC                           u6690 04B2                           u5891 1AA2  
                         u7467 310C                           u5971 2CCC                           u6931 0A0A  
                         u6851 080A                           u6771 05A8                           u6691 04AE  
                         u5980 2CF6                           u6940 0A1C                           u6860 08AA  
                         u6780 05BA                           u7477 355A                           u5981 2CF2  
                         u6941 0A18                           u6861 08A6                           u6781 05B6  
                         u5990 2D14                           u6950 0A74                           u6870 08F6  
                         u6790 05D0                           u7487 33EC                           u5991 2D10  
                         u6951 0A70                           u6871 08F2                           u6791 05CC  
                         u6960 0B46                           u6880 091C                           u6961 0B42  
                         u6881 0918                           u6970 0B62                           u6890 09BE  
                         u6971 0B5E                           u6891 09BA                           u6980 0B74  
                         u6981 0B70                           u6990 0B82                           u6991 0B7E  
                         _data 004A                           _dbuf 0116                           _gain 00F7  
                         _atoi 2668                           _main 1F52                           _line 0166  
                         _prec 00F3                           _nout 00EF                           pad@i 0026  
                         pad@p 0023                           fsr1h 000FE2                           fsr2h 000FDA  
                         indf1 000FE7                           indf2 000FDF                           fsr1l 000FE1  
                         pad@w 0028                           fsr2l 000FD9                           btemp 0051  
                ___fpclassifyf 2A06                           prodh 000FF4                           prodl 000FF3  
                         start 00FE                ___fldiv@new_exp 0034                   _tolower$1040 001B  
                 ___param_bank 000000                          ??_pad 0025                          ??_isr 0007  
                ___fltol@sign1 0079                          ?_atoi 0016                __end_of___fladd 178C  
                        ?_main 0001                __end_of___fldiv 1F52                __end_of___awdiv 2D68  
              __end_of___flneg 3492                          STR_10 7FF8                          STR_13 7FFC  
                        STR_15 7FFC                __end_of___awmod 2EDA                __end_of___flmul 1BB8  
              __end_of___flsub 33A4                __end_of___fltol 2900                          _T0CON 000FD5  
              ___awdiv@divisor 0011                          i2l110 00B8                          i2l113 00E2  
                        i2l109 00BC                          i2l143 354A                ___awdiv@counter 0013  
                 vfpfcnvrt@fmt 00CF                          _TMR0H 000FD7                          _TMR0L 000FD6  
                        _PORTA 000F80                          _PORTB 000F81                          _PORTD 000F83  
                        _TRISA 000F92                          _TRISB 000F93                          _TRISD 000F95  
                        _flags 0048                          _fputc 2BDA                          _fputs 33A4  
              __end_of_isdigit 34CA                          _value 004E                          atoi@n 0023  
                        pad@fp 001F                          atoi@s 0016                          _width 00F1  
                        _putch 3590                __end_of_isspace 335C                __end_of_isupper 345A  
                        tablat 000FF5                __end_of_sindata 7FAF               __end_ofi2___wmul 354C  
                        ttemp5 0052                          ttemp6 0055                          ttemp7 0059  
                        status 000FD8                          wtemp8 0052                __end_of_sprintf 330A  
               ?___fpclassifyf 000F                __end_of_tolower 31FA                __end_of_strncmp 2BDA  
              __initialization 3034                   __end_of_atoi 27F8                   __end_of_main 229E  
                       ??_atoi 0018                         ??_main 00ED                  __activetblptr 000002  
                       _ADCON0 000FC2                         _ADCON1 000FC1                         _ADCON2 000FC0  
                       ?_fputc 000F                         ?_fputs 0018                         _ADRESH 000FC4  
                       _ADRESL 000FC3               ___awdiv@dividend 000F                         _ANSELA 000F38  
                       ?_putch 0001                         _ANSELB 000F39                         _ANSELD 000F3B  
                       _GODONE 007E11                         i2l4161 0030                         i2l4171 007E  
                       i2l4163 0036                         i2l4181 00C0                         i2l4173 0086  
                       i2l4165 003C                         i2l4087 3526                         i2l4183 00C4  
                       i2l4175 009C                         i2l4167 0050                         i2l4159 0022  
                       i2l4089 3542                         i2l4185 00DA                         i2l4177 00A2  
                       i2l4169 006A                         i2l4179 00B0                         _TMR0IE 007F95  
                       _TMR0IF 007F92                         _TMR0IP 007F8A               __end_of___xxtofl 2668  
                       _Analog 0100                   vfprintf@cfmt 00EB               __end_of_lcd_init 3138  
             __end_of_lcd_goto 358A                         ___flge 2900                         ___fleq 2F8A  
             __end_of_lcd_puts 325A                      ??___fladd 0079                         ___wmul 3500  
                    ??___fldiv 002B                      ??___awdiv 0013                      ??___flneg 0013  
                    ??___awmod 0013                      ??___flmul 0060                      ??___flsub 0044  
                    ??___fltol 0075                         _efgtoa 0102                         _floorf 229E  
                       _offset 00F5                         clear_0 3092                         clear_1 30AC  
             ___awdiv@quotient 0015                ___awmod@divisor 0011                         isa$std 000001  
              ___awmod@counter 0013                         pad@buf 0021                         _strcpy 325A  
                       _strlen 34CA                         fputc@c 000F                         fputs@c 001C  
                       fputs@i 001D                   __pdataCOMRAM 004F                         fputs@s 0018  
                    ??_isdigit 0011                ___fpclassifyf@e 0017                ___fpclassifyf@u 0019  
              ___fpclassifyf@x 000F                   __mediumconst 7E46                      ??_isspace 0011  
                       tblptrh 000FF7                      ??_isupper 0011                         tblptrl 000FF6  
                       tblptru 000FF8                         putch@c 0001               __end_of_vfprintf 319A  
                    ??_sprintf 0044                      ??_tolower 0017                      ??_strncmp 0015  
                   ___flge@ff1 0071                ??___fpclassifyf 0013                     ___flge@ff2 0075  
                 ___xxtofl@arg 001F                   ___xxtofl@exp 001E                   ___xxtofl@val 0015  
                   ___fleq@ff1 000F                     ___fleq@ff2 0013                     __accesstop 0060  
      __end_of__initialization 30B2                     ___flneg@f1 000F    __end_of_calc_time_interrupt 2F8A  
                ___rparam_used 000001                     ___fltol@f1 0071                 __pcstackCOMRAM 0001  
                 __pidataBANK0 358A                   __pidataBANK1 3566                  __end_of_fputc 2CA4  
                __end_of_fputs 33E8                  __end_of_putch 3592                      ?i2___wmul 0001  
           __size_of_lcd_clear 001A             __size_of_lcd_write 003A                        ??_fputc 0013  
                      ??_fputs 001C                        ??_putch 000F                     __pbssBANK0 00EF  
                   __pbssBANK1 0100                     _efgtoa$880 0095                     _efgtoa$881 0097  
                   _efgtoa$890 009B                     _efgtoa$891 009D                     _efgtoa$892 009F  
                   _efgtoa$886 0099                        ?___flge 0071                        ?___fleq 000F  
                      ?___wmul 000F                        ?_efgtoa 0089                        ?_floorf 003C  
                      ?_strcpy 000F                        ?_strlen 000F                     ??i2___wmul 0005  
                    ?___xxtofl 0015             __size_of_vfpfcnvrt 056C                      ?_lcd_init 0001  
                    ?_lcd_goto 0001                      ?_lcd_puts 0011                        __Hparam 0000  
                      __Lparam 0000              __end_of_lcd_clear 3566                __size_of___flge 0106  
              __size_of___fleq 00AA                        ___fladd 12CA                        ___fldiv 1BB8  
                      ___awdiv 2CA4                        ___flneg 345A                        ___awmod 2E2A  
                      ___flmul 178C                        ___flsub 335C                        ___fltol 27F8  
            __end_of_lcd_write 3422                __size_of___wmul 0026                      ?_vfprintf 00E5  
              __size_of_efgtoa 0C5C                __size_of_floorf 0216                        __pcinit 3034  
                      __ramtop 0600                        __ptext0 1F52                        __ptext1 32B6  
                      __ptext2 3138                        __ptext3 0D5E                        __ptext4 2B04  
                      __ptext5 0102                        __ptext6 319A                        __ptext7 3422  
                      __ptext8 325A                        __ptext9 2D68                __size_of_strcpy 005C  
              __size_of_strlen 0036                   __size_of_pad 00C2                        _isdigit 3492  
                 __size_of_isr 00F6                     _offset_lcd 010E                     ??___xxtofl 0019  
             ___awmod@dividend 000F                        _isspace 330A                        _isupper 3422  
                      efgtoa@c 008F                        efgtoa@d 00AD                        efgtoa@e 00C5  
                      efgtoa@f 008B                        efgtoa@g 00C1                        efgtoa@h 00B7  
                      efgtoa@i 00BF                        efgtoa@l 00BB                        efgtoa@m 00A7  
                      efgtoa@n 00C7                        efgtoa@p 00B1                        efgtoa@t 00A1  
                      efgtoa@u 00C9                        efgtoa@w 00B3                        _sindata 7E47  
                      atoi@neg 001C                        _sprintf 32B6                        _tolower 319A  
                   ??_lcd_init 0012                     ??_lcd_goto 0011                        _strncmp 2B04  
                   ??_lcd_puts 0013           end_of_initialization 30B2                        floorf@e 006A  
                      floorf@m 0066                        floorf@u 006C                        floorf@x 003C  
                      fputc@fp 0011                  __Lmediumconst 7E46                        fputs@fp 001A  
          i2___wmul@multiplier 0001              __end_of_vfpfcnvrt 12CA                     efgtoa@mode 00B6  
                   efgtoa@sign 00AF                     _value_TMR0 00F9                        postdec1 000FE5  
                      postdec2 000FDD                        postinc0 000FEE                        postinc1 000FE6  
                      postinc2 000FDE                     ??_vfprintf 0044                        strcpy@d 0017  
                      strlen@a 0011                        strcpy@s 0015                        strlen@s 000F  
                    _PORTBbits 000F81                    ___fladd@grs 0080                  ___xxtofl@sign 001D  
                  ___fldiv@grs 0036                    ___fldiv@rem 002F                    ___flmul@grs 0066  
                   lcd_write@c 0010                 __end_of___flge 2A06                 __end_of___fleq 3034  
                  vfpfcnvrt@ap 00D1                    vfpfcnvrt@ct 00E1                    vfpfcnvrt@fp 00CD  
               __end_of___wmul 3526                  __pidataCOMRAM 358E                 __end_of_efgtoa 0D5E  
               __end_of_floorf 24B4                     floorf@F527 0106               i2___wmul@product 0005  
                _default_tocon 004F                 __end_of_strcpy 32B6                 __end_of_strlen 3500  
          start_initialization 3034              __size_ofi2___wmul 0026                    __end_of_pad 2E2A  
                  __end_of_isr 00FE          __end_of___fpclassifyf 2B04                    vfprintf@fmt 00E7  
                     ??___flge 0079                       ??___fleq 0017   __size_of_calc_time_interrupt 00B0  
                     ??___wmul 0013                       ??_efgtoa 0090                    __pdataBANK0 00F5  
                  __pdataBANK1 0166                       ??_floorf 0060                       ??_strcpy 0013  
                     ??_strlen 0011                      ___fladd@a 0075                      ___fladd@b 0071  
                    ___fldiv@a 0027                      ___fldiv@b 0023                      ___flmul@a 0040  
                    ___flmul@b 003C                    __pbssCOMRAM 0044                      ___flsub@a 0085  
                    ___flsub@b 0081                  __pcstackBANK0 0060                  __pcstackBANK1 017B  
            __size_of___xxtofl 01B4              __size_of_lcd_init 0078              __size_of_lcd_goto 000E  
            __size_of_lcd_puts 0060                      __pnvBANK0 00F9                      __pintcode 0008  
                __pmediumconst 7E46                       ?___fladd 0071                       ?___fldiv 0023  
                     ?___awdiv 000F                       ?___flneg 000F                       ?___awmod 000F  
                     ?___flmul 003C                       ?___flsub 0081                       ?___fltol 0071  
                    _lcd_clear 354C              __size_of_vfprintf 0062                      _lcd_write 33E8  
                     ?_isdigit 000F                       ?_isspace 000F                       ?_isupper 000F  
                     ?_sprintf 017B                       ?_tolower 0015                 __size_of_fputc 00CA  
               __size_of_fputs 0044                       ?_strncmp 000F                 __size_of_putch 0002  
               ___wmul@product 0013                       i2u503_40 0030                       i2u503_41 002C  
                     i2u504_40 009C                       i2u504_41 0098                       i2u505_40 00B0  
                     i2u505_41 00AC                       i2u506_40 00DA                       i2u506_41 00D6  
                    _prescaler 0177                     ?_lcd_clear 0001                      _vfpfcnvrt 0D5E  
                   _ADCON0bits 000FC2                     ?_lcd_write 0001              ___wmul@multiplier 000F  
                     i2___wmul 3526                      lcd_puts@s 0011                     vfpfcnvrt@c 00E4  
                   vfpfcnvrt@f 00DD                      copy_data0 3048                      copy_data1 3068  
                     __Hrparam 0000                     vfprintf@ap 00E9                       __Lrparam 0000  
                   vfprintf@fp 00E5               __size_of___fladd 04C2               __size_of___fldiv 039A  
             __size_of___awdiv 00C4               __size_of___flneg 0038               __size_of___awmod 00B0  
             __size_of___flmul 042C               __size_of___flsub 0048               __size_of___fltol 0108  
        i2___wmul@multiplicand 0003                     ?_vfpfcnvrt 00CD             ___fpclassifyf@F465 010A  
                   sprintf@fmt 017D                       ___xxtofl 24B4                       _atoi$945 001E  
                     _atoi$946 0022                       _atoi$947 0020               __size_of_isdigit 0038  
                     _gain_lcd 0112               __size_of_isspace 0052                       __ptext10 34CA  
                     __ptext11 33A4                       __ptext20 2F8A                       __ptext12 2BDA  
                     __ptext21 2E2A                       __ptext13 3590                       __ptext30 357C  
                     __ptext22 2CA4                       __ptext14 229E                       __ptext31 33E8  
                     __ptext23 2668                       __ptext15 2A06                       __ptext32 2EDA  
                     __ptext24 330A                       __ptext16 335C                       __ptext33 27F8  
                     __ptext25 3492                       __ptext17 12CA                       __ptext34 178C  
                     __ptext26 3500                       __ptext18 345A                       __ptext35 1BB8  
                     __ptext27 31FA                       __ptext19 2900                       __ptext36 24B4  
                     __ptext28 30C0                       __ptext29 354C                       __ptext38 3526  
             __size_of_isupper 0038            _calc_time_interrupt 2EDA                       _lcd_init 30C0  
                     _lcd_goto 357C                       _lcd_puts 31FA               __size_of_sprintf 0054  
             __size_of_tolower 0060                     strcpy@dest 000F               __size_of_strncmp 00D6  
                __size_of_atoi 0190                  __size_of_main 034C                       _new_freq 0044  
                     efgtoa@fp 0089                       efgtoa@ne 00A5                       efgtoa@pp 00A3  
                     efgtoa@ou 00A9                       isa$xinst 000000           ?_calc_time_interrupt 007B  
                     int$flags 0051                       _vfprintf 3138                    ??_lcd_clear 0011  
                  _isspace$976 0015                    ??_lcd_write 000F                       isdigit@c 000F  
                     intlevel2 0000                      sprintf@ap 0183                       isspace@c 000F  
                    strcpy@src 0011                       isupper@c 000F                      strncmp@_l 000F  
                    strncmp@_r 0011          ??_calc_time_interrupt 0044  calc_time_interrupt@freq_value 007B  
                  efgtoa@nmode 00B5                    ??_vfpfcnvrt 00D3                  _vfpfcnvrt$911 00DB  
                _vfpfcnvrt$906 00D7                  _vfpfcnvrt$907 00D9                       sprintf@f 0185  
                     tolower@c 0015                       sprintf@s 017B         __size_of___fpclassifyf 00FE  
                     strncmp@l 0016                       strncmp@n 0013                       strncmp@r 0018  
                ___fladd@signs 007D                   ___fladd@aexp 007E                   ___fladd@bexp 007F  
